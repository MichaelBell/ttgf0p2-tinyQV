
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.56+197 (git sha1 d4c4b2106, aarch64-linux-gnu-g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read -define PURE_RTL SYNTH_FPGA NO_SCRATCH' --

-- Running command `read -sv tt_wrapper.v ../src/project.v ../src/peri*.v ../src/user_peripherals/*.v ../src/user_peripherals/*/*.v ../src/tinyQV/cpu/*.v ../src/tinyQV/peri/uart/uart_tx.v ../src/tinyQV/peri/uart/uart_rx.v ; synth_ecp5 -top tt_ecp5_wrapper -json tinyqv.ys' --

1. Executing Verilog-2005 frontend: tt_wrapper.v
Parsing SystemVerilog input from `tt_wrapper.v' to AST representation.
tt_wrapper.v:23: Warning: Yosys has only limited support for tri-state logic at the moment.
Storing AST representation for module `$abstract\tt_ecp5_wrapper'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../src/project.v
Parsing SystemVerilog input from `../src/project.v' to AST representation.
Storing AST representation for module `$abstract\tt_um_MichaelBell_tinyQV'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../src/peri_byte_empty.v
Parsing SystemVerilog input from `../src/peri_byte_empty.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_byte_empty'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../src/peri_full_empty.v
Parsing SystemVerilog input from `../src/peri_full_empty.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_full_empty'.
Storing AST representation for module `$abstract\tqvp_full_empty_no_irq'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../src/peripherals.v
Parsing SystemVerilog input from `../src/peripherals.v' to AST representation.
Storing AST representation for module `$abstract\tinyQV_peripherals'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../src/user_peripherals/game_pmod.v
Parsing SystemVerilog input from `../src/user_peripherals/game_pmod.v' to AST representation.
Storing AST representation for module `$abstract\gamepad_pmod_driver'.
Storing AST representation for module `$abstract\tqvp_game_pmod'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../src/user_peripherals/spi.v
Parsing SystemVerilog input from `../src/user_peripherals/spi.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_spi_ctrl'.
Storing AST representation for module `$abstract\tqvp_spi_peripheral'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../src/user_peripherals/matt_pwm/matt_pwm.v
Parsing SystemVerilog input from `../src/user_peripherals/matt_pwm/matt_pwm.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_matt_pwm'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../src/user_peripherals/matt_pwm/pwm.v
Parsing SystemVerilog input from `../src/user_peripherals/matt_pwm/pwm.v' to AST representation.
Storing AST representation for module `$abstract\pwm'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../src/user_peripherals/matt_pwm/pwm_strobe_gen.v
Parsing SystemVerilog input from `../src/user_peripherals/matt_pwm/pwm_strobe_gen.v' to AST representation.
Storing AST representation for module `$abstract\pwm_strobe_gen'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../src/user_peripherals/uart/peri_uart.v
Parsing SystemVerilog input from `../src/user_peripherals/uart/peri_uart.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_uart_wrapper'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../src/user_peripherals/uart/uart_rx.v
Parsing SystemVerilog input from `../src/user_peripherals/uart/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_uart_rx'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../src/user_peripherals/uart/uart_tx.v
Parsing SystemVerilog input from `../src/user_peripherals/uart/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\tqvp_uart_tx'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/alu.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/alu.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_alu'.
Storing AST representation for module `$abstract\tinyqv_shifter'.
Storing AST representation for module `$abstract\tinyqv_mul'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/buffer.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/buffer.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_buffer'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/core.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/core.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_core'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/counter.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/counter.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_counter'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/cpu.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/cpu.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_cpu'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/decode.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/decode.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_decoder'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/internal_ram.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/internal_ram.v' to AST representation.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/latch_reg.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/latch_reg.v' to AST representation.
Storing AST representation for module `$abstract\latch_reg_n'.
Storing AST representation for module `$abstract\latch_reg_p'.
Storing AST representation for module `$abstract\latch_reg32_n'.
Storing AST representation for module `$abstract\latch_reg32_p'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/mem_ctrl.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/mem_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_mem_ctrl'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/qspi_ctrl.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/qspi_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\qspi_controller'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/qspi_flash.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/qspi_flash.v' to AST representation.
Storing AST representation for module `$abstract\qspi_flash_controller'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/qspi_setup.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/qspi_setup.v' to AST representation.
Storing AST representation for module `$abstract\qspi_setup'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/register.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/register.v' to AST representation.
Storing AST representation for module `$abstract\tinyqv_registers'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/time.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/time.v' to AST representation.
Storing AST representation for module `$abstract\tinyQV_time'.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: ../src/tinyQV/cpu/tinyqv.v
Parsing SystemVerilog input from `../src/tinyQV/cpu/tinyqv.v' to AST representation.
Storing AST representation for module `$abstract\tinyQV'.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: ../src/tinyQV/peri/uart/uart_tx.v
Parsing SystemVerilog input from `../src/tinyQV/peri/uart/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: ../src/tinyQV/peri/uart/uart_rx.v
Parsing SystemVerilog input from `../src/tinyQV/peri/uart/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

31. Executing SYNTH_ECP5 pass.

31.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

31.2. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

31.3. Executing HIERARCHY pass (managing design hierarchy).

31.4. Executing AST frontend in derive mode using pre-parsed AST for module `\tt_ecp5_wrapper'.
Generating RTLIL representation for module `\tt_ecp5_wrapper'.

31.4.1. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper

31.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\tt_um_MichaelBell_tinyQV'.
Generating RTLIL representation for module `\tt_um_MichaelBell_tinyQV'.

31.4.3. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Parameter \BIT_RATE = 4000000
Parameter \CLK_HZ = 28000000

31.4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \BIT_RATE = 4000000
Parameter \CLK_HZ = 28000000
Generating RTLIL representation for module `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx'.
Parameter \CLOCK_MHZ = 28

31.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyQV_peripherals'.
Parameter \CLOCK_MHZ = 28
Generating RTLIL representation for module `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100'.
Warning: Replacing memory \gpio_out_func_sel with list of registers. See ../src/peripherals.v:153

31.4.6. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyQV'.
Generating RTLIL representation for module `\tinyQV'.

31.4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\qspi_setup'.
Generating RTLIL representation for module `\qspi_setup'.

31.4.8. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Used module:         $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx
Used module:         $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:         \tinyQV
Used module:         \qspi_setup

31.4.9. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_mem_ctrl'.
Generating RTLIL representation for module `\tinyqv_mem_ctrl'.

31.4.10. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_cpu'.
Generating RTLIL representation for module `\tinyqv_cpu'.

31.4.11. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_byte_empty'.
Generating RTLIL representation for module `\tqvp_byte_empty'.

31.4.12. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_matt_pwm'.
Generating RTLIL representation for module `\tqvp_matt_pwm'.

31.4.13. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_spi_peripheral'.
Generating RTLIL representation for module `\tqvp_spi_peripheral'.

31.4.14. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_full_empty_no_irq'.
Generating RTLIL representation for module `\tqvp_full_empty_no_irq'.

31.4.15. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_full_empty'.
Generating RTLIL representation for module `\tqvp_full_empty'.

31.4.16. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_game_pmod'.
Generating RTLIL representation for module `\tqvp_game_pmod'.
Parameter \CLOCK_MHZ = 28

31.4.17. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_uart_wrapper'.
Parameter \CLOCK_MHZ = 28
Generating RTLIL representation for module `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100'.
Reprocessing module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100 because instantiated module tqvp_byte_empty has become available.
Generating RTLIL representation for module `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100'.
Warning: Replacing memory \gpio_out_func_sel with list of registers. See ../src/peripherals.v:153

31.4.18. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Used module:         $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx
Used module:         $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:             \tqvp_byte_empty
Used module:             \tqvp_matt_pwm
Used module:             \tqvp_spi_peripheral
Used module:             \tqvp_full_empty_no_irq
Used module:             \tqvp_full_empty
Used module:             \tqvp_game_pmod
Used module:         \tinyQV
Used module:             \tinyqv_mem_ctrl
Used module:             \tinyqv_cpu
Used module:         \qspi_setup
Parameter \CLOCK_MHZ = 28
Found cached RTLIL representation for module `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100'.

31.4.19. Executing AST frontend in derive mode using pre-parsed AST for module `\gamepad_pmod_driver'.
Generating RTLIL representation for module `\gamepad_pmod_driver'.

31.4.20. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_spi_ctrl'.
Generating RTLIL representation for module `\tqvp_spi_ctrl'.
Parameter \WIDTH = 8

31.4.21. Executing AST frontend in derive mode using pre-parsed AST for module `\pwm'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 16

31.4.22. Executing AST frontend in derive mode using pre-parsed AST for module `\pwm_strobe_gen'.
Parameter \WIDTH = 16
Generating RTLIL representation for module `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000'.

31.4.23. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyQV_time'.
Generating RTLIL representation for module `\tinyQV_time'.
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/time.v:46.33-46.33> [0x555574ed5b10]
      AST_RANGE <../src/tinyQV/cpu/time.v:46.27-46.33> [0x55557519b7e0] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.28-46.30> [0x555574ef2cd0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/time.v:46.31-46.32> [0x555575acd4e0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/time.v:46.19-46.86> [0x5555757719d0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/time.v:46.18-46.18> [0x555575717880] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.35-46.47> [0x555575715650] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.39-46.46> [0x55557567e950] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/time.v:46.48-46.84> [0x5555756ef4f0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/time.v:46.68-46.82> [0x55557541cdd0]
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.68-46.76> [0x5555756abb00] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.76-46.82> [0x5555756df770]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.77-46.79> [0x5555756f73a0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.80-46.81> [0x555575acca40] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/time.v:46.53-46.61> [0x555574eb00a0] str='\mtimecmp'
              AST_RANGE <../src/tinyQV/cpu/time.v:46.61-46.66> [0x5555756c4b70]
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.62-46.63> [0x5555756f8c50] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/time.v:46.64-46.65> [0x555575acec80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4

31.4.24. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_core'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4
Generating RTLIL representation for module `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core'.

31.4.25. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_decoder'.
Generating RTLIL representation for module `\tinyqv_decoder'.

31.4.26. Executing AST frontend in derive mode using pre-parsed AST for module `\qspi_controller'.
Generating RTLIL representation for module `\qspi_controller'.

31.4.27. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Used module:         $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx
Used module:         $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:             \tqvp_byte_empty
Used module:             \tqvp_matt_pwm
Used module:                 $paramod\pwm\WIDTH=s32'00000000000000000000000000001000
Used module:                 $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000
Used module:             \tqvp_spi_peripheral
Used module:                 \tqvp_spi_ctrl
Used module:             \tqvp_full_empty_no_irq
Used module:             \tqvp_full_empty
Used module:             \tqvp_game_pmod
Used module:                 \gamepad_pmod_driver
Used module:             $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:         \tinyQV
Used module:             \tinyqv_mem_ctrl
Used module:                 \qspi_controller
Used module:             \tinyqv_cpu
Used module:                 \tinyQV_time
Used module:                 $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core
Used module:                 \tinyqv_decoder
Used module:         \qspi_setup

31.4.28. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_counter'.
Generating RTLIL representation for module `\tinyqv_counter'.
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575acca40]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x5555756abb00] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555756ef4f0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575785030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x555575734db0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x555575715650] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x555575776970] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x55557573f1b0] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x5555756e1eb0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555756e7070]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x5555756f8c50] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557519b7e0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x5555757855b0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575737bd0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555757719d0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555756f73a0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555756e6af0] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x5555756e74d0] bits='00000000000000000000000000000000'(32) signed range=[31:0]
Parameter \OUTPUT_WIDTH = 7

31.4.29. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_counter'.
Parameter \OUTPUT_WIDTH = 7
Generating RTLIL representation for module `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111'.
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/counter.v:33.33-33.33> [0x555575762350]
      AST_RANGE <../src/tinyQV/cpu/counter.v:33.27-33.33> [0x555575a30a40] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.28-33.30> [0x5555751ecad0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.31-33.32> [0x555575c13cf0] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/counter.v:33.19-33.86> [0x5555756ba6f0] str='\i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/counter.v:33.18-33.18> [0x5555751e9d50] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.35-33.47> [0x55557577a430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.39-33.46> [0x555575742070] str='\reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/counter.v:33.48-33.84> [0x555575c75750] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/counter.v:33.68-33.82> [0x5555757287a0]
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.68-33.76> [0x555575ca54e0] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.76-33.82> [0x55557567d950]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.77-33.79> [0x555575a2eeb0] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.80-33.81> [0x555575774610] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/counter.v:33.53-33.61> [0x5555756f3740] str='\register'
              AST_RANGE <../src/tinyQV/cpu/counter.v:33.61-33.66> [0x5555757636f0]
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.62-33.63> [0x5555751ccd80] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                AST_CONSTANT <../src/tinyQV/cpu/counter.v:33.64-33.65> [0x55557575ab80] bits='00000000000000000000000000000000'(32) signed range=[31:0]
Parameter \B_BITS = 16

31.4.30. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_mul'.
Parameter \B_BITS = 16
Generating RTLIL representation for module `$paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000'.

31.4.31. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_shifter'.
Generating RTLIL representation for module `\tinyqv_shifter'.

31.4.32. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_alu'.
Generating RTLIL representation for module `\tinyqv_alu'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4

31.4.33. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_registers'.
Parameter \NUM_REGS = 16
Parameter \REG_ADDR_BITS = 4
Generating RTLIL representation for module `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers'.
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
    AST_CELLARRAY <../src/tinyQV/cpu/register.v:51.45-51.45> [0x555575e01c50]
      AST_RANGE <../src/tinyQV/cpu/register.v:51.39-51.45> [0x555575e01d80] basic_prep range=[31:4]
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.40-51.42> [0x555575e01eb0] bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
        AST_CONSTANT <../src/tinyQV/cpu/register.v:51.43-51.44> [0x555575e02030] bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4
      AST_CELL <../src/tinyQV/cpu/register.v:51.31-51.106> [0x555575e021b0] str='\genblk1[1].genblk1.gen_reg_ra.i_regbuf'
        AST_CELLTYPE <../src/tinyQV/cpu/register.v:51.30-51.30> [0x555575e022e0] str='\tinyqv_buffer'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.47-51.59> [0x555575e02430] str='\X'
          AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.51-51.58> [0x555575e02560] str='\genblk1[1].genblk1.gen_reg_ra.reg_buf'
        AST_ARGUMENT <../src/tinyQV/cpu/register.v:51.60-51.104> [0x555575e026d0] str='\A'
          AST_CONCAT <../src/tinyQV/cpu/register.v:51.84-51.102> [0x555575e02800]
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.84-51.93> [0x555575e02930] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.93-51.102> [0x555575e02a60]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.93-51.96> [0x555575e02b90]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.94-51.95> [0x555575e02cc0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.96-51.102> [0x555575e02e10]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.97-51.99> [0x555575e02f40] bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.100-51.101> [0x555575e030c0] bits='00000000000000000000000000001000'(32) signed range=[31:0] int=8
            AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.65-51.74> [0x555575e03260] str='\registers'
              AST_MULTIRANGE <../src/tinyQV/cpu/register.v:51.74-51.82> [0x555575e03390]
                AST_RANGE <../src/tinyQV/cpu/register.v:51.74-51.77> [0x555575e034c0]
                  AST_IDENTIFIER <../src/tinyQV/cpu/register.v:51.75-51.76> [0x555575e035f0] str='\genblk1[1].i'
                AST_RANGE <../src/tinyQV/cpu/register.v:51.77-51.82> [0x555575e03760]
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.78-51.79> [0x555575e03890] bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
                  AST_CONSTANT <../src/tinyQV/cpu/register.v:51.80-51.81> [0x555575e03a10] bits='00000000000000000000000000000000'(32) signed range=[31:0]
Warning: Replacing memory \registers with list of registers. See ../src/tinyQV/cpu/register.v:45

31.4.34. Executing AST frontend in derive mode using pre-parsed AST for module `\tinyqv_buffer'.
Generating RTLIL representation for module `\tinyqv_buffer'.

31.4.35. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_uart_rx'.
Generating RTLIL representation for module `\tqvp_uart_rx'.

31.4.36. Executing AST frontend in derive mode using pre-parsed AST for module `\tqvp_uart_tx'.
Generating RTLIL representation for module `\tqvp_uart_tx'.

31.4.37. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Used module:         $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx
Used module:         $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:             \tqvp_byte_empty
Used module:             \tqvp_matt_pwm
Used module:                 $paramod\pwm\WIDTH=s32'00000000000000000000000000001000
Used module:                 $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000
Used module:             \tqvp_spi_peripheral
Used module:                 \tqvp_spi_ctrl
Used module:             \tqvp_full_empty_no_irq
Used module:             \tqvp_full_empty
Used module:             \tqvp_game_pmod
Used module:                 \gamepad_pmod_driver
Used module:             $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:                 \tqvp_uart_rx
Used module:                 \tqvp_uart_tx
Used module:         \tinyQV
Used module:             \tinyqv_mem_ctrl
Used module:                 \qspi_controller
Used module:             \tinyqv_cpu
Used module:                 \tinyQV_time
Used module:                     \tinyqv_buffer
Used module:                     \tinyqv_counter
Used module:                 $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core
Used module:                     $paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111
Used module:                     $paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000
Used module:                     \tinyqv_shifter
Used module:                     \tinyqv_alu
Used module:                     $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers
Used module:                 \tinyqv_decoder
Used module:         \qspi_setup

31.4.38. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Used module:     \tt_um_MichaelBell_tinyQV
Used module:         $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx
Used module:         $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:             \tqvp_byte_empty
Used module:             \tqvp_matt_pwm
Used module:                 $paramod\pwm\WIDTH=s32'00000000000000000000000000001000
Used module:                 $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000
Used module:             \tqvp_spi_peripheral
Used module:                 \tqvp_spi_ctrl
Used module:             \tqvp_full_empty_no_irq
Used module:             \tqvp_full_empty
Used module:             \tqvp_game_pmod
Used module:                 \gamepad_pmod_driver
Used module:             $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100
Used module:                 \tqvp_uart_rx
Used module:                 \tqvp_uart_tx
Used module:         \tinyQV
Used module:             \tinyqv_mem_ctrl
Used module:                 \qspi_controller
Used module:             \tinyqv_cpu
Used module:                 \tinyQV_time
Used module:                     \tinyqv_buffer
Used module:                     \tinyqv_counter
Used module:                 $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core
Used module:                     $paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111
Used module:                     $paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000
Used module:                     \tinyqv_shifter
Used module:                     \tinyqv_alu
Used module:                     $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers
Used module:                 \tinyqv_decoder
Used module:         \qspi_setup
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\tinyQV'.
Removing unused module `$abstract\tinyQV_time'.
Removing unused module `$abstract\tinyqv_registers'.
Removing unused module `$abstract\qspi_setup'.
Removing unused module `$abstract\qspi_flash_controller'.
Removing unused module `$abstract\qspi_controller'.
Removing unused module `$abstract\tinyqv_mem_ctrl'.
Removing unused module `$abstract\latch_reg32_p'.
Removing unused module `$abstract\latch_reg32_n'.
Removing unused module `$abstract\latch_reg_p'.
Removing unused module `$abstract\latch_reg_n'.
Removing unused module `$abstract\tinyqv_decoder'.
Removing unused module `$abstract\tinyqv_cpu'.
Removing unused module `$abstract\tinyqv_counter'.
Removing unused module `$abstract\tinyqv_core'.
Removing unused module `$abstract\tinyqv_buffer'.
Removing unused module `$abstract\tinyqv_mul'.
Removing unused module `$abstract\tinyqv_shifter'.
Removing unused module `$abstract\tinyqv_alu'.
Removing unused module `$abstract\tqvp_uart_tx'.
Removing unused module `$abstract\tqvp_uart_rx'.
Removing unused module `$abstract\tqvp_uart_wrapper'.
Removing unused module `$abstract\pwm_strobe_gen'.
Removing unused module `$abstract\pwm'.
Removing unused module `$abstract\tqvp_matt_pwm'.
Removing unused module `$abstract\tqvp_spi_peripheral'.
Removing unused module `$abstract\tqvp_spi_ctrl'.
Removing unused module `$abstract\tqvp_game_pmod'.
Removing unused module `$abstract\gamepad_pmod_driver'.
Removing unused module `$abstract\tinyQV_peripherals'.
Removing unused module `$abstract\tqvp_full_empty_no_irq'.
Removing unused module `$abstract\tqvp_full_empty'.
Removing unused module `$abstract\tqvp_byte_empty'.
Removing unused module `$abstract\tt_um_MichaelBell_tinyQV'.
Removing unused module `$abstract\tt_ecp5_wrapper'.
Removed 37 unused modules.
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.multiplier ($paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.i_shift (tinyqv_shifter).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.i_alu (tinyqv_alu).
Mapping positional arguments of cell $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.i_registers ($paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers).

31.5. Executing PROC pass (convert processes to netlists).

31.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

31.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_tx.v:123$2125 in module tqvp_uart_tx.
Marked 5 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_tx.v:112$2112 in module tqvp_uart_tx.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_tx.v:99$2108 in module tqvp_uart_tx.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_tx.v:86$2100 in module tqvp_uart_tx.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_rx.v:131$2092 in module tqvp_uart_rx.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_rx.v:122$2080 in module tqvp_uart_rx.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_rx.v:109$2073 in module tqvp_uart_rx.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/uart/uart_rx.v:98$2071 in module tqvp_uart_rx.
Removed 1 dead cases from process $proc$../src/tinyQV/cpu/register.v:79$2039 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:79$2039 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Removed 1 dead cases from process $proc$../src/tinyQV/cpu/register.v:78$2036 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:78$2036 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2035 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2028 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2021 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2014 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2007 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$2000 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1993 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1986 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1979 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1972 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1965 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:64$1958 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/register.v:43$1950 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/alu.v:53$1939 in module tinyqv_alu.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/alu.v:43$1936 in module tinyqv_alu.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/alu.v:88$1926 in module tinyqv_shifter.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/counter.v:23$1913 in module $paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/counter.v:23$1906 in module tinyqv_counter.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898 in module qspi_controller.
Marked 4 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:249$1896 in module qspi_controller.
Marked 5 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883 in module qspi_controller.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:221$1877 in module qspi_controller.
Marked 14 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826 in module qspi_controller.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_ctrl.v:100$1814 in module qspi_controller.
Removed 1 dead cases from process $proc$../src/tinyQV/cpu/decode.v:59$1768 in module tinyqv_decoder.
Marked 21 switch rules as full_case in process $proc$../src/tinyQV/cpu/decode.v:59$1768 in module tinyqv_decoder.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:449$1735 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 12 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:413$1707 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 8 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:388$1695 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 3 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:375$1691 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 5 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:328$1668 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:295$1658 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:271$1650 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 5 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:247$1639 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 7 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:217$1617 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:208$1613 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 11 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:161$1585 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:148$1571 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:127$1564 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/core.v:101$1549 in module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/time.v:69$1524 in module tinyQV_time.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/time.v:49$1513 in module tinyQV_time.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508 in module $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/matt_pwm/pwm.v:16$1504 in module $paramod\pwm\WIDTH=s32'00000000000000000000000000001000.
Marked 3 switch rules as full_case in process $proc$../src/user_peripherals/spi.v:55$1492 in module tqvp_spi_ctrl.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/spi.v:43$1490 in module tqvp_spi_ctrl.
Removed 1 dead cases from process $proc$../src/peripherals.v:140$1424 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:140$1424 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1354 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1354 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1348 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1337 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1337 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1331 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1320 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1320 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1314 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1303 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1303 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1297 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1286 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1286 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1280 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1269 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1269 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1263 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1252 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1252 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1246 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 6 dead cases from process $proc$../src/peripherals.v:161$1235 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/peripherals.v:161$1235 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:151$1229 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:183$1228 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:173$1224 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:130$1220 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Removed 1 dead cases from process $proc$../src/peripherals.v:104$1185 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 4 switch rules as full_case in process $proc$../src/peripherals.v:104$1185 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/peripherals.v:76$1176 in module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/game_pmod.v:115$997 in module tqvp_game_pmod.
Marked 3 switch rules as full_case in process $proc$../src/user_peripherals/spi.v:127$975 in module tqvp_spi_peripheral.
Marked 3 switch rules as full_case in process $proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964 in module tqvp_matt_pwm.
Marked 7 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:393$901 in module tinyqv_cpu.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:322$863 in module tinyqv_cpu.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:314$846 in module tinyqv_cpu.
Marked 5 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:277$833 in module tinyqv_cpu.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:267$830 in module tinyqv_cpu.
Marked 4 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:242$819 in module tinyqv_cpu.
Marked 4 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:225$801 in module tinyqv_cpu.
Marked 4 switch rules as full_case in process $proc$../src/tinyQV/cpu/cpu.v:166$779 in module tinyqv_cpu.
Marked 3 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:187$726 in module tinyqv_mem_ctrl.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:179$722 in module tinyqv_mem_ctrl.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:164$699 in module tinyqv_mem_ctrl.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:150$690 in module tinyqv_mem_ctrl.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:140$688 in module tinyqv_mem_ctrl.
Marked 1 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:105$678 in module tinyqv_mem_ctrl.
Marked 9 switch rules as full_case in process $proc$../src/tinyQV/cpu/mem_ctrl.v:70$661 in module tinyqv_mem_ctrl.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/cpu/qspi_setup.v:39$618 in module qspi_setup.
Marked 2 switch rules as full_case in process $proc$../src/user_peripherals/uart/peri_uart.v:100$1032 in module $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/uart/peri_uart.v:50$1022 in module $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 1 switch rules as full_case in process $proc$../src/user_peripherals/uart/peri_uart.v:37$1017 in module $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.
Marked 3 switch rules as full_case in process $proc$../src/tinyQV/peri/uart/uart_tx.v:135$313 in module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
Marked 5 switch rules as full_case in process $proc$../src/tinyQV/peri/uart/uart_tx.v:124$300 in module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/peri/uart/uart_tx.v:111$296 in module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
Marked 2 switch rules as full_case in process $proc$../src/tinyQV/peri/uart/uart_tx.v:98$288 in module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
Marked 1 switch rules as full_case in process $proc$../src/project.v:288$274 in module tt_um_MichaelBell_tinyQV.
Marked 2 switch rules as full_case in process $proc$../src/project.v:277$270 in module tt_um_MichaelBell_tinyQV.
Marked 1 switch rules as full_case in process $proc$../src/project.v:241$261 in module tt_um_MichaelBell_tinyQV.
Marked 2 switch rules as full_case in process $proc$../src/project.v:231$258 in module tt_um_MichaelBell_tinyQV.
Removed a total of 53 dead cases.

31.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 29 redundant assignments.
Promoted 209 assignments to connections.

31.5.4. Executing PROC_INIT pass (extract init attributes).

31.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rstn in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:375$1691'.

31.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~428 debug messages>

31.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:123$2125'.
     1/1: $0\txd_reg[0:0]
Creating decoders for process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
     1/7: $5\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2123
     2/7: $4\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2121
     3/7: $3\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2120
     4/7: $2\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2119
     5/7: $0\fsm_state[3:0]
     6/7: $1\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.tx_en[0:0]$2117
     7/7: $1\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2116
Creating decoders for process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:99$2108'.
     1/1: $0\cycle_counter[12:0]
Creating decoders for process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:86$2100'.
     1/1: $0\data_to_send[7:0]
Creating decoders for process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:131$2092'.
     1/1: $0\uart_rts[0:0]
Creating decoders for process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:122$2080'.
     1/3: $2\next_fsm_state$func$../src/user_peripherals/uart/uart_rx.v:126$2061.$result[3:0]$2084
     2/3: $0\fsm_state[3:0]
     3/3: $1\next_fsm_state$func$../src/user_peripherals/uart/uart_rx.v:126$2061.$result[3:0]$2083
Creating decoders for process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:109$2073'.
     1/1: $0\cycle_counter[12:0]
Creating decoders for process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:98$2071'.
     1/1: $0\bit_sample[0:0]
Creating decoders for process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:90$2066'.
     1/1: $0\recieved_data[7:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2060'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2059'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2058'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2057'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2056'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2055'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2054'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2053'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2052'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2051'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2050'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:58$2048'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:56$2045'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2044'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:54$2043'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:38$2042'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:79$2039'.
     1/1: $1$mem2reg_rd$\reg_access$../src/tinyQV/cpu/register.v:79$1946_DATA[3:0]$2041
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:78$2036'.
     1/1: $1$mem2reg_rd$\reg_access$../src/tinyQV/cpu/register.v:78$1945_DATA[3:0]$2038
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2035'.
     1/2: $0\registers[15][31:0] [31:4]
     2/2: $0\registers[15][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2028'.
     1/2: $0\registers[14][31:0] [31:4]
     2/2: $0\registers[14][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2021'.
     1/2: $0\registers[13][31:0] [31:4]
     2/2: $0\registers[13][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2014'.
     1/2: $0\registers[12][31:0] [31:4]
     2/2: $0\registers[12][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2007'.
     1/2: $0\registers[11][31:0] [31:4]
     2/2: $0\registers[11][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2000'.
     1/2: $0\registers[10][31:0] [31:4]
     2/2: $0\registers[10][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1993'.
     1/2: $0\registers[9][31:0] [31:4]
     2/2: $0\registers[9][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1986'.
     1/2: $0\registers[8][31:0] [31:4]
     2/2: $0\registers[8][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1979'.
     1/2: $0\registers[7][31:0] [31:4]
     2/2: $0\registers[7][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1972'.
     1/2: $0\registers[6][31:0] [31:4]
     2/2: $0\registers[6][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1965'.
     1/2: $0\registers[5][31:0] [31:4]
     2/2: $0\registers[5][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1958'.
     1/2: $0\registers[2][31:0] [31:4]
     2/2: $0\registers[2][31:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:52$1951'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:43$1950'.
     1/1: $0\registers[1][3:0]
Creating decoders for process `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:53$1939'.
     1/2: $2\cmp_res[0:0]
     2/2: $1\cmp_res[0:0]
Creating decoders for process `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:43$1936'.
     1/1: $1\d[3:0]
Creating decoders for process `\tinyqv_shifter.$proc$../src/tinyQV/cpu/alu.v:88$1926'.
     1/1: $1\dr[3:0]
Creating decoders for process `$paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.$proc$../src/tinyQV/cpu/alu.v:109$1918'.
Creating decoders for process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:34$1915'.
Creating decoders for process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:23$1913'.
     1/2: $0\cy[0:0]
     2/2: $0\register[3:0]
Creating decoders for process `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:34$1908'.
Creating decoders for process `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:23$1906'.
     1/2: $0\cy[0:0]
     2/2: $0\register[3:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:288$1900'.
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898'.
     1/2: $0\last_ram_b_sel[0:0]
     2/2: $0\last_ram_a_sel[0:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:249$1896'.
     1/4: $4\spi_data_out[3:0]
     2/4: $3\spi_data_out[3:0]
     3/4: $2\spi_data_out[3:0]
     4/4: $1\spi_data_out[3:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883'.
     1/2: $0\spi_in_buffer[3:0]
     2/2: $0\data[7:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:221$1877'.
     1/1: $0\addr[23:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
     1/11: $0\data_req[0:0]
     2/11: $0\data_ready[0:0]
     3/11: $0\read_cycles_count[1:0]
     4/11: $0\spi_clk_pos[0:0]
     5/11: $0\nibbles_remaining[2:0]
     6/11: $0\is_writing[0:0]
     7/11: $0\fsm_state[2:0]
     8/11: $0\spi_ram_b_select[0:0]
     9/11: $0\spi_ram_a_select[0:0]
    10/11: $0\spi_flash_select[0:0]
    11/11: $0\spi_data_oe[3:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:114$1824'.
     1/2: $0\spi_clk_use_neg[0:0]
     2/2: $0\delay_cycles_cfg[1:0]
Creating decoders for process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:100$1814'.
     1/1: $0\stop_txn_reg[0:0]
Creating decoders for process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
     1/84: $5\is_ret[0:0]
     2/84: $12\imm[31:0]
     3/84: $4\is_system[0:0]
     4/84: $4\is_ret[0:0]
     5/84: $5\rd[3:0]
     6/84: $5\rs1[3:0]
     7/84: $4\is_jalr[0:0]
     8/84: $3\is_ret[0:0]
     9/84: $4\rd[3:0]
    10/84: $4\rs1[3:0]
    11/84: $3\is_system[0:0]
    12/84: $3\is_jalr[0:0]
    13/84: $11\imm[31:0]
    14/84: $4\rs2[3:0]
    15/84: $5\is_alu_reg[0:0]
    16/84: $10\alu_op[3:0]
    17/84: $10\imm[31:0]
    18/84: $9\alu_op[3:0]
    19/84: $8\alu_op[3:0]
    20/84: $9\imm[31:0]
    21/84: $5\is_alu_imm[0:0]
    22/84: $4\is_alu_reg[0:0]
    23/84: $7\alu_op[3:0]
    24/84: $6\alu_op[3:0]
    25/84: $4\is_alu_imm[0:0]
    26/84: $3\is_alu_reg[0:0]
    27/84: $8\imm[31:0]
    28/84: $3\rs1[3:0]
    29/84: $7\imm[31:0]
    30/84: $3\is_alu_imm[0:0]
    31/84: $3\is_lui[0:0]
    32/84: $3\rs2[3:0]
    33/84: $5\mem_op[2:0]
    34/84: $3\is_store[0:0]
    35/84: $3\rd[3:0]
    36/84: $3\is_load[0:0]
    37/84: $2\rd[3:0]
    38/84: $2\rs1[3:0]
    39/84: $6\imm[31:0]
    40/84: $2\is_alu_imm[0:0]
    41/84: $2\is_ret[0:0]
    42/84: $4\additional_mem_ops[2:0]
    43/84: $2\rs2[3:0]
    44/84: $4\mem_op[2:0]
    45/84: $5\alu_op[3:0]
    46/84: $2\is_system[0:0]
    47/84: $2\is_jal[0:0]
    48/84: $2\is_jalr[0:0]
    49/84: $2\is_branch[0:0]
    50/84: $2\is_lui[0:0]
    51/84: $2\is_alu_reg[0:0]
    52/84: $2\is_store[0:0]
    53/84: $2\is_load[0:0]
    54/84: $2\mem_op_increment_reg[0:0]
    55/84: $3\additional_mem_ops[2:0]
    56/84: $3\mem_op[2:0]
    57/84: $2\additional_mem_ops[2:0]
    58/84: $2\mem_op[2:0]
    59/84: $4\alu_op[3:0]
    60/84: $3\alu_op[3:0]
    61/84: $2\alu_op[3:0]
    62/84: $5\imm[31:0]
    63/84: $4\imm[31:0]
    64/84: $3\imm[31:0]
    65/84: $2\imm[31:0]
    66/84: $1\rd[3:0]
    67/84: $1\rs2[3:0]
    68/84: $1\rs1[3:0]
    69/84: $1\mem_op_increment_reg[0:0]
    70/84: $1\additional_mem_ops[2:0]
    71/84: $1\mem_op[2:0]
    72/84: $1\alu_op[3:0]
    73/84: $1\imm[31:0]
    74/84: $1\is_system[0:0]
    75/84: $1\is_jal[0:0]
    76/84: $1\is_jalr[0:0]
    77/84: $1\is_branch[0:0]
    78/84: $1\is_lui[0:0]
    79/84: $1\is_alu_reg[0:0]
    80/84: $1\is_store[0:0]
    81/84: $1\is_auipc[0:0]
    82/84: $1\is_alu_imm[0:0]
    83/84: $1\is_load[0:0]
    84/84: $1\is_ret[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:449$1735'.
     1/1: $1\csr_read[3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
     1/5: $0\mie[8:0] [7:4]
     2/5: $0\mie[8:0] [3:0]
     3/5: $0\mie[8:0] [8]
     4/5: $0\mip_reg[1:0]
     5/5: $0\last_interrupt_req[1:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:388$1695'.
     1/2: $0\mstatus_mie[0:0]
     2/2: $0\mstatus_mpie[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:375$1691'.
     1/1: $0\mstatus_mte[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:361$1683'.
     1/2: $0\mepc[23:0] [23:20]
     2/2: $0\mepc[23:0] [19:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:355$1674'.
     1/1: $0\is_double_fault_r[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:328$1668'.
     1/2: $0\mcause[5:0] [5]
     2/2: $0\mcause[5:0] [4:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:305$1665'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:295$1658'.
     1/1: $0\time_hi[2:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:271$1650'.
     1/1: $1\data_out[3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:264$1648'.
     1/1: $0\tmp_data[31:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:247$1639'.
     1/5: $1\tmp_data_shift[0:0]
     2/5: $4\tmp_data_in[3:0]
     3/5: $3\tmp_data_in[3:0]
     4/5: $2\tmp_data_in[3:0]
     5/5: $1\tmp_data_in[3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:234$1631'.
     1/1: $0\load_done[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:217$1617'.
     1/7: $7\instr_complete[0:0]
     2/7: $6\instr_complete[0:0]
     3/7: $5\instr_complete[0:0]
     4/7: $4\instr_complete[0:0]
     5/7: $3\instr_complete[0:0]
     6/7: $2\instr_complete[0:0]
     7/7: $1\instr_complete[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:208$1613'.
     1/1: $0\cycle[1:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:161$1585'.
     1/20: $11\data_rd[3:0]
     2/20: $9\wr_en[0:0]
     3/20: $10\data_rd[3:0]
     4/20: $8\wr_en[0:0]
     5/20: $9\data_rd[3:0]
     6/20: $7\wr_en[0:0]
     7/20: $8\data_rd[3:0]
     8/20: $7\data_rd[3:0]
     9/20: $6\wr_en[0:0]
    10/20: $6\data_rd[3:0]
    11/20: $5\wr_en[0:0]
    12/20: $5\data_rd[3:0]
    13/20: $4\wr_en[0:0]
    14/20: $4\data_rd[3:0]
    15/20: $3\wr_en[0:0]
    16/20: $3\data_rd[3:0]
    17/20: $2\data_rd[3:0]
    18/20: $2\wr_en[0:0]
    19/20: $1\data_rd[3:0]
    20/20: $1\wr_en[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:158$1584'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:148$1571'.
     1/1: $1\load_top_bit_next[0:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:127$1564'.
     1/2: $0\shift_amt[4:0] [4]
     2/2: $0\shift_amt[4:0] [3:0]
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:119$1563'.
Creating decoders for process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:101$1549'.
     1/1: $1\alu_cycles[0:0]
Creating decoders for process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:69$1524'.
     1/1: $0\time_pulse_r[0:0]
Creating decoders for process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:65$1521'.
     1/1: $0\timer_interrupt[0:0]
Creating decoders for process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:61$1518'.
Creating decoders for process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:49$1513'.
     1/1: $0\mtimecmp[3:0]
Creating decoders for process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:47$1512'.
Creating decoders for process `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.$proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508'.
     1/2: $0\out[0:0]
     2/2: $0\count[15:0]
Creating decoders for process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:23$1506'.
Creating decoders for process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:16$1504'.
     1/1: $0\count[7:0]
Creating decoders for process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
     1/9: $0\data[7:0] [7:1]
     2/9: $0\data[7:0] [0]
     3/9: $0\spi_select[0:0]
     4/9: $0\busy[0:0]
     5/9: $0\spi_dc[0:0]
     6/9: $0\bits_remaining[3:0]
     7/9: $0\end_txn_reg[0:0]
     8/9: $0\clock_count[6:0]
     9/9: $0\spi_clk_out[0:0]
Creating decoders for process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:43$1490'.
     1/2: $0\clock_divider[6:0]
     2/2: $0\read_latency[0:0]
Creating decoders for process `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
     1/2: $0\data_reg[23:0]
     2/2: $0\shift_reg[23:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:499$1483'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:493$1482'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:484$1481'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:478$1480'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:470$1479'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:464$1478'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:455$1477'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:449$1476'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:440$1475'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:434$1474'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:425$1473'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:419$1472'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:410$1471'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:404$1470'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:395$1469'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:389$1468'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:378$1467'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:376$1466'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:369$1465'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:361$1464'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:359$1463'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:352$1462'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:344$1461'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:342$1460'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:335$1459'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:327$1458'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:325$1457'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:318$1456'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:308$1455'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:306$1454'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:299$1453'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:289$1452'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:287$1451'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:280$1450'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:270$1449'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:268$1448'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:261$1447'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:251$1446'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:249$1445'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:242$1444'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:231$1443'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:229$1442'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:222$1441'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:211$1440'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:209$1439'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:202$1438'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:146$1437'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:145$1436'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
     1/1: $1$mem2reg_rd$\gpio_out_func_sel$../src/peripherals.v:143$1173_DATA[4:0]$1427
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:121$1423'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:120$1422'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:119$1421'.
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1172_DATA[7:0]$1364
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363
     3/7: $1\uo_out_comb[7:7]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1360
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_ADDR[2:0]$1359
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1172_DATA[7:0]$1362
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1172_ADDR[3:0]$1361
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1348'.
     1/1: $0\gpio_out_func_sel[7][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1170_DATA[7:0]$1347
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_DATA[7:0]$1346
     3/7: $1\uo_out_comb[6:6]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_DATA[7:0]$1343
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_ADDR[2:0]$1342
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1170_DATA[7:0]$1345
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1170_ADDR[3:0]$1344
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1331'.
     1/1: $0\gpio_out_func_sel[6][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_DATA[7:0]$1330
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_DATA[7:0]$1329
     3/7: $1\uo_out_comb[5:5]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_DATA[7:0]$1326
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_ADDR[2:0]$1325
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_DATA[7:0]$1328
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_ADDR[3:0]$1327
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1314'.
     1/1: $0\gpio_out_func_sel[5][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_DATA[7:0]$1313
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_DATA[7:0]$1312
     3/7: $1\uo_out_comb[4:4]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_DATA[7:0]$1309
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_ADDR[2:0]$1308
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_DATA[7:0]$1311
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_ADDR[3:0]$1310
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1297'.
     1/1: $0\gpio_out_func_sel[4][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_DATA[7:0]$1296
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_DATA[7:0]$1295
     3/7: $1\uo_out_comb[3:3]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_DATA[7:0]$1292
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_ADDR[2:0]$1291
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_DATA[7:0]$1294
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_ADDR[3:0]$1293
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1280'.
     1/1: $0\gpio_out_func_sel[3][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_DATA[7:0]$1279
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_DATA[7:0]$1278
     3/7: $1\uo_out_comb[2:2]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_DATA[7:0]$1275
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_ADDR[2:0]$1274
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_DATA[7:0]$1277
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_ADDR[3:0]$1276
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1263'.
     1/1: $0\gpio_out_func_sel[2][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_DATA[7:0]$1262
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_DATA[7:0]$1261
     3/7: $1\uo_out_comb[1:1]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_DATA[7:0]$1258
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_ADDR[2:0]$1257
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_DATA[7:0]$1260
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_ADDR[3:0]$1259
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1246'.
     1/1: $0\gpio_out_func_sel[1][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
     1/7: $2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1158_DATA[7:0]$1245
     2/7: $2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_DATA[7:0]$1244
     3/7: $1\uo_out_comb[0:0]
     4/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_DATA[7:0]$1241
     5/7: $1$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_ADDR[2:0]$1240
     6/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1158_DATA[7:0]$1243
     7/7: $1$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1158_ADDR[3:0]$1242
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1229'.
     1/1: $0\gpio_out_func_sel[0][4:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:183$1228'.
     1/1: $0\audio[0:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:173$1224'.
     1/1: $0\audio_func_sel[2:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:130$1220'.
     1/1: $0\gpio_out[7:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
     1/15: $2$mem2reg_rd$\data_ready_from_user_peri$../src/peripherals.v:115$1156_DATA[0:0]$1219
     2/15: $2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218
     3/15: $2$mem2reg_rd$\data_from_simple_peri$../src/peripherals.v:110$1154_DATA[7:0]$1210
     4/15: $1\data_ready_from_peri[0:0]
     5/15: $1\data_from_peri[31:0]
     6/15: $1$mem2reg_rd$\data_from_simple_peri$../src/peripherals.v:110$1154_DATA[7:0]$1198
     7/15: $1$mem2reg_rd$\data_from_simple_peri$../src/peripherals.v:110$1154_ADDR[2:0]$1197
     8/15: $1\peri_simple[7:0]
     9/15: $1$bitselwrite$pos$../src/peripherals.v:109$1047[2:0]$1195
    10/15: $1$mem2reg_rd$\data_ready_from_user_peri$../src/peripherals.v:115$1156_DATA[0:0]$1202
    11/15: $1$mem2reg_rd$\data_ready_from_user_peri$../src/peripherals.v:115$1156_ADDR[3:0]$1201
    12/15: $1$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1200
    13/15: $1$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_ADDR[3:0]$1199
    14/15: $1$bitselwrite$pos$../src/peripherals.v:113$1048[3:0]$1196
    15/15: $1\peri_user[11:0]
Creating decoders for process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
     1/3: $0\data_ready_r[0:0]
     2/3: $0\data_out_hold[0:0]
     3/3: $0\data_out_r[31:0]
Creating decoders for process `\tqvp_game_pmod.$proc$../src/user_peripherals/game_pmod.v:115$997'.
     1/1: $0\enable[0:0]
Creating decoders for process `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
     1/4: $0\tx_data[7:0]
     2/4: $0\end_txn[0:0]
     3/4: $0\dc_ctrl[0:0]
     4/4: $0\tx_pending[0:0]
Creating decoders for process `\tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
     1/3: $0\strobe_period[7:0]
     2/3: $0\pwm_1[7:0]
     3/3: $0\pwm_0[7:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
     1/24: $4$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$935
     2/24: $4$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_DATA[15:0]$934
     3/24: $4$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_ADDR[1:0]$933
     4/24: $3$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$931
     5/24: $3$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_DATA[15:0]$930
     6/24: $3$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_ADDR[1:0]$929
     7/24: $2$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$927
     8/24: $2$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_DATA[15:0]$926
     9/24: $2$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_ADDR[1:0]$925
    10/24: $0\instr_write_offset[2:0]
    11/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN[15:0]$921
    12/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_DATA[15:0]$920
    13/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN[15:0]$919
    14/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_DATA[15:0]$918
    15/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN[15:0]$917
    16/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_DATA[15:0]$916
    17/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$915
    18/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_DATA[15:0]$914
    19/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$924
    20/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_DATA[15:0]$923
    21/24: $1$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_ADDR[1:0]$922
    22/24: $0\instr_fetch_running[0:0]
    23/24: $0\instr_data_start[20:0]
    24/24: $0\pc_offset[1:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:322$863'.
     1/1: $0\was_early_branch[0:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
     1/4: $2$lookahead\data_out$845[31:0]$854
     2/4: $2$bitselwrite$pos$../src/tinyQV/cpu/cpu.v:318$758[31:0]$853
     3/4: $1$lookahead\data_out$845[31:0]$851
     4/4: $1$bitselwrite$pos$../src/tinyQV/cpu/cpu.v:318$758[31:0]$850
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
     1/5: $0\load_started[0:0]
     2/5: $0\no_write_in_progress[0:0]
     3/5: $0\data_continue[0:0]
     4/5: $0\data_read_n[1:0]
     5/5: $0\data_write_n[1:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:267$830'.
     1/1: $0\data_addr[27:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
     1/3: $0\counter_hi[2:0]
     2/3: $0\data_ready_sync[0:0]
     3/3: $0\data_ready_latch[0:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:225$801'.
     1/8: $4\is_ret[0:0]
     2/8: $4\early_branch[0:0]
     3/8: $3\is_ret[0:0]
     4/8: $3\early_branch[0:0]
     5/8: $2\is_ret[0:0]
     6/8: $2\early_branch[0:0]
     7/8: $1\is_ret[0:0]
     8/8: $1\early_branch[0:0]
Creating decoders for process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
     1/24: $0\imm[31:0] [31:10]
     2/24: $0\imm[31:0] [7:0]
     3/24: $0\imm[31:0] [9:8]
     4/24: $0\interrupt_core[0:0]
     5/24: $0\mem_op_increment_reg[0:0]
     6/24: $0\addr_offset[1:0]
     7/24: $0\additional_mem_ops[2:0]
     8/24: $0\rd[3:0]
     9/24: $0\rs2[3:0]
    10/24: $0\rs1[3:0]
    11/24: $0\mem_op[2:0]
    12/24: $0\alu_op[3:0]
    13/24: $0\instr_len[1:0]
    14/24: $0\is_system[0:0]
    15/24: $0\is_jal[0:0]
    16/24: $0\is_jalr[0:0]
    17/24: $0\is_branch[0:0]
    18/24: $0\is_lui[0:0]
    19/24: $0\is_alu_reg[0:0]
    20/24: $0\is_store[0:0]
    21/24: $0\is_auipc[0:0]
    22/24: $0\is_alu_imm[0:0]
    23/24: $0\is_load[0:0]
    24/24: $0\instr_valid[0:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:187$726'.
     1/2: $0\data_stall[0:0]
     2/2: $0\continue_txn[0:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:179$722'.
     1/1: $0\data_txn_len[1:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:175$719'.
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
     1/3: $2$lookahead\qspi_data_buf$698[31:0]$715
     2/3: $1$lookahead\qspi_data_buf$698[31:0]$703
     3/3: $1$bitselwrite$pos$../src/tinyQV/cpu/mem_ctrl.v:166$652[31:0]$702
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:150$690'.
     1/1: $0\qspi_data_byte_idx[1:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:140$688'.
     1/2: $0\instr_fetch_stopped[0:0]
     2/2: $0\instr_fetch_started[0:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:105$678'.
     1/1: $0\instr_active[0:0]
Creating decoders for process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
     1/15: $4\start_instr[0:0]
     2/15: $3\start_write[0:0]
     3/15: $3\start_instr[0:0]
     4/15: $2\start_read[0:0]
     5/15: $2\start_write[0:0]
     6/15: $2\start_instr[0:0]
     7/15: $6\stop_txn[0:0]
     8/15: $5\stop_txn[0:0]
     9/15: $4\stop_txn[0:0]
    10/15: $3\stop_txn[0:0]
    11/15: $2\stop_txn[0:0]
    12/15: $1\stop_txn[0:0]
    13/15: $1\start_write[0:0]
    14/15: $1\start_read[0:0]
    15/15: $1\start_instr[0:0]
Creating decoders for process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
     1/7: $0\counter[3:0]
     2/7: $0\fsm_state[2:0]
     3/7: $0\spi_ram_b_select[0:0]
     4/7: $0\spi_ram_a_select[0:0]
     5/7: $0\spi_flash_select[0:0]
     6/7: $0\spi_data_oe[3:0]
     7/7: $0\spi_data_out[3:0]
Creating decoders for process `\tinyQV.$proc$../src/tinyQV/cpu/tinyqv.v:92$617'.
Creating decoders for process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:100$1032'.
     1/2: $0\uart_rx_buf_data[7:0]
     2/2: $0\uart_rx_buffered[0:0]
Creating decoders for process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:50$1022'.
     1/1: $0\rxd_select[0:0]
Creating decoders for process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:37$1017'.
     1/2: $0\baud_divider[12:0] [12:8]
     2/2: $0\baud_divider[12:0] [7:0]
Creating decoders for process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:135$313'.
     1/1: $0\txd_reg[0:0]
Creating decoders for process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
     1/7: $5\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$311
     2/7: $4\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$309
     3/7: $3\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$308
     4/7: $2\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$307
     5/7: $0\fsm_state[3:0]
     6/7: $1\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.tx_en[0:0]$305
     7/7: $1\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$304
Creating decoders for process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:111$296'.
     1/1: $0\cycle_counter[3:0]
Creating decoders for process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:98$288'.
     1/1: $0\data_to_send[7:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:300$280'.
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:295$279'.
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:288$274'.
     1/1: $0\debug_register_data[0:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:277$270'.
     1/1: $0\time_count[6:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:255$264'.
     1/2: $0\time_limit[4:0]
     2/2: $0\gpio_out_sel[1:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:241$261'.
     1/1: $1\data_from_read[31:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:231$258'.
     1/2: $2\connect_peripheral[3:0]
     2/2: $1\connect_peripheral[3:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:128$243'.
     1/1: $0\qspi_config[3:0]
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:126$241'.
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:121$240'.
Creating decoders for process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:112$239'.

31.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[15]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2060'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[14]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2059'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[13]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2058'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[12]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2057'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[11]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2056'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[10]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2055'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[9]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2054'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[8]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2053'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[7]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2052'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[6]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2051'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[5]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2050'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[4]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:58$2048'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[3]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:56$2045'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[2]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2044'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[1]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:54$2043'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\reg_access[0]' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:38$2042'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$mem2reg_rd$\reg_access$../src/tinyQV/cpu/register.v:79$1946_DATA' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:79$2039'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$mem2reg_rd$\reg_access$../src/tinyQV/cpu/register.v:78$1945_DATA' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:78$2036'.
No latch inferred for signal `\tinyqv_alu.\cmp_res' from process `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:53$1939'.
No latch inferred for signal `\tinyqv_alu.\d' from process `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:43$1936'.
No latch inferred for signal `\tinyqv_shifter.\dr' from process `\tinyqv_shifter.$proc$../src/tinyQV/cpu/alu.v:88$1926'.
No latch inferred for signal `\qspi_controller.\spi_data_out' from process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:249$1896'.
No latch inferred for signal `\tinyqv_decoder.\imm' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_load' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_alu_imm' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_auipc' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_store' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_alu_reg' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_lui' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_branch' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_jalr' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_jal' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_system' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\alu_op' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\mem_op' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\rs1' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\rs2' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\rd' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\additional_mem_ops' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\mem_op_increment_reg' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `\tinyqv_decoder.\is_ret' from process `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\csr_read' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:449$1735'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\data_out' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:271$1650'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\tmp_data_shift' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:247$1639'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\tmp_data_in' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:247$1639'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\instr_complete' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:217$1617'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\wr_en' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:161$1585'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\data_rd' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:161$1585'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\load_top_bit_next' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:148$1571'.
No latch inferred for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\alu_cycles' from process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:101$1549'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:499$1483'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:493$1482'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:484$1481'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:478$1480'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:470$1479'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:464$1478'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:455$1477'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:449$1476'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:440$1475'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:434$1474'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:425$1473'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:419$1472'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:410$1471'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:404$1470'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_simple_peri[0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:395$1469'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_simple_peri[0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:389$1468'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[11]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:378$1467'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[11]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:376$1466'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[11]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:369$1465'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[10]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:361$1464'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[10]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:359$1463'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[10]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:352$1462'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[9]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:344$1461'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[9]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:342$1460'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[9]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:335$1459'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[8]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:327$1458'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[8]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:325$1457'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[8]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:318$1456'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:308$1455'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:306$1454'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:299$1453'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:289$1452'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:287$1451'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:280$1450'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:270$1449'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:268$1448'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:261$1447'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:251$1446'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:249$1445'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:242$1444'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:231$1443'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:229$1442'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:222$1441'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:211$1440'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:209$1439'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:202$1438'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:146$1437'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:145$1436'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\gpio_out_func_sel$../src/peripherals.v:143$1173_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\gpio_out_func_sel$../src/peripherals.v:143$1173_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_from_user_peri[0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:121$1423'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_user_peri[0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:120$1422'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_user_peri[0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:119$1421'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [7]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1172_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1172_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [6]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1170_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1170_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [5]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [4]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [3]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [2]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [1]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\uo_out_comb [0]' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1158_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1158_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_from_peri' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_from_peri' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\peri_user' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\peri_simple' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$bitselwrite$pos$../src/peripherals.v:109$1047' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$bitselwrite$pos$../src/peripherals.v:113$1048' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_from_simple_peri$../src/peripherals.v:110$1154_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_from_simple_peri$../src/peripherals.v:110$1154_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_ready_from_user_peri$../src/peripherals.v:115$1156_ADDR' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$mem2reg_rd$\data_ready_from_user_peri$../src/peripherals.v:115$1156_DATA' from process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
No latch inferred for signal `\tinyqv_cpu.\early_branch' from process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:225$801'.
No latch inferred for signal `\tinyqv_cpu.\is_ret' from process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:225$801'.
No latch inferred for signal `\tinyqv_mem_ctrl.\start_instr' from process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
No latch inferred for signal `\tinyqv_mem_ctrl.\start_read' from process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
No latch inferred for signal `\tinyqv_mem_ctrl.\start_write' from process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
No latch inferred for signal `\tinyqv_mem_ctrl.\stop_txn' from process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
No latch inferred for signal `\tinyqv_mem_ctrl.\data_txn_n' from process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
No latch inferred for signal `\tt_um_MichaelBell_tinyQV.\debug_signals' from process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:300$280'.
No latch inferred for signal `\tt_um_MichaelBell_tinyQV.\data_from_read' from process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:241$261'.
No latch inferred for signal `\tt_um_MichaelBell_tinyQV.\connect_peripheral' from process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:231$258'.

31.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\tqvp_uart_tx.\txd_reg' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:123$2125'.
  created $dff cell `$procdff$6242' with positive edge clock.
Creating register for signal `\tqvp_uart_tx.\fsm_state' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
  created $dff cell `$procdff$6243' with positive edge clock.
Creating register for signal `\tqvp_uart_tx.\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
  created $dff cell `$procdff$6244' with positive edge clock.
Creating register for signal `\tqvp_uart_tx.\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.tx_en' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
  created $dff cell `$procdff$6245' with positive edge clock.
Creating register for signal `\tqvp_uart_tx.\cycle_counter' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:99$2108'.
  created $dff cell `$procdff$6246' with positive edge clock.
Creating register for signal `\tqvp_uart_tx.\data_to_send' using process `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:86$2100'.
  created $dff cell `$procdff$6247' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\uart_rts' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:131$2092'.
  created $dff cell `$procdff$6248' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\fsm_state' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:122$2080'.
  created $dff cell `$procdff$6249' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\next_fsm_state$func$../src/user_peripherals/uart/uart_rx.v:126$2061.$result' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:122$2080'.
  created $dff cell `$procdff$6250' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\cycle_counter' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:109$2073'.
  created $dff cell `$procdff$6251' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\bit_sample' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:98$2071'.
  created $dff cell `$procdff$6252' with positive edge clock.
Creating register for signal `\tqvp_uart_rx.\recieved_data' using process `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:90$2066'.
  created $dff cell `$procdff$6253' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[15]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2035'.
  created $dff cell `$procdff$6254' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[14]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2028'.
  created $dff cell `$procdff$6255' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[13]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2021'.
  created $dff cell `$procdff$6256' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[12]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2014'.
  created $dff cell `$procdff$6257' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[11]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2007'.
  created $dff cell `$procdff$6258' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[10]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2000'.
  created $dff cell `$procdff$6259' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[9]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1993'.
  created $dff cell `$procdff$6260' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[8]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1986'.
  created $dff cell `$procdff$6261' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[7]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1979'.
  created $dff cell `$procdff$6262' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[6]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1972'.
  created $dff cell `$procdff$6263' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[5]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1965'.
  created $dff cell `$procdff$6264' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[2]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1958'.
  created $dff cell `$procdff$6265' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[1] [31:4]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:52$1951'.
  created $dff cell `$procdff$6266' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.\registers[1] [3:0]' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:43$1950'.
  created $dff cell `$procdff$6267' with positive edge clock.
Creating register for signal `$paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.\accum' using process `$paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.$proc$../src/tinyQV/cpu/alu.v:109$1918'.
  created $dff cell `$procdff$6268' with positive edge clock.
Creating register for signal `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.\register [31:4]' using process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:34$1915'.
  created $dff cell `$procdff$6269' with positive edge clock.
Creating register for signal `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.\cy' using process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:23$1913'.
  created $dff cell `$procdff$6270' with positive edge clock.
Creating register for signal `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.\register [3:0]' using process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:23$1913'.
  created $dff cell `$procdff$6271' with positive edge clock.
Creating register for signal `\tinyqv_counter.\register [31:4]' using process `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:34$1908'.
  created $dff cell `$procdff$6272' with positive edge clock.
Creating register for signal `\tinyqv_counter.\cy' using process `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:23$1906'.
  created $dff cell `$procdff$6273' with positive edge clock.
Creating register for signal `\tinyqv_counter.\register [3:0]' using process `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:23$1906'.
  created $dff cell `$procdff$6274' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_clk_neg' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:288$1900'.
  created $dff cell `$procdff$6275' with negative edge clock.
Creating register for signal `\qspi_controller.\last_ram_a_sel' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898'.
  created $dff cell `$procdff$6276' with positive edge clock.
Creating register for signal `\qspi_controller.\last_ram_b_sel' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898'.
  created $dff cell `$procdff$6277' with positive edge clock.
Creating register for signal `\qspi_controller.\data' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883'.
  created $dff cell `$procdff$6278' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_in_buffer' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883'.
  created $dff cell `$procdff$6279' with positive edge clock.
Creating register for signal `\qspi_controller.\addr' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:221$1877'.
  created $dff cell `$procdff$6280' with positive edge clock.
Creating register for signal `\qspi_controller.\data_ready' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6281' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_data_oe' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6282' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_flash_select' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6283' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_ram_a_select' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6284' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_ram_b_select' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6285' with positive edge clock.
Creating register for signal `\qspi_controller.\fsm_state' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6286' with positive edge clock.
Creating register for signal `\qspi_controller.\data_req' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6287' with positive edge clock.
Creating register for signal `\qspi_controller.\is_writing' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6288' with positive edge clock.
Creating register for signal `\qspi_controller.\nibbles_remaining' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6289' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_clk_pos' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6290' with positive edge clock.
Creating register for signal `\qspi_controller.\read_cycles_count' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
  created $dff cell `$procdff$6291' with positive edge clock.
Creating register for signal `\qspi_controller.\delay_cycles_cfg' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:114$1824'.
  created $dff cell `$procdff$6292' with positive edge clock.
Creating register for signal `\qspi_controller.\spi_clk_use_neg' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:114$1824'.
  created $dff cell `$procdff$6293' with positive edge clock.
Creating register for signal `\qspi_controller.\stop_txn_reg' using process `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:100$1814'.
  created $dff cell `$procdff$6294' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\last_interrupt_req' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
  created $dff cell `$procdff$6295' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mie' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
  created $dff cell `$procdff$6296' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mip_reg' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
  created $dff cell `$procdff$6297' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mstatus_mpie' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:388$1695'.
  created $dff cell `$procdff$6298' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mstatus_mie' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:388$1695'.
  created $dff cell `$procdff$6299' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mstatus_mte' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:375$1691'.
  created $adff cell `$procdff$6304' with positive edge clock and positive level reset.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mepc' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:361$1683'.
  created $dff cell `$procdff$6305' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\is_double_fault_r' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:355$1674'.
  created $dff cell `$procdff$6306' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\mcause' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:328$1668'.
  created $dff cell `$procdff$6307' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\instr_retired' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:305$1665'.
  created $dff cell `$procdff$6308' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\time_hi' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:295$1658'.
  created $dff cell `$procdff$6309' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\tmp_data' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:264$1648'.
  created $dff cell `$procdff$6310' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\load_done' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:234$1631'.
  created $dff cell `$procdff$6311' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\cycle' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:208$1613'.
  created $dff cell `$procdff$6312' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\load_top_bit' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:158$1584'.
  created $dff cell `$procdff$6313' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\shift_amt' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:127$1564'.
  created $dff cell `$procdff$6314' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\cy' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:119$1563'.
  created $dff cell `$procdff$6315' with positive edge clock.
Creating register for signal `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.\cmp' using process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:119$1563'.
  created $dff cell `$procdff$6316' with positive edge clock.
Creating register for signal `\tinyQV_time.\time_pulse_r' using process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:69$1524'.
  created $dff cell `$procdff$6317' with positive edge clock.
Creating register for signal `\tinyQV_time.\timer_interrupt' using process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:65$1521'.
  created $dff cell `$procdff$6318' with positive edge clock.
Creating register for signal `\tinyQV_time.\cy' using process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:61$1518'.
  created $dff cell `$procdff$6319' with positive edge clock.
Creating register for signal `\tinyQV_time.\mtimecmp [3:0]' using process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:49$1513'.
  created $dff cell `$procdff$6320' with positive edge clock.
Creating register for signal `\tinyQV_time.\mtimecmp [31:4]' using process `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:47$1512'.
  created $dff cell `$procdff$6321' with positive edge clock.
Creating register for signal `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.\count' using process `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.$proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508'.
  created $dff cell `$procdff$6322' with positive edge clock.
Creating register for signal `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.\out' using process `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.$proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508'.
  created $dff cell `$procdff$6323' with positive edge clock.
Creating register for signal `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.\out' using process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:23$1506'.
  created $dff cell `$procdff$6324' with positive edge clock.
Creating register for signal `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.\count' using process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:16$1504'.
  created $dff cell `$procdff$6325' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\spi_clk_out' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6326' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\clock_count' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6327' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\end_txn_reg' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6328' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\bits_remaining' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6329' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\data' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6330' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\busy' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6331' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\spi_select' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6332' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\spi_dc' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
  created $dff cell `$procdff$6333' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\read_latency' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:43$1490'.
  created $dff cell `$procdff$6334' with positive edge clock.
Creating register for signal `\tqvp_spi_ctrl.\clock_divider' using process `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:43$1490'.
  created $dff cell `$procdff$6335' with positive edge clock.
Creating register for signal `\gamepad_pmod_driver.\pmod_latch_prev' using process `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
  created $dff cell `$procdff$6336' with positive edge clock.
Creating register for signal `\gamepad_pmod_driver.\shift_reg' using process `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
  created $dff cell `$procdff$6337' with positive edge clock.
Creating register for signal `\gamepad_pmod_driver.\data_reg' using process `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
  created $dff cell `$procdff$6338' with positive edge clock.
Creating register for signal `\gamepad_pmod_driver.\pmod_clk_prev' using process `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
  created $dff cell `$procdff$6339' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[7]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1348'.
  created $dff cell `$procdff$6340' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[6]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1331'.
  created $dff cell `$procdff$6341' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[5]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1314'.
  created $dff cell `$procdff$6342' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[4]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1297'.
  created $dff cell `$procdff$6343' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[3]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1280'.
  created $dff cell `$procdff$6344' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[2]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1263'.
  created $dff cell `$procdff$6345' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[1]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1246'.
  created $dff cell `$procdff$6346' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out_func_sel[0]' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1229'.
  created $dff cell `$procdff$6347' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\audio' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:183$1228'.
  created $dff cell `$procdff$6348' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\audio_func_sel' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:173$1224'.
  created $dff cell `$procdff$6349' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\gpio_out' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:130$1220'.
  created $dff cell `$procdff$6350' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_out_r' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
  created $dff cell `$procdff$6351' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_out_hold' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
  created $dff cell `$procdff$6352' with positive edge clock.
Creating register for signal `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.\data_ready_r' using process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
  created $dff cell `$procdff$6353' with positive edge clock.
Creating register for signal `\tqvp_game_pmod.\enable' using process `\tqvp_game_pmod.$proc$../src/user_peripherals/game_pmod.v:115$997'.
  created $dff cell `$procdff$6354' with positive edge clock.
Creating register for signal `\tqvp_spi_peripheral.\tx_pending' using process `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
  created $dff cell `$procdff$6355' with positive edge clock.
Creating register for signal `\tqvp_spi_peripheral.\dc_ctrl' using process `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
  created $dff cell `$procdff$6356' with positive edge clock.
Creating register for signal `\tqvp_spi_peripheral.\end_txn' using process `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
  created $dff cell `$procdff$6357' with positive edge clock.
Creating register for signal `\tqvp_spi_peripheral.\tx_data' using process `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
  created $dff cell `$procdff$6358' with positive edge clock.
Creating register for signal `\tqvp_matt_pwm.\pwm_0' using process `\tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
  created $dff cell `$procdff$6359' with positive edge clock.
Creating register for signal `\tqvp_matt_pwm.\pwm_1' using process `\tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
  created $dff cell `$procdff$6360' with positive edge clock.
Creating register for signal `\tqvp_matt_pwm.\strobe_period' using process `\tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
  created $dff cell `$procdff$6361' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\pc_offset' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6362' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\instr_write_offset' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6363' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\instr_data_start' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6364' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\instr_fetch_running' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6365' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_DATA' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6366' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6367' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_DATA' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6368' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6369' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_DATA' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6370' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6371' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_DATA' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6372' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6373' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_ADDR' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6374' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_DATA' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6375' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
  created $dff cell `$procdff$6376' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\was_early_branch' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:322$863'.
  created $dff cell `$procdff$6377' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_out' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
  created $dff cell `$procdff$6378' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$bitselwrite$pos$../src/tinyQV/cpu/cpu.v:318$758' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
  created $dff cell `$procdff$6379' with positive edge clock.
Creating register for signal `\tinyqv_cpu.$lookahead\data_out$845' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
  created $dff cell `$procdff$6380' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_write_n' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
  created $dff cell `$procdff$6381' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_read_n' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
  created $dff cell `$procdff$6382' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_continue' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
  created $dff cell `$procdff$6383' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\no_write_in_progress' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
  created $dff cell `$procdff$6384' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\load_started' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
  created $dff cell `$procdff$6385' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_addr' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:267$830'.
  created $dff cell `$procdff$6386' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\counter_hi' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
  created $dff cell `$procdff$6387' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_ready_latch' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
  created $dff cell `$procdff$6388' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\data_ready_sync' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
  created $dff cell `$procdff$6389' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\imm' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6390' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_load' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6391' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_alu_imm' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6392' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_auipc' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6393' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_store' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6394' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_alu_reg' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6395' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_lui' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6396' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_branch' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6397' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_jalr' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6398' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_jal' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6399' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\is_system' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6400' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\instr_len' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6401' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\alu_op' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6402' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\mem_op' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6403' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\rs1' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6404' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\rs2' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6405' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\rd' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6406' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\additional_mem_ops' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6407' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\addr_offset' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6408' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\mem_op_increment_reg' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6409' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\interrupt_core' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6410' with positive edge clock.
Creating register for signal `\tinyqv_cpu.\instr_valid' using process `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
  created $dff cell `$procdff$6411' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\continue_txn' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:187$726'.
  created $dff cell `$procdff$6412' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\data_stall' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:187$726'.
  created $dff cell `$procdff$6413' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\data_txn_len' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:179$722'.
  created $dff cell `$procdff$6414' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\qspi_write_done' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:175$719'.
  created $dff cell `$procdff$6415' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\qspi_data_buf' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
  created $dff cell `$procdff$6416' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.$bitselwrite$pos$../src/tinyQV/cpu/mem_ctrl.v:166$652' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
  created $dff cell `$procdff$6417' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.$lookahead\qspi_data_buf$698' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
  created $dff cell `$procdff$6418' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\qspi_data_byte_idx' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:150$690'.
  created $dff cell `$procdff$6419' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\instr_fetch_started' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:140$688'.
  created $dff cell `$procdff$6420' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\instr_fetch_stopped' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:140$688'.
  created $dff cell `$procdff$6421' with positive edge clock.
Creating register for signal `\tinyqv_mem_ctrl.\instr_active' using process `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:105$678'.
  created $dff cell `$procdff$6422' with positive edge clock.
Creating register for signal `\qspi_setup.\spi_data_out' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6423' with positive edge clock.
Creating register for signal `\qspi_setup.\spi_data_oe' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6424' with positive edge clock.
Creating register for signal `\qspi_setup.\spi_flash_select' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6425' with positive edge clock.
Creating register for signal `\qspi_setup.\spi_ram_a_select' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6426' with positive edge clock.
Creating register for signal `\qspi_setup.\spi_ram_b_select' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6427' with positive edge clock.
Creating register for signal `\qspi_setup.\fsm_state' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6428' with positive edge clock.
Creating register for signal `\qspi_setup.\counter' using process `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
  created $dff cell `$procdff$6429' with positive edge clock.
Creating register for signal `\tinyQV.\rst_reg_n' using process `\tinyQV.$proc$../src/tinyQV/cpu/tinyqv.v:92$617'.
  created $dff cell `$procdff$6430' with positive edge clock.
Creating register for signal `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.\uart_rx_buffered' using process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:100$1032'.
  created $dff cell `$procdff$6431' with positive edge clock.
Creating register for signal `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.\uart_rx_buf_data' using process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:100$1032'.
  created $dff cell `$procdff$6432' with positive edge clock.
Creating register for signal `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.\rxd_select' using process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:50$1022'.
  created $dff cell `$procdff$6433' with positive edge clock.
Creating register for signal `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.\baud_divider' using process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:37$1017'.
  created $dff cell `$procdff$6434' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\txd_reg' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:135$313'.
  created $dff cell `$procdff$6435' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\fsm_state' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
  created $dff cell `$procdff$6436' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
  created $dff cell `$procdff$6437' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.tx_en' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
  created $dff cell `$procdff$6438' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\cycle_counter' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:111$296'.
  created $dff cell `$procdff$6439' with positive edge clock.
Creating register for signal `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.\data_to_send' using process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:98$288'.
  created $dff cell `$procdff$6440' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\debug_rd_r' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:295$279'.
  created $dff cell `$procdff$6441' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\debug_register_data' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:288$274'.
  created $dff cell `$procdff$6442' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\time_count' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:277$270'.
  created $dff cell `$procdff$6443' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\gpio_out_sel' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:255$264'.
  created $dff cell `$procdff$6444' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\time_limit' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:255$264'.
  created $dff cell `$procdff$6445' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\qspi_config' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:128$243'.
  created $dff cell `$procdff$6446' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\rst_reg_n' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:126$241'.
  created $dff cell `$procdff$6447' with negative edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\setup_rst_n' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:121$240'.
  created $dff cell `$procdff$6448' with negative edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\ui_in_sync0' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:112$239'.
  created $dff cell `$procdff$6449' with positive edge clock.
Creating register for signal `\tt_um_MichaelBell_tinyQV.\ui_in_sync' using process `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:112$239'.
  created $dff cell `$procdff$6450' with positive edge clock.

31.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

31.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:123$2125'.
Removing empty process `tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:123$2125'.
Found and cleaned up 5 empty switches in `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
Removing empty process `tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:112$2112'.
Found and cleaned up 3 empty switches in `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:99$2108'.
Removing empty process `tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:99$2108'.
Found and cleaned up 3 empty switches in `\tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:86$2100'.
Removing empty process `tqvp_uart_tx.$proc$../src/user_peripherals/uart/uart_tx.v:86$2100'.
Found and cleaned up 1 empty switch in `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:131$2092'.
Removing empty process `tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:131$2092'.
Found and cleaned up 2 empty switches in `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:122$2080'.
Removing empty process `tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:122$2080'.
Found and cleaned up 2 empty switches in `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:109$2073'.
Removing empty process `tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:109$2073'.
Found and cleaned up 2 empty switches in `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:98$2071'.
Removing empty process `tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:98$2071'.
Found and cleaned up 1 empty switch in `\tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:90$2066'.
Removing empty process `tqvp_uart_rx.$proc$../src/user_peripherals/uart/uart_rx.v:90$2066'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2060'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2059'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2058'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2057'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2056'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2055'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2054'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2053'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2052'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2051'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2050'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:58$2048'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:56$2045'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:73$2044'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:54$2043'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:38$2042'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:79$2039'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:79$2039'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:78$2036'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:78$2036'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2035'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2035'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2028'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2028'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2021'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2021'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2014'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2014'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2007'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2007'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2000'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$2000'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1993'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1993'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1986'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1986'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1979'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1979'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1972'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1972'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1965'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1965'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1958'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:64$1958'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:52$1951'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:43$1950'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.$proc$../src/tinyQV/cpu/register.v:43$1950'.
Found and cleaned up 2 empty switches in `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:53$1939'.
Removing empty process `tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:53$1939'.
Found and cleaned up 1 empty switch in `\tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:43$1936'.
Removing empty process `tinyqv_alu.$proc$../src/tinyQV/cpu/alu.v:43$1936'.
Found and cleaned up 1 empty switch in `\tinyqv_shifter.$proc$../src/tinyQV/cpu/alu.v:88$1926'.
Removing empty process `tinyqv_shifter.$proc$../src/tinyQV/cpu/alu.v:88$1926'.
Removing empty process `$paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.$proc$../src/tinyQV/cpu/alu.v:109$1918'.
Removing empty process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:34$1915'.
Found and cleaned up 1 empty switch in `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:23$1913'.
Removing empty process `$paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.$proc$../src/tinyQV/cpu/counter.v:23$1913'.
Removing empty process `tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:34$1908'.
Found and cleaned up 1 empty switch in `\tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:23$1906'.
Removing empty process `tinyqv_counter.$proc$../src/tinyQV/cpu/counter.v:23$1906'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:288$1900'.
Found and cleaned up 1 empty switch in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:274$1898'.
Found and cleaned up 4 empty switches in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:249$1896'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:249$1896'.
Found and cleaned up 8 empty switches in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:229$1883'.
Found and cleaned up 2 empty switches in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:221$1877'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:221$1877'.
Found and cleaned up 18 empty switches in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:124$1826'.
Found and cleaned up 1 empty switch in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:114$1824'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:114$1824'.
Found and cleaned up 1 empty switch in `\qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:100$1814'.
Removing empty process `qspi_controller.$proc$../src/tinyQV/cpu/qspi_ctrl.v:100$1814'.
Found and cleaned up 21 empty switches in `\tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
Removing empty process `tinyqv_decoder.$proc$../src/tinyQV/cpu/decode.v:59$1768'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:449$1735'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:449$1735'.
Found and cleaned up 20 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:413$1707'.
Found and cleaned up 12 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:388$1695'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:388$1695'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:375$1691'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:375$1691'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:361$1683'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:361$1683'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:355$1674'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:355$1674'.
Found and cleaned up 7 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:328$1668'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:328$1668'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:305$1665'.
Found and cleaned up 2 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:295$1658'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:295$1658'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:271$1650'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:271$1650'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:264$1648'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:264$1648'.
Found and cleaned up 5 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:247$1639'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:247$1639'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:234$1631'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:234$1631'.
Found and cleaned up 7 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:217$1617'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:217$1617'.
Found and cleaned up 4 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:208$1613'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:208$1613'.
Found and cleaned up 11 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:161$1585'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:161$1585'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:158$1584'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:148$1571'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:148$1571'.
Found and cleaned up 3 empty switches in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:127$1564'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:127$1564'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:119$1563'.
Found and cleaned up 1 empty switch in `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:101$1549'.
Removing empty process `$paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.$proc$../src/tinyQV/cpu/core.v:101$1549'.
Found and cleaned up 1 empty switch in `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:69$1524'.
Removing empty process `tinyQV_time.$proc$../src/tinyQV/cpu/time.v:69$1524'.
Found and cleaned up 1 empty switch in `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:65$1521'.
Removing empty process `tinyQV_time.$proc$../src/tinyQV/cpu/time.v:65$1521'.
Removing empty process `tinyQV_time.$proc$../src/tinyQV/cpu/time.v:61$1518'.
Found and cleaned up 2 empty switches in `\tinyQV_time.$proc$../src/tinyQV/cpu/time.v:49$1513'.
Removing empty process `tinyQV_time.$proc$../src/tinyQV/cpu/time.v:49$1513'.
Removing empty process `tinyQV_time.$proc$../src/tinyQV/cpu/time.v:47$1512'.
Found and cleaned up 2 empty switches in `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.$proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508'.
Removing empty process `$paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.$proc$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:13$1508'.
Removing empty process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:23$1506'.
Found and cleaned up 2 empty switches in `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:16$1504'.
Removing empty process `$paramod\pwm\WIDTH=s32'00000000000000000000000000001000.$proc$../src/user_peripherals/matt_pwm/pwm.v:16$1504'.
Found and cleaned up 8 empty switches in `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
Removing empty process `tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:55$1492'.
Found and cleaned up 2 empty switches in `\tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:43$1490'.
Removing empty process `tqvp_spi_ctrl.$proc$../src/user_peripherals/spi.v:43$1490'.
Found and cleaned up 3 empty switches in `\gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
Removing empty process `gamepad_pmod_driver.$proc$../src/user_peripherals/game_pmod.v:52$1484'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:499$1483'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:493$1482'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:484$1481'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:478$1480'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:470$1479'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:464$1478'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:455$1477'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:449$1476'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:440$1475'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:434$1474'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:425$1473'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:419$1472'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:410$1471'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:404$1470'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:395$1469'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:389$1468'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:378$1467'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:376$1466'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:369$1465'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:361$1464'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:359$1463'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:352$1462'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:344$1461'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:342$1460'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:335$1459'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:327$1458'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:325$1457'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:318$1456'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:308$1455'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:306$1454'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:299$1453'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:289$1452'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:287$1451'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:280$1450'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:270$1449'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:268$1448'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:261$1447'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:251$1446'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:249$1445'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:242$1444'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:231$1443'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:229$1442'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:222$1441'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:211$1440'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:209$1439'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:202$1438'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:146$1437'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:145$1436'.
Found and cleaned up 1 empty switch in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:140$1424'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:121$1423'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:120$1422'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:119$1421'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1354'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1348'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1348'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1337'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1331'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1331'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1320'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1314'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1314'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1303'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1297'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1297'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1286'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1280'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1280'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1269'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1263'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1263'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1252'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1246'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1246'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:161$1235'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1229'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:151$1229'.
Found and cleaned up 1 empty switch in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:183$1228'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:183$1228'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:173$1224'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:173$1224'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:130$1220'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:130$1220'.
Found and cleaned up 4 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:104$1185'.
Found and cleaned up 3 empty switches in `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
Removing empty process `$paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/peripherals.v:76$1176'.
Found and cleaned up 3 empty switches in `\tqvp_game_pmod.$proc$../src/user_peripherals/game_pmod.v:115$997'.
Removing empty process `tqvp_game_pmod.$proc$../src/user_peripherals/game_pmod.v:115$997'.
Found and cleaned up 5 empty switches in `\tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
Removing empty process `tqvp_spi_peripheral.$proc$../src/user_peripherals/spi.v:127$975'.
Found and cleaned up 7 empty switches in `\tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
Removing empty process `tqvp_matt_pwm.$proc$../src/user_peripherals/matt_pwm/matt_pwm.v:36$964'.
Found and cleaned up 9 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:393$901'.
Found and cleaned up 2 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:322$863'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:322$863'.
Found and cleaned up 2 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:314$846'.
Found and cleaned up 9 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:277$833'.
Found and cleaned up 2 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:267$830'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:267$830'.
Found and cleaned up 5 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:242$819'.
Found and cleaned up 4 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:225$801'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:225$801'.
Found and cleaned up 5 empty switches in `\tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
Removing empty process `tinyqv_cpu.$proc$../src/tinyQV/cpu/cpu.v:166$779'.
Found and cleaned up 5 empty switches in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:187$726'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:187$726'.
Found and cleaned up 2 empty switches in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:179$722'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:179$722'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:175$719'.
Found and cleaned up 2 empty switches in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:164$699'.
Found and cleaned up 3 empty switches in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:150$690'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:150$690'.
Found and cleaned up 1 empty switch in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:140$688'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:140$688'.
Found and cleaned up 1 empty switch in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:105$678'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:105$678'.
Found and cleaned up 9 empty switches in `\tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
Removing empty process `tinyqv_mem_ctrl.$proc$../src/tinyQV/cpu/mem_ctrl.v:70$661'.
Found and cleaned up 17 empty switches in `\qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
Removing empty process `qspi_setup.$proc$../src/tinyQV/cpu/qspi_setup.v:39$618'.
Removing empty process `tinyQV.$proc$../src/tinyQV/cpu/tinyqv.v:92$617'.
Found and cleaned up 3 empty switches in `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:100$1032'.
Removing empty process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:100$1032'.
Found and cleaned up 3 empty switches in `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:50$1022'.
Removing empty process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:50$1022'.
Found and cleaned up 4 empty switches in `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:37$1017'.
Removing empty process `$paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.$proc$../src/user_peripherals/uart/peri_uart.v:37$1017'.
Found and cleaned up 3 empty switches in `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:135$313'.
Removing empty process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:135$313'.
Found and cleaned up 5 empty switches in `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
Removing empty process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:124$300'.
Found and cleaned up 3 empty switches in `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:111$296'.
Removing empty process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:111$296'.
Found and cleaned up 3 empty switches in `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:98$288'.
Removing empty process `$paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.$proc$../src/tinyQV/peri/uart/uart_tx.v:98$288'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:300$280'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:295$279'.
Found and cleaned up 2 empty switches in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:288$274'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:288$274'.
Found and cleaned up 2 empty switches in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:277$270'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:277$270'.
Found and cleaned up 4 empty switches in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:255$264'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:255$264'.
Found and cleaned up 1 empty switch in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:241$261'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:241$261'.
Found and cleaned up 2 empty switches in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:231$258'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:231$258'.
Found and cleaned up 1 empty switch in `\tt_um_MichaelBell_tinyQV.$proc$../src/project.v:128$243'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:128$243'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:126$241'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:121$240'.
Removing empty process `tt_um_MichaelBell_tinyQV.$proc$../src/project.v:112$239'.
Cleaned up 428 empty switches.

31.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tqvp_uart_tx.
<suppressed ~14 debug messages>
Optimizing module tqvp_uart_rx.
<suppressed ~9 debug messages>
Optimizing module tinyqv_buffer.
Optimizing module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
<suppressed ~3 debug messages>
Optimizing module tinyqv_alu.
<suppressed ~2 debug messages>
Optimizing module tinyqv_shifter.
Optimizing module $paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.
<suppressed ~1 debug messages>
Optimizing module $paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.
<suppressed ~3 debug messages>
Optimizing module tinyqv_counter.
<suppressed ~3 debug messages>
Optimizing module qspi_controller.
<suppressed ~20 debug messages>
Optimizing module tinyqv_decoder.
<suppressed ~11 debug messages>
Optimizing module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
<suppressed ~36 debug messages>
Optimizing module tinyQV_time.
<suppressed ~4 debug messages>
Optimizing module $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.
Optimizing module $paramod\pwm\WIDTH=s32'00000000000000000000000000001000.
Optimizing module tqvp_spi_ctrl.
<suppressed ~23 debug messages>
Optimizing module gamepad_pmod_driver.
<suppressed ~2 debug messages>
Optimizing module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
<suppressed ~41 debug messages>
Optimizing module tqvp_game_pmod.
<suppressed ~5 debug messages>
Optimizing module tqvp_full_empty.
<suppressed ~1 debug messages>
Optimizing module tqvp_full_empty_no_irq.
<suppressed ~1 debug messages>
Optimizing module tqvp_spi_peripheral.
<suppressed ~7 debug messages>
Optimizing module tqvp_matt_pwm.
<suppressed ~5 debug messages>
Optimizing module tqvp_byte_empty.
<suppressed ~1 debug messages>
Optimizing module tinyqv_cpu.
<suppressed ~76 debug messages>
Optimizing module tinyqv_mem_ctrl.
<suppressed ~8 debug messages>
Optimizing module qspi_setup.
<suppressed ~12 debug messages>
Optimizing module tinyQV.
<suppressed ~4 debug messages>
Optimizing module $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.
<suppressed ~12 debug messages>
Optimizing module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
<suppressed ~14 debug messages>
Optimizing module tt_um_MichaelBell_tinyQV.
<suppressed ~6 debug messages>
Optimizing module tt_ecp5_wrapper.

31.6. Executing FLATTEN pass (flatten design).
Deleting now unused module tqvp_uart_tx.
Deleting now unused module tqvp_uart_rx.
Deleting now unused module tinyqv_buffer.
Deleting now unused module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_registers.
Deleting now unused module tinyqv_alu.
Deleting now unused module tinyqv_shifter.
Deleting now unused module $paramod\tinyqv_mul\B_BITS=s32'00000000000000000000000000010000.
Deleting now unused module $paramod\tinyqv_counter\OUTPUT_WIDTH=s32'00000000000000000000000000000111.
Deleting now unused module tinyqv_counter.
Deleting now unused module qspi_controller.
Deleting now unused module tinyqv_decoder.
Deleting now unused module $paramod$c6073fd8a5b287029e036048d234daa072bb204f\tinyqv_core.
Deleting now unused module tinyQV_time.
Deleting now unused module $paramod\pwm_strobe_gen\WIDTH=s32'00000000000000000000000000010000.
Deleting now unused module $paramod\pwm\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module tqvp_spi_ctrl.
Deleting now unused module gamepad_pmod_driver.
Deleting now unused module $paramod\tinyQV_peripherals\CLOCK_MHZ=s32'00000000000000000000000000011100.
Deleting now unused module tqvp_game_pmod.
Deleting now unused module tqvp_full_empty.
Deleting now unused module tqvp_full_empty_no_irq.
Deleting now unused module tqvp_spi_peripheral.
Deleting now unused module tqvp_matt_pwm.
Deleting now unused module tqvp_byte_empty.
Deleting now unused module tinyqv_cpu.
Deleting now unused module tinyqv_mem_ctrl.
Deleting now unused module qspi_setup.
Deleting now unused module tinyQV.
Deleting now unused module $paramod\tqvp_uart_wrapper\CLOCK_MHZ=s32'00000000000000000000000000011100.
Deleting now unused module $paramod$f558324e2cbab5009353606abf373049b0b2ef61\uart_tx.
Deleting now unused module tt_um_MichaelBell_tinyQV.
<suppressed ~155 debug messages>

31.7. Executing TRIBUF pass.

31.8. Executing DEMINOUT pass (demote inout ports to input or output).

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~19 debug messages>

31.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 194 unused cells and 2465 unused wires.
<suppressed ~236 debug messages>

31.11. Executing CHECK pass (checking for obvious problems).
Checking module tt_ecp5_wrapper...
Found and reported 0 problems.

31.12. Executing OPT pass (performing simple optimizations).

31.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~1518 debug messages>
Removed a total of 506 cells.

31.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4445: \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.busy -> 1'1
      Replacing known input bits on port B of cell $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4443: \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.busy -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4440: \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.busy -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4448: \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.busy -> 1'0
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_peripherals.\i_uart.$procmux$6102: \i_tinyQV.i_peripherals.i_uart.uart_rx_buffered -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_setup.$procmux$6027: \i_tinyQV.i_setup.spi_flash_select -> 1'0
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5385: \i_tinyQV.i_tinyqv.cpu.data_ready_latch -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3017: { \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] } -> { 27'000000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] }
      Replacing known input bits on port B of cell $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5806: \i_tinyQV.i_tinyqv.mem.continue_txn -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5803: \i_tinyQV.i_tinyqv.mem.continue_txn -> 1'1
      Replacing known input bits on port A of cell $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5800: \i_tinyQV.i_tinyqv.mem.continue_txn -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procmux$2210.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2144.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2147.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2150.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2156.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2159.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2165.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2168.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2174.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4546.
    dead port 1/2 on $mux $flatten\i_tinyQV.$procmux$6235.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5125.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5128.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5131.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5137.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5140.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5143.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5149.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5152.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5155.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5161.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5164.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5170.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5173.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5179.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5182.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5188.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5194.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5200.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5301.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5400.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5403.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5406.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5412.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5415.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5418.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5424.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5427.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5433.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5436.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5442.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5448.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4558.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4594.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4606.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4642.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4654.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4046.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4049.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4052.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4058.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4061.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4067.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4079.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4082.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4085.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4088.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4090.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4097.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4100.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4103.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4105.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4112.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4115.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4117.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4124.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4127.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4129.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4136.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4138.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4144.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4163.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4166.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4169.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4172.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4178.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4181.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4184.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4187.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4193.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4196.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4199.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4205.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4208.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4211.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4217.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4220.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4226.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4229.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4235.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4238.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4244.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4250.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4257.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4260.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4263.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4265.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4272.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4275.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4278.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4280.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4287.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4290.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4292.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4299.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4302.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4304.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4311.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4313.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4320.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4322.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4329.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4331.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4337.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4343.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$procmux$2356.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4690.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4702.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4738.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2706.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2708.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2710.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2713.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2723.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2725.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2728.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2738.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2740.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2743.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2753.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2755.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2758.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2768.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2770.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2773.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2783.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2785.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2788.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2798.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2800.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2803.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2812.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2815.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2824.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4750.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2827.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2836.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2839.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2848.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2851.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2860.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2863.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2872.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2875.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2884.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2887.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2896.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2899.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2919.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2922.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2924.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2927.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2945.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2948.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2950.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2953.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2971.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2974.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2976.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2979.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2997.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2999.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3002.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3020.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3022.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3025.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3043.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3045.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3048.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3066.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3068.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3071.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3089.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3091.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3094.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3111.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4786.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3114.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3131.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3134.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3151.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3154.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3171.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3174.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3192.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3195.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3213.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3216.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3234.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3237.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3255.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3258.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3282.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3285.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3309.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3312.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3336.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6144.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3339.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3363.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6147.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3366.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3390.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4798.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3393.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3415.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4834.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6150.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3439.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6156.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6159.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6165.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6168.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4846.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3465.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4882.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6174.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3483.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3492.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3505.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4894.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3520.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3536.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3548.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4958.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3574.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4975.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3591.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3600.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3615.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3633.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3643.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_peripherals.$procmux$4987.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3653.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3667.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3673.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3679.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3685.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3691.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3697.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3704.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3707.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3709.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3716.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3718.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3724.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3731.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3734.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3737.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3739.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3746.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3749.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3751.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3758.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3760.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3766.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5822.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5850.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5853.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5856.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5862.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5865.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5871.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5874.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5880.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5886.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5892.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5899.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5901.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5909.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5912.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5914.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5916.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5924.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5926.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5928.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5935.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5937.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5943.
    dead port 1/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2396.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2398.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2408.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2410.
    dead port 2/2 on $mux $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2419.
Removed 294 multiplexer ports.
<suppressed ~1719 debug messages>

31.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4536: { $flatten\i_tinyQV.\i_peripherals.$procmux$4543_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4542_CMP $auto$opt_reduce.cc:137:opt_pmux$6612 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4549: { $flatten\i_tinyQV.\i_peripherals.$procmux$4544_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4539_CMP $auto$opt_reduce.cc:137:opt_pmux$6614 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [15:1] = { $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5215:
      Old ports: A=16'0000000000000011, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN[15:0]$909
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN[15:0]$909 [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN[15:0]$909 [15:1] = { 14'00000000000000 $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:398$762_EN[15:0]$909 [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5221:
      Old ports: A=16'0000000000000011, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN[15:0]$907
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN[15:0]$907 [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN[15:0]$907 [15:1] = { 14'00000000000000 $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:397$761_EN[15:0]$907 [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5227:
      Old ports: A=16'0000000000000011, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN[15:0]$905
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN[15:0]$905 [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN[15:0]$905 [15:1] = { 14'00000000000000 $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:396$760_EN[15:0]$905 [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5233:
      Old ports: A=16'0000000000000011, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$903
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$903 [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$903 [15:1] = { 14'00000000000000 $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$903 [0] }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4584: { $flatten\i_tinyQV.\i_peripherals.$procmux$4591_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4590_CMP $auto$opt_reduce.cc:137:opt_pmux$6616 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4597: { $flatten\i_tinyQV.\i_peripherals.$procmux$4592_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4587_CMP $auto$opt_reduce.cc:137:opt_pmux$6618 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4632: { $flatten\i_tinyQV.\i_peripherals.$procmux$4639_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4638_CMP $auto$opt_reduce.cc:137:opt_pmux$6620 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4645: { $flatten\i_tinyQV.\i_peripherals.$procmux$4640_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4635_CMP $auto$opt_reduce.cc:137:opt_pmux$6622 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4680: { $flatten\i_tinyQV.\i_peripherals.$procmux$4687_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4686_CMP $auto$opt_reduce.cc:137:opt_pmux$6624 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4693: { $flatten\i_tinyQV.\i_peripherals.$procmux$4688_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4683_CMP $auto$opt_reduce.cc:137:opt_pmux$6626 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4728: { $flatten\i_tinyQV.\i_peripherals.$procmux$4735_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4734_CMP $auto$opt_reduce.cc:137:opt_pmux$6628 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4741: { $flatten\i_tinyQV.\i_peripherals.$procmux$4736_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4731_CMP $auto$opt_reduce.cc:137:opt_pmux$6630 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4776: { $flatten\i_tinyQV.\i_peripherals.$procmux$4783_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4782_CMP $auto$opt_reduce.cc:137:opt_pmux$6632 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4789: { $flatten\i_tinyQV.\i_peripherals.$procmux$4784_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4779_CMP $auto$opt_reduce.cc:137:opt_pmux$6634 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3398: { $auto$opt_reduce.cc:137:opt_pmux$6638 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6636 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3418: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3408_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $auto$opt_reduce.cc:137:opt_pmux$6648 $auto$opt_reduce.cc:137:opt_pmux$6646 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6644 $auto$opt_reduce.cc:137:opt_pmux$6642 $auto$opt_reduce.cc:137:opt_pmux$6640 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4824: { $flatten\i_tinyQV.\i_peripherals.$procmux$4831_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4830_CMP $auto$opt_reduce.cc:137:opt_pmux$6650 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4837: { $flatten\i_tinyQV.\i_peripherals.$procmux$4832_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4827_CMP $auto$opt_reduce.cc:137:opt_pmux$6652 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3442: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3413_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $auto$opt_reduce.cc:137:opt_pmux$6664 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $auto$opt_reduce.cc:137:opt_pmux$6662 $auto$opt_reduce.cc:137:opt_pmux$6660 $auto$opt_reduce.cc:137:opt_pmux$6658 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $auto$opt_reduce.cc:137:opt_pmux$6656 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP $auto$opt_reduce.cc:137:opt_pmux$6654 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4872: { $flatten\i_tinyQV.\i_peripherals.$procmux$4879_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4878_CMP $auto$opt_reduce.cc:137:opt_pmux$6666 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3475: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $auto$opt_reduce.cc:137:opt_pmux$6668 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4885: { $flatten\i_tinyQV.\i_peripherals.$procmux$4880_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4875_CMP $auto$opt_reduce.cc:137:opt_pmux$6670 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3508: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $auto$opt_reduce.cc:137:opt_pmux$6676 $auto$opt_reduce.cc:137:opt_pmux$6674 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6672 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4920: { $auto$opt_reduce.cc:137:opt_pmux$6678 $flatten\i_tinyQV.\i_peripherals.$procmux$4921_CMP }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3523: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3428_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3427_CMP $auto$opt_reduce.cc:137:opt_pmux$6680 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3541: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $auto$opt_reduce.cc:137:opt_pmux$6682 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3404_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4944: { $flatten\i_tinyQV.\i_peripherals.$procmux$4956_CMP $auto$opt_reduce.cc:137:opt_pmux$6684 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3551: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6686 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4961: { $flatten\i_tinyQV.\i_peripherals.$procmux$4955_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4954_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4953_CMP $auto$opt_reduce.cc:137:opt_pmux$6688 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3587: $auto$opt_reduce.cc:137:opt_pmux$6690
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4978: { $flatten\i_tinyQV.\i_peripherals.$procmux$4986_CMP $flatten\i_tinyQV.\i_peripherals.$procmux$4981_CMP $auto$opt_reduce.cc:137:opt_pmux$6692 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3611: $auto$opt_reduce.cc:137:opt_pmux$6694
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3646: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $auto$opt_reduce.cc:137:opt_pmux$6696 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3660: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $auto$opt_reduce.cc:137:opt_pmux$6698 }
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.$4$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$935, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5122_Y [0], B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [15:1] = { $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0] }
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.$3$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$931, B=16'0000000000000000, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5158_Y [0], B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [15:1] = { $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0] }
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5239:
      Old ports: A=16'0000000000000000, B=$flatten\i_tinyQV.\i_tinyqv.\cpu.$2$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$927, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912
      New ports: A=1'0, B=$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5185_Y [0], Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [15:1] = { $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] $flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:436$763_EN[15:0]$912 [0] }
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 41 changes.

31.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

31.12.6. Executing OPT_DFF pass (perform DFF optimizations).

31.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 816 unused wires.
<suppressed ~5 debug messages>

31.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.12.9. Rerunning OPT passes. (Maybe there is more to do..)

31.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1334 debug messages>

31.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_setup.$procmux$6038: { $flatten\i_tinyQV.\i_setup.$procmux$5964_CMP $flatten\i_tinyQV.\i_setup.$procmux$5961_CMP $flatten\i_tinyQV.\i_setup.$procmux$5984_CMP $flatten\i_tinyQV.\i_setup.$procmux$5978_CMP $auto$opt_reduce.cc:137:opt_pmux$6700 }
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 1 changes.

31.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.12.13. Executing OPT_DFF pass (perform DFF optimizations).

31.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.12.16. Rerunning OPT passes. (Maybe there is more to do..)

31.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1333 debug messages>

31.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.12.20. Executing OPT_DFF pass (perform DFF optimizations).

31.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.12.23. Finished OPT passes. (There is nothing left to do.)

31.13. Executing FSM pass (extract and optimize FSM).

31.13.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register tt_ecp5_wrapper.i_tinyQV.i_setup.fsm_state.
Not marking tt_ecp5_wrapper.i_tinyQV.i_setup.spi_data_oe as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking tt_ecp5_wrapper.i_tinyQV.i_setup.spi_data_out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_len as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking tt_ecp5_wrapper.i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_oe as FSM state register:
    Users of register don't seem to benefit from recoding.

31.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\i_tinyQV.i_setup.fsm_state' from module `\tt_ecp5_wrapper'.
  found $dff cell for state register: $flatten\i_tinyQV.\i_setup.$procdff$6428
  root of input selection tree: $flatten\i_tinyQV.\i_setup.$0\fsm_state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \i_tinyQV.setup_rst_n
  found state code: 3'000
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5972_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5975_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5978_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5981_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5984_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5961_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$procmux$5964_CMP
  found ctrl input: $flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:112$641_Y
  found state code: 3'111
  found state code: 3'110
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found ctrl input: \i_tinyQV.i_setup.counter [2]
  found state code: 3'010
  found state code: 3'001
  found ctrl output: \i_tinyQV.setup_done
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5961_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5964_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5972_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5975_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5978_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5981_CMP
  found ctrl output: $flatten\i_tinyQV.\i_setup.$procmux$5984_CMP
  ctrl inputs: { \i_tinyQV.setup_rst_n $flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:112$641_Y \i_tinyQV.i_setup.counter [2] }
  ctrl outputs: { \i_tinyQV.setup_done $flatten\i_tinyQV.\i_setup.$procmux$5984_CMP $flatten\i_tinyQV.\i_setup.$procmux$5981_CMP $flatten\i_tinyQV.\i_setup.$procmux$5978_CMP $flatten\i_tinyQV.\i_setup.$procmux$5975_CMP $flatten\i_tinyQV.\i_setup.$procmux$5972_CMP $flatten\i_tinyQV.\i_setup.$procmux$5964_CMP $flatten\i_tinyQV.\i_setup.$procmux$5961_CMP $flatten\i_tinyQV.\i_setup.$0\fsm_state[2:0] }
  transition:      3'000 3'0-- ->      3'000 11'00000010000
  transition:      3'000 3'10- ->      3'000 11'00000010000
  transition:      3'000 3'11- ->      3'001 11'00000010001
  transition:      3'100 3'0-- ->      3'000 11'00010000000
  transition:      3'100 3'10- ->      3'100 11'00010000100
  transition:      3'100 3'11- ->      3'101 11'00010000101
  transition:      3'010 3'0-- ->      3'000 11'01000000000
  transition:      3'010 3'10- ->      3'010 11'01000000010
  transition:      3'010 3'11- ->      3'011 11'01000000011
  transition:      3'110 3'0-- ->      3'000 11'00000100000
  transition:      3'110 3'10- ->      3'110 11'00000100110
  transition:      3'110 3'11- ->      3'111 11'00000100111
  transition:      3'001 3'0-- ->      3'000 11'00000001000
  transition:      3'001 3'1-0 ->      3'001 11'00000001001
  transition:      3'001 3'1-1 ->      3'010 11'00000001010
  transition:      3'101 3'0-- ->      3'000 11'00001000000
  transition:      3'101 3'10- ->      3'101 11'00001000101
  transition:      3'101 3'11- ->      3'110 11'00001000110
  transition:      3'011 3'0-- ->      3'000 11'00100000000
  transition:      3'011 3'10- ->      3'011 11'00100000011
  transition:      3'011 3'11- ->      3'100 11'00100000100
  transition:      3'111 3'0-- ->      3'000 11'10000000000
  transition:      3'111 3'1-- ->      3'111 11'10000000111

31.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\i_tinyQV.i_setup.fsm_state$6701' from module `\tt_ecp5_wrapper'.

31.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 18 unused cells and 18 unused wires.
<suppressed ~19 debug messages>

31.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\i_tinyQV.i_setup.fsm_state$6701' from module `\tt_ecp5_wrapper'.
  Removing unused output signal $flatten\i_tinyQV.\i_setup.$0\fsm_state[2:0] [0].
  Removing unused output signal $flatten\i_tinyQV.\i_setup.$0\fsm_state[2:0] [1].
  Removing unused output signal $flatten\i_tinyQV.\i_setup.$0\fsm_state[2:0] [2].

31.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\i_tinyQV.i_setup.fsm_state$6701' from module `\tt_ecp5_wrapper' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------

31.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\i_tinyQV.i_setup.fsm_state$6701' from module `tt_ecp5_wrapper':
-------------------------------------

  Information on FSM $fsm$\i_tinyQV.i_setup.fsm_state$6701 (\i_tinyQV.i_setup.fsm_state):

  Number of input signals:    3
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: \i_tinyQV.i_setup.counter [2]
    1: $flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:112$641_Y
    2: \i_tinyQV.setup_rst_n

  Output signals:
    0: $flatten\i_tinyQV.\i_setup.$procmux$5961_CMP
    1: $flatten\i_tinyQV.\i_setup.$procmux$5964_CMP
    2: $flatten\i_tinyQV.\i_setup.$procmux$5972_CMP
    3: $flatten\i_tinyQV.\i_setup.$procmux$5975_CMP
    4: $flatten\i_tinyQV.\i_setup.$procmux$5978_CMP
    5: $flatten\i_tinyQV.\i_setup.$procmux$5981_CMP
    6: $flatten\i_tinyQV.\i_setup.$procmux$5984_CMP
    7: \i_tinyQV.setup_done

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'10-   ->     0 8'00000010
      1:     0 3'0--   ->     0 8'00000010
      2:     0 3'11-   ->     4 8'00000010
      3:     1 3'0--   ->     0 8'00010000
      4:     1 3'10-   ->     1 8'00010000
      5:     1 3'11-   ->     5 8'00010000
      6:     2 3'0--   ->     0 8'01000000
      7:     2 3'10-   ->     2 8'01000000
      8:     2 3'11-   ->     6 8'01000000
      9:     3 3'0--   ->     0 8'00000100
     10:     3 3'10-   ->     3 8'00000100
     11:     3 3'11-   ->     7 8'00000100
     12:     4 3'0--   ->     0 8'00000001
     13:     4 3'1-1   ->     2 8'00000001
     14:     4 3'1-0   ->     4 8'00000001
     15:     5 3'0--   ->     0 8'00001000
     16:     5 3'11-   ->     3 8'00001000
     17:     5 3'10-   ->     5 8'00001000
     18:     6 3'0--   ->     0 8'00100000
     19:     6 3'11-   ->     1 8'00100000
     20:     6 3'10-   ->     6 8'00100000
     21:     7 3'0--   ->     0 8'10000000
     22:     7 3'1--   ->     7 8'10000000

-------------------------------------

31.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\i_tinyQV.i_setup.fsm_state$6701' from module `\tt_ecp5_wrapper'.

31.14. Executing OPT pass (performing simple optimizations).

31.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~2 debug messages>

31.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

31.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1323 debug messages>

31.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6294 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:104$1817_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.stop_txn_reg, rval = 1'0).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6293 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_in [2], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_clk_use_neg).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6292 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_in [1:0], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.delay_cycles_cfg).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6291 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2528_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.read_cycles_count, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$6788 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2525_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.read_cycles_count).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6290 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2539_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_clk_pos, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6790 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2539_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_clk_pos).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6289 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2576_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.nibbles_remaining, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$6794 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2576_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.nibbles_remaining).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6288 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2584_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.is_writing, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6806 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:143$1837_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.is_writing).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6287 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:212$1876_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.data_req, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6286 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2626_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.fsm_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$6813 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2626_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.fsm_state).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6285 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2634_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_b_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6825 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ne$../src/tinyQV/cpu/qspi_ctrl.v:149$1840_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_b_select).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6284 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2642_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_a_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6829 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ne$../src/tinyQV/cpu/qspi_ctrl.v:148$1839_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_a_select).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6283 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2650_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_flash_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6833 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in [24], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_flash_select).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6282 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_oe, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6837 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_oe).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6281 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2485_Y, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.data_ready, rval = 1'0).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6280 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.addr).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6279 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_in, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_in_buffer).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6278 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\data[7:0], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.data).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6277 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_b_select, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.last_ram_b_sel, rval = 1'1).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procdff$6276 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_ram_a_select, Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.last_ram_a_sel, rval = 1'1).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6422 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:109$681_Y, Q = \i_tinyQV.i_tinyqv.mem.instr_active, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6885 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.start_instr, Q = \i_tinyQV.i_tinyqv.mem.instr_active).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6421 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.stop_txn, Q = \i_tinyQV.i_tinyqv.mem.instr_fetch_stopped, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6420 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.start_instr, Q = \i_tinyQV.i_tinyqv.mem.instr_fetch_started, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6419 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5832_Y, Q = \i_tinyQV.i_tinyqv.mem.qspi_data_byte_idx, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$6889 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5830_Y, Q = \i_tinyQV.i_tinyqv.mem.qspi_data_byte_idx).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6416 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701, Q = \i_tinyQV.i_tinyqv.mem.qspi_data_buf).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6414 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5813_Y, Q = \i_tinyQV.i_tinyqv.mem.data_txn_len, rval = 2'11).
Adding EN signal on $auto$ff.cc:266:slice$6894 ($sdff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.mem.data_txn_n [1] $flatten\i_tinyQV.\i_tinyqv.\mem.$or$../src/tinyQV/cpu/mem_ctrl.v:183$725_Y }, Q = \i_tinyQV.i_tinyqv.mem.data_txn_len).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6413 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5795_Y, Q = \i_tinyQV.i_tinyqv.mem.data_stall).
Adding SRST signal on $auto$ff.cc:266:slice$6896 ($dffe) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5793_Y, Q = \i_tinyQV.i_tinyqv.mem.data_stall, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\mem.$procdff$6412 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5808_Y, Q = \i_tinyQV.i_tinyqv.mem.continue_txn, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$procdff$6274 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_timer.i_mtime.increment_result [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_timer.i_mtime.register [3:0], rval = 4'0000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$procdff$6273 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904_Y [4], Q = \i_tinyQV.i_tinyqv.cpu.i_timer.i_mtime.cy, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$procdff$6320 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$procmux$4375_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_timer.mtimecmp [3:0], rval = 4'0000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$procdff$6319 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_timer.comparison [4], Q = \i_tinyQV.i_tinyqv.cpu.i_timer.cy, rval = 1'1).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$procdff$6318 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$eq$../src/tinyQV/cpu/time.v:66$1523_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_timer.timer_interrupt).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$procdff$6317 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_timer.i_mtime.add, Q = \i_tinyQV.i_tinyqv.cpu.i_timer.time_pulse_r, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$procdff$6268 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.multiplier.next_accum [19:16], Q = \i_tinyQV.i_tinyqv.cpu.i_core.multiplier.accum [15:12], rval = 4'0000).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6265 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[2] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[2] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[2] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6265 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[2][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[2] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6264 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[5] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[5] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[5] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6264 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[5][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[5] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6263 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[6] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[6] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[6] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6263 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[6][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[6] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6262 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[7] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[7] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[7] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6262 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[7][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[7] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6261 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[8] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[8] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[8] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6261 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[8][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[8] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6260 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[9] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[9] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[9] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6260 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[9][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[9] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6259 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[10] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[10] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[10] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6259 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[10][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[10] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6258 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[11] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[11] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[11] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6258 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[11][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[11] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6257 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[12] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[12] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[12] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6257 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[12][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[12] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6256 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[13] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[13] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[13] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6256 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[13][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[13] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6255 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[14] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[14] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[14] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6255 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[14][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[14] [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6254 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[15] [3:0] \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[15] [31:8] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[15] [31:4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procdff$6254 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[15][31:0] [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_registers.registers[15] [3:0]).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$procdff$6274 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.i_instrret.increment_result [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_instrret.register [3:0], rval = 4'0000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$procdff$6273 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.i_instrret.increment_result [4], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_instrret.cy, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$procdff$6271 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.increment_result [3:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.register [3:0], rval = 4'0000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$procdff$6270 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.increment_result [4], Q = \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.cy, rval = 1'0).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6314 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:130$1569_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.shift_amt [4]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6314 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:129$1567_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.shift_amt [3:0]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6313 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.load_top_bit_next, Q = \i_tinyQV.i_tinyqv.cpu.i_core.load_top_bit).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6312 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4154_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.cycle, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$6978 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4152_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.cycle).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6311 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$logic_and$../src/tinyQV/cpu/core.v:236$1634_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.load_done).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6310 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.i_core.tmp_data_in \i_tinyQV.i_tinyqv.cpu.i_core.tmp_data [31:4] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.tmp_data).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6309 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4029_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.time_hi, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$6986 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:297$1662_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.time_hi).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6307 ($dff) from module tt_ecp5_wrapper (D = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3998_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4024_Y }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mcause, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$6988 ($sdff) from module tt_ecp5_wrapper (D = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3996_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4022_Y }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mcause).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6306 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$logic_and$../src/tinyQV/cpu/core.v:357$1677_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.is_double_fault_r).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6305 ($dff) from module tt_ecp5_wrapper (D = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:363$1690_Y \i_tinyQV.i_tinyqv.cpu.i_core.mepc [23:4] }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mepc).
Adding SRST signal on $auto$ff.cc:266:slice$6995 ($dffe) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:364$1689_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mepc [23:20], rval = 4'0000).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6304 ($adff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$0\mstatus_mte[0:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mte).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6299 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3946_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mie, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7001 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3946_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mie).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6298 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3970_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mpie, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7011 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3970_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mpie).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6297 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3913_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mip_reg, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$7025 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3910_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mip_reg).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6296 ($dff) from module tt_ecp5_wrapper (D = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3889_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3853_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3873_Y }, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mie, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:266:slice$7039 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3843_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mie [7:4]).
Adding EN signal on $auto$ff.cc:266:slice$7039 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3866_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mie [3:0]).
Adding EN signal on $auto$ff.cc:266:slice$7039 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3885_Y, Q = \i_tinyQV.i_tinyqv.cpu.i_core.mie [8]).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procdff$6295 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.ui_in_sync [1:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.last_interrupt_req).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6411 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5784_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7070 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5781_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_valid).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6410 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5504_Y, Q = \i_tinyQV.i_tinyqv.cpu.interrupt_core, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7078 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5501_Y, Q = \i_tinyQV.i_tinyqv.cpu.interrupt_core).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6409 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.mem_op_increment_reg_de, Q = \i_tinyQV.i_tinyqv.cpu.mem_op_increment_reg).
Adding SRST signal on $auto$ff.cc:266:slice$7086 ($dffe) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$2\mem_op_increment_reg[0:0], Q = \i_tinyQV.i_tinyqv.cpu.mem_op_increment_reg, rval = 1'1).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6408 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5532_Y, Q = \i_tinyQV.i_tinyqv.cpu.addr_offset, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$7094 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5532_Y, Q = \i_tinyQV.i_tinyqv.cpu.addr_offset).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6407 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5546_Y, Q = \i_tinyQV.i_tinyqv.cpu.additional_mem_ops, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$7104 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5546_Y, Q = \i_tinyQV.i_tinyqv.cpu.additional_mem_ops).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6406 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5560_Y, Q = \i_tinyQV.i_tinyqv.cpu.rd).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6405 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5574_Y, Q = \i_tinyQV.i_tinyqv.cpu.rs2).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6404 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.rs1_de, Q = \i_tinyQV.i_tinyqv.cpu.rs1).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6403 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.mem_op_de, Q = \i_tinyQV.i_tinyqv.cpu.mem_op).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6402 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5616_Y, Q = \i_tinyQV.i_tinyqv.cpu.alu_op, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7146 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.alu_op_de, Q = \i_tinyQV.i_tinyqv.cpu.alu_op).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6401 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5630_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_len, rval = 2'10).
Adding EN signal on $auto$ff.cc:266:slice$7154 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.instr_len_de, Q = \i_tinyQV.i_tinyqv.cpu.instr_len).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6400 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5644_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_system, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7162 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_system_de, Q = \i_tinyQV.i_tinyqv.cpu.is_system).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6399 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5658_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_jal, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7170 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_jal_de, Q = \i_tinyQV.i_tinyqv.cpu.is_jal).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6398 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5672_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_jalr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7178 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_jalr_de, Q = \i_tinyQV.i_tinyqv.cpu.is_jalr).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6397 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5686_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7186 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_branch_de, Q = \i_tinyQV.i_tinyqv.cpu.is_branch).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6396 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5700_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_lui, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7194 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_lui_de, Q = \i_tinyQV.i_tinyqv.cpu.is_lui).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6395 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5714_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_alu_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7202 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_alu_reg_de, Q = \i_tinyQV.i_tinyqv.cpu.is_alu_reg).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6394 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5728_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_store, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7210 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_store_de, Q = \i_tinyQV.i_tinyqv.cpu.is_store).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6393 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5742_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_auipc, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7218 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_auipc_de, Q = \i_tinyQV.i_tinyqv.cpu.is_auipc).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6392 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5756_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_alu_imm, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7226 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_alu_imm_de, Q = \i_tinyQV.i_tinyqv.cpu.is_alu_imm).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6391 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5770_Y, Q = \i_tinyQV.i_tinyqv.cpu.is_load, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7234 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.is_load_de, Q = \i_tinyQV.i_tinyqv.cpu.is_load).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6390 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5493_Y, Q = \i_tinyQV.i_tinyqv.cpu.imm [9:8], rval = 2'00).
Adding EN signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6390 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.imm_de [31:10] \i_tinyQV.i_tinyqv.cpu.imm_de [7:0] }, Q = { \i_tinyQV.i_tinyqv.cpu.imm [31:10] \i_tinyQV.i_tinyqv.cpu.imm [7:0] }).
Adding EN signal on $auto$ff.cc:266:slice$7242 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.imm_de [9:8], Q = \i_tinyQV.i_tinyqv.cpu.imm [9:8]).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6389 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5380_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_ready_sync, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7258 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5378_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_ready_sync).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6388 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5388_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_ready_latch, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6387 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821_Y [2:0], Q = \i_tinyQV.i_tinyqv.cpu.counter_hi, rval = 3'000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6386 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5368_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_addr, rval = 28'0000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$7266 ($sdff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_tinyqv.cpu.addr_out [27:4] $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:273$832_Y \i_tinyQV.i_tinyqv.cpu.addr_out [1:0] }, Q = \i_tinyQV.i_tinyqv.cpu.data_addr).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6385 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5316_Y, Q = \i_tinyQV.i_tinyqv.cpu.load_started, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7268 ($sdff) from module tt_ecp5_wrapper (D = 1'1, Q = \i_tinyQV.i_tinyqv.cpu.load_started).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6384 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5331_Y, Q = \i_tinyQV.i_tinyqv.cpu.no_write_in_progress, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7270 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5331_Y, Q = \i_tinyQV.i_tinyqv.cpu.no_write_in_progress).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6382 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5348_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_read_n, rval = 2'11).
Adding EN signal on $auto$ff.cc:266:slice$7274 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.mem_op [1:0], Q = \i_tinyQV.i_tinyqv.cpu.data_read_n).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6381 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5363_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_write_n, rval = 2'11).
Adding EN signal on $auto$ff.cc:266:slice$7280 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5363_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_write_n).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6378 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$2$lookahead\data_out$845[31:0]$854, Q = \i_tinyQV.i_tinyqv.cpu.data_out, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$7288 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$or$../src/tinyQV/cpu/cpu.v:318$862_Y, Q = \i_tinyQV.i_tinyqv.cpu.data_out).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6377 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5292_Y, Q = \i_tinyQV.i_tinyqv.cpu.was_early_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7290 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$logic_and$../src/tinyQV/cpu/cpu.v:326$867_Y, Q = \i_tinyQV.i_tinyqv.cpu.was_early_branch).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6365 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5259_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_fetch_running, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7292 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5259_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_fetch_running).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6364 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5273_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_data_start, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$7296 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5273_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_data_start).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6363 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5209_Y, Q = \i_tinyQV.i_tinyqv.cpu.instr_write_offset, rval = 3'000).
Adding SRST signal on $flatten\i_tinyQV.\i_tinyqv.\cpu.$procdff$6362 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y, Q = \i_tinyQV.i_tinyqv.cpu.pc_offset, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$7301 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y, Q = \i_tinyQV.i_tinyqv.cpu.pc_offset).
Adding SRST signal on $flatten\i_tinyQV.\i_setup.$procdff$6429 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$5957_Y, Q = \i_tinyQV.i_setup.counter, rval = 4'0000).
Adding SRST signal on $flatten\i_tinyQV.\i_setup.$procdff$6427 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$5997_Y, Q = \i_tinyQV.i_setup.spi_ram_b_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7306 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$5997_Y, Q = \i_tinyQV.i_setup.spi_ram_b_select).
Adding SRST signal on $flatten\i_tinyQV.\i_setup.$procdff$6426 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6009_Y, Q = \i_tinyQV.i_setup.spi_ram_a_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7316 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6009_Y, Q = \i_tinyQV.i_setup.spi_ram_a_select).
Adding SRST signal on $flatten\i_tinyQV.\i_setup.$procdff$6425 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6022_Y, Q = \i_tinyQV.i_setup.spi_flash_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7326 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6022_Y, Q = \i_tinyQV.i_setup.spi_flash_select).
Adding SRST signal on $flatten\i_tinyQV.\i_setup.$procdff$6424 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6038_Y, Q = \i_tinyQV.i_setup.spi_data_oe, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7336 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6038_Y, Q = \i_tinyQV.i_setup.spi_data_oe).
Adding EN signal on $flatten\i_tinyQV.\i_setup.$procdff$6423 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$6063_Y, Q = \i_tinyQV.i_setup.spi_data_out).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$procdff$6323 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$procmux$4381_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_strobe_gen.out, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$procdff$6322 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$add$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:21$1510_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_strobe_gen.count, rval = 16'0000000000000000).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$procdff$6325 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$procmux$4392_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7373 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.count).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$procdff$6324 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.pwm_on, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$procdff$6325 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$procmux$4392_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7376 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.count).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$procdff$6324 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.pwm_on, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procdff$6361 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procmux$5097_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.strobe_period, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7379 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.matt_pwm.strobe_period).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procdff$6360 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procmux$5108_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7387 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_1).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procdff$6359 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\matt_pwm.$procmux$5116_Y, Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_0, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7393 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.matt_pwm.pwm_0).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.\i_driver.$procdff$6338 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.\i_driver.$0\data_reg[23:0], Q = \i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.\i_driver.$procdff$6337 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.\i_driver.$0\shift_reg[23:0], Q = \i_tinyQV.i_peripherals.i_user_peri03.i_driver.shift_reg).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$procdff$6354 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$procmux$5042_Y, Q = \i_tinyQV.i_peripherals.i_user_peri03.enable, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7403 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [0], Q = \i_tinyQV.i_peripherals.i_user_peri03.enable).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procdff$6247 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2196_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.data_to_send, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7407 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2196_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.data_to_send).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procdff$6246 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2185_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.cycle_counter, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:266:slice$7411 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:105$2111_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.cycle_counter).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procdff$6243 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$2\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2119, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7417 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$2\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2119, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.fsm_state).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procdff$6242 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2135_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_tx.txd_reg, rval = 1'1).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procdff$6253 ($dff) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_peripherals.i_uart.i_uart_rx.bit_sample \i_tinyQV.i_peripherals.i_uart.i_uart_rx.recieved_data [7:1] }, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.recieved_data).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procdff$6252 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procmux$2224_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.bit_sample, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7423 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.uart_rxd, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.bit_sample).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procdff$6251 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:115$2079_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.cycle_counter, rval = 13'0000000000000).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procdff$6249 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$2\next_fsm_state$func$../src/user_peripherals/uart/uart_rx.v:126$2061.$result[3:0]$2084, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7430 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$2\next_fsm_state$func$../src/user_peripherals/uart/uart_rx.v:126$2061.$result[3:0]$2084, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.fsm_state).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$procdff$6248 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$logic_and$../src/user_peripherals/uart/uart_rx.v:136$2096_Y, Q = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.uart_rts, rval = 1'1).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.$procdff$6434 ($dff) from module tt_ecp5_wrapper (D = { $flatten\i_tinyQV.\i_peripherals.\i_uart.$procmux$6119_Y $flatten\i_tinyQV.\i_peripherals.\i_uart.$procmux$6126_Y }, Q = \i_tinyQV.i_peripherals.i_uart.baud_divider, rval = 13'0000011110011).
Adding EN signal on $auto$ff.cc:266:slice$7435 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [12:8], Q = \i_tinyQV.i_peripherals.i_uart.baud_divider [12:8]).
Adding EN signal on $auto$ff.cc:266:slice$7435 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.i_uart.baud_divider [7:0]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.$procdff$6433 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.$procmux$6112_Y, Q = \i_tinyQV.i_peripherals.i_uart.rxd_select, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7442 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [0], Q = \i_tinyQV.i_peripherals.i_uart.rxd_select).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.$procdff$6432 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.i_uart.i_uart_rx.recieved_data, Q = \i_tinyQV.i_peripherals.i_uart.uart_rx_buf_data).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_uart.$procdff$6431 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_uart.$procmux$6105_Y, Q = \i_tinyQV.i_peripherals.i_uart.uart_rx_buffered, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6335 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4509_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.clock_divider, rval = 7'0000011).
Adding EN signal on $auto$ff.cc:266:slice$7452 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [6:0], Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.clock_divider).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6334 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4514_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.read_latency, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7454 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7], Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.read_latency).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6333 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4458_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7456 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.i_simple_peri16.dc_ctrl, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6332 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4435_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7462 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4435_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6331 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4450_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.busy, rval = 1'0).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6330 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4405_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7:1]).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6330 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4420_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [0]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6329 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4473_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.bits_remaining, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7493 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4473_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.bits_remaining).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6328 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.i_simple_peri16.end_txn, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.end_txn_reg).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6327 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4489_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.clock_count, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:266:slice$7510 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4486_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.clock_count).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procdff$6326 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4504_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7512 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$procmux$4504_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procdff$6358 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.i_simple_peri16.tx_data).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procdff$6357 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procmux$5062_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.end_txn, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$7525 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [2], Q = \i_tinyQV.i_peripherals.i_simple_peri16.end_txn).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procdff$6356 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procmux$5071_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.dc_ctrl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7529 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [3], Q = \i_tinyQV.i_peripherals.i_simple_peri16.dc_ctrl).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procdff$6355 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procmux$5084_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.tx_pending, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7533 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$procmux$5084_Y, Q = \i_tinyQV.i_peripherals.i_simple_peri16.tx_pending).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6353 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$logic_and$../src/peripherals.v:88$1182_Y, Q = \i_tinyQV.i_peripherals.data_ready_r).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6352 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$5030_Y, Q = \i_tinyQV.i_peripherals.data_out_hold, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$7544 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$5030_Y, Q = \i_tinyQV.i_peripherals.data_out_hold).
Adding EN signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6351 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.data_from_peri, Q = \i_tinyQV.i_peripherals.data_out_r).
Adding SRST signal on $auto$ff.cc:266:slice$7548 ($dffe) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218 [31:8], Q = \i_tinyQV.i_peripherals.data_out_r [31:8], rval = 24'000000000000000000000000).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6350 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4938_Y, Q = \i_tinyQV.i_peripherals.gpio_out, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7553 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [7:0], Q = \i_tinyQV.i_peripherals.gpio_out).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6349 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4929_Y, Q = \i_tinyQV.i_peripherals.audio_func_sel, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$7557 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [2:0], Q = \i_tinyQV.i_peripherals.audio_func_sel).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6347 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4915_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[0], rval = 5'00010).
Adding EN signal on $auto$ff.cc:266:slice$7561 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[0]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6346 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4867_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[1], rval = 5'00010).
Adding EN signal on $auto$ff.cc:266:slice$7565 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[1]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6345 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4819_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[2], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7569 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[2]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6344 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4771_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[3], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7573 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[3]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6343 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4723_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[4], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7577 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[4]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6342 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4675_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[5], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7581 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[5]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6341 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4627_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[6], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7585 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[6]).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6340 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_peripherals.$procmux$4579_Y, Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[7], rval = 5'00001).
Adding EN signal on $auto$ff.cc:266:slice$7589 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_out [4:0], Q = \i_tinyQV.i_peripherals.gpio_out_func_sel[7]).
Adding SRST signal on $flatten\i_tinyQV.\i_debug_uart_tx.$procdff$6440 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6196_Y, Q = \i_tinyQV.i_debug_uart_tx.data_to_send, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7593 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6196_Y, Q = \i_tinyQV.i_debug_uart_tx.data_to_send).
Adding SRST signal on $flatten\i_tinyQV.\i_debug_uart_tx.$procdff$6439 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6185_Y, Q = \i_tinyQV.i_debug_uart_tx.cycle_counter, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7597 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:117$299_Y, Q = \i_tinyQV.i_debug_uart_tx.cycle_counter).
Adding SRST signal on $flatten\i_tinyQV.\i_debug_uart_tx.$procdff$6436 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$2\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$307, Q = \i_tinyQV.i_debug_uart_tx.fsm_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$7603 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$2\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$307, Q = \i_tinyQV.i_debug_uart_tx.fsm_state).
Adding SRST signal on $flatten\i_tinyQV.\i_debug_uart_tx.$procdff$6435 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6135_Y, Q = \i_tinyQV.i_debug_uart_tx.txd_reg, rval = 1'1).
Adding EN signal on $flatten\i_tinyQV.$procdff$6446 ($dff) from module tt_ecp5_wrapper (D = { \uio [5:4] \uio [2:1] }, Q = \i_tinyQV.qspi_config).
Adding SRST signal on $flatten\i_tinyQV.$procdff$6443 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.$add$../src/project.v:282$272_Y [6:0], Q = \i_tinyQV.time_count, rval = 7'0000000).
Adding EN signal on $flatten\i_tinyQV.$procdff$6442 ($dff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.$0\debug_register_data[0:0], Q = \i_tinyQV.debug_register_data).

31.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 363 unused cells and 364 unused wires.
<suppressed ~366 debug messages>

31.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~68 debug messages>

31.14.9. Rerunning OPT passes. (Maybe there is more to do..)

31.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~824 debug messages>

31.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~339 debug messages>
Removed a total of 113 cells.

31.14.13. Executing OPT_DFF pass (perform DFF optimizations).

31.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 113 unused wires.
<suppressed ~1 debug messages>

31.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.14.16. Rerunning OPT passes. (Maybe there is more to do..)

31.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~842 debug messages>

31.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.14.20. Executing OPT_DFF pass (perform DFF optimizations).

31.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.14.23. Finished OPT passes. (There is nothing left to do.)

31.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 address bits (of 32) from memory init port tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$auto$proc_memwr.cc:45:proc_memwr$6451 (i_tinyQV.i_tinyqv.cpu.instr_data).
Removed top 30 address bits (of 32) from memory init port tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$auto$proc_memwr.cc:45:proc_memwr$6452 (i_tinyQV.i_tinyqv.cpu.instr_data).
Removed top 30 address bits (of 32) from memory init port tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$auto$proc_memwr.cc:45:proc_memwr$6453 (i_tinyQV.i_tinyqv.cpu.instr_data).
Removed top 30 address bits (of 32) from memory init port tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$auto$proc_memwr.cc:45:proc_memwr$6454 (i_tinyQV.i_tinyqv.cpu.instr_data).
Removed top 5 bits (of 7) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$6799 ($ne).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$6820 ($ne).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$6878 ($ne).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$6880 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7014 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7341 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7469 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7471 ($ne).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7486 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7502 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7101 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$7034 ($ne).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$auto$opt_dff.cc:248:make_patterns_logic$6793 ($ne).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$eq$../src/tinyQV/peri/uart/uart_tx.v:74$287 ($eq).
Removed top 30 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$ge$../src/tinyQV/peri/uart/uart_tx.v:103$292 ($ge).
Removed top 28 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$lt$../src/tinyQV/peri/uart/uart_tx.v:103$293 ($lt).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312 ($add).
Removed top 28 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312 ($add).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$eq$../src/tinyQV/peri/uart/uart_tx.v:138$315 ($eq).
Removed top 3 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$procmux$6163 ($mux).
Converting cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:109$1207 ($neg) from signed to unsigned.
Removed top 1 bits (of 4) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:109$1207 ($neg).
Removed top 24 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$shift$../src/peripherals.v:109$1208 ($shift).
Converting cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:113$1215 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:113$1215 ($neg).
Removed top 20 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$shift$../src/peripherals.v:113$1216 ($shift).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$eq$../src/peripherals.v:155$1249 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$eq$../src/peripherals.v:155$1266 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$eq$../src/peripherals.v:155$1283 ($eq).
Removed top 3 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$eq$../src/peripherals.v:141$1429 ($eq).
Removed top 1 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$eq$../src/peripherals.v:142$1430 ($eq).
Removed top 27 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$ternary$../src/peripherals.v:143$1432 ($mux).
Removed top 27 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$ternary$../src/peripherals.v:142$1433 ($mux).
Removed top 24 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$ternary$../src/peripherals.v:141$1434 ($mux).
Removed top 24 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$ternary$../src/peripherals.v:140$1435 ($mux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4541_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4542_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4543_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4584 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4589_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4590_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4591_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4597 ($pmux).
Removed top 2 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4632 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4637_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4638_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4639_CMP0 ($eq).
Removed top 2 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4645 ($pmux).
Removed top 3 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4680 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4685_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4686_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4687_CMP0 ($eq).
Removed top 3 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4693 ($pmux).
Removed top 4 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4728 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4733_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4734_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4735_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4741 ($pmux).
Removed top 5 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4776 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4781_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4782_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4783_CMP0 ($eq).
Removed top 5 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4789 ($pmux).
Removed top 6 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4824 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4829_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4830_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4831_CMP0 ($eq).
Removed top 6 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4837 ($pmux).
Removed top 7 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4872 ($pmux).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4877_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4878_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4879_CMP0 ($eq).
Removed top 7 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4885 ($pmux).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4923_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4949_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4950_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4951_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4952_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4953_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4954_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4955_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4983_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4984_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4985_CMP0 ($eq).
Removed top 24 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$4993 ($mux).
Removed top 2 bits (of 8) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$5002 ($mux).
Removed top 8 bits (of 12) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$procmux$5023 ($mux).
Removed top 1 bits (of 13) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$eq$../src/user_peripherals/uart/uart_rx.v:67$2065 ($eq).
Removed top 30 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ge$../src/user_peripherals/uart/uart_rx.v:91$2067 ($ge).
Removed top 28 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$lt$../src/user_peripherals/uart/uart_rx.v:91$2068 ($lt).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:73$2085 ($mux).
Removed top 28 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2086 ($mux).
Removed top 28 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087 ($mux).
Removed top 28 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088 ($mux).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089 ($add).
Removed top 27 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089 ($add).
Removed top 28 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:80$2091 ($mux).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$gt$../src/user_peripherals/uart/uart_rx.v:136$2094 ($gt).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124 ($add).
Removed top 28 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124 ($add).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$eq$../src/user_peripherals/uart/uart_tx.v:126$2127 ($eq).
Removed top 30 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$ge$../src/user_peripherals/uart/uart_tx.v:128$2128 ($ge).
Removed top 28 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$lt$../src/user_peripherals/uart/uart_tx.v:128$2129 ($lt).
Removed top 3 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$procmux$2163 ($mux).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:120$1042 ($mux).
Removed top 2 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.$eq$../src/user_peripherals/uart/peri_uart.v:120$1041 ($eq).
Removed top 2 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.$eq$../src/user_peripherals/uart/peri_uart.v:119$1040 ($eq).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:142$1010 ($mux).
Removed top 3 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$eq$../src/user_peripherals/game_pmod.v:141$1007 ($eq).
Removed top 4 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$eq$../src/user_peripherals/game_pmod.v:139$1005 ($eq).
Removed top 4 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$eq$../src/user_peripherals/game_pmod.v:138$1004 ($eq).
Removed top 6 bits (of 7) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$add$../src/user_peripherals/spi.v:75$1495 ($add).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$sub$../src/user_peripherals/spi.v:82$1499 ($sub).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$eq$../src/user_peripherals/spi.v:184$989 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$eq$../src/user_peripherals/spi.v:169$985 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.$eq$../src/user_peripherals/spi.v:137$978 ($eq).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.$ternary$../src/tinyQV/cpu/tinyqv.v:86$616 ($mux).
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1516 ($add).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1516 ($add).
Removed top 4 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1517 ($add).
Removed top 1 bits (of 5) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$ternary$../src/tinyQV/cpu/counter.v:22$1905 ($mux).
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
Removed top 4 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:62$1530 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:98$1548 ($eq).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:130$1568 ($eq).
Removed top 16 bits (of 20) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$mul$../src/tinyQV/cpu/alu.v:107$1916 ($mul).
Removed top 4 bits (of 20) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$mul$../src/tinyQV/cpu/alu.v:107$1916 ($mul).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:149$1574 ($mux).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:151$1576 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:151$1577 ($eq).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:167$1588 ($eq).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$gt$../src/tinyQV/cpu/core.v:180$1597 ($gt).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:181$1599 ($eq).
Removed top 30 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$gt$../src/tinyQV/cpu/core.v:181$1600 ($gt).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616 ($add).
Removed top 30 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616 ($add).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:297$1662 ($add).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:347$1673 ($eq).
Removed top 29 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$le$../src/tinyQV/cpu/core.v:362$1684 ($le).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:365$1686 ($eq).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:397$1700 ($eq).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:418$1711 ($eq).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:428$1720 ($eq).
Removed top 3 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:458$1744 ($mux).
Removed top 1 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:457$1745 ($mux).
Removed top 2 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:488$1767 ($mux).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3832_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$3835_CMP0 ($eq).
Removed top 4 bits (of 5) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4004 ($mux).
Removed top 1 bits (of 5) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4007 ($mux).
Removed top 1 bits (of 9) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4014_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4015_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4016_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4017_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4018_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4019_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4020_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2263_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2261_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2260_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2246_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2244_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$procmux$2243_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:56$2047 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:61$1976 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1974 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1973 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:61$1969 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1967 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1966 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:61$1962 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1960 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1959 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:61$1955 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1953 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:60$1952 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$eq$../src/tinyQV/cpu/register.v:41$1948 ($eq).
Removed top 4 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1934 ($add).
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1933 ($add).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1933 ($add).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$shiftx$../src/tinyQV/cpu/alu.v:90$1928 ($shiftx).
Removed top 1 bits (of 6) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$add$../src/tinyQV/cpu/alu.v:82$1925 ($add).
Removed top 1 bits (of 6) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$add$../src/tinyQV/cpu/alu.v:82$1925 ($add).
Removed top 4 bits (of 16) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$ternary$../src/tinyQV/cpu/alu.v:110$1920 ($mux).
Removed top 4 bits (of 20) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$add$../src/tinyQV/cpu/alu.v:107$1917 ($add).
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$add$../src/tinyQV/cpu/counter.v:22$1911 ($add).
Removed top 4 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$add$../src/tinyQV/cpu/counter.v:22$1911 ($add).
Removed top 1 bits (of 5) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
Removed top 4 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
Removed top 2 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:66$1771 ($eq).
Removed top 2 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:67$1772 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:68$1773 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:69$1774 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:70$1775 ($eq).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:87$1787 ($eq).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$ternary$../src/tinyQV/cpu/decode.v:138$1795 ($mux).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:184$1798 ($eq).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:284$1803 ($eq).
Removed top 31 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2721 ($mux).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2916_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2969 ($mux).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP0 ($eq).
Removed top 15 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3211 ($mux).
Removed top 2 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3408_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3410_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3412_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3427_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3428_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3434_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3689 ($mux).
Removed top 12 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3728 ($mux).
Removed top 12 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3743 ($mux).
Removed top 12 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3755 ($mux).
Removed top 1 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3764 ($mux).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5207 ($mux).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:449$947 ($add).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:448$946 ($add).
Removed top 20 bits (of 23) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:446$944 ($add).
Removed top 2 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$895 ($mux).
Removed top 20 bits (of 24) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:385$892 ($add).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$shiftx$../src/tinyQV/cpu/cpu.v:360$889 ($shiftx).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$shiftx$../src/tinyQV/cpu/cpu.v:358$887 ($shiftx).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$shiftx$../src/tinyQV/cpu/cpu.v:357$885 ($shiftx).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$shiftx$../src/tinyQV/cpu/cpu.v:333$869 ($shiftx).
Removed top 27 bits (of 33) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856 ($neg).
Converting cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856 ($neg).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821 ($add).
Removed top 29 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821 ($add).
Removed top 1 bits (of 3) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797 ($le).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:189$787 ($add).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:188$786 ($sub).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:187$785 ($add).
Removed top 3 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:186$784 ($add).
Removed top 1 bits (of 3) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:162$775 ($add).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:162$775 ($add).
Removed top 30 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:142$1835 ($mux).
Removed top 29 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:144$1838 ($mux).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:153$1842 ($sub).
Removed top 30 bits (of 32) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849 ($mux).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866 ($add).
Removed top 29 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866 ($add).
Removed top 2 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$eq$../src/tinyQV/cpu/qspi_ctrl.v:182$1867 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$eq$../src/tinyQV/cpu/qspi_ctrl.v:185$1868 ($eq).
Removed top 1 bits (of 3) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$eq$../src/tinyQV/cpu/qspi_ctrl.v:198$1869 ($eq).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872 ($sub).
Removed top 29 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872 ($sub).
Removed top 2 bits (of 4) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2406 ($mux).
Removed top 1 bits (of 2) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2521 ($mux).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2553 ($mux).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2556 ($mux).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2607 ($mux).
Removed top 1 bits (of 3) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2617 ($mux).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$eq$../src/tinyQV/cpu/mem_ctrl.v:211$755 ($eq).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$eq$../src/tinyQV/cpu/mem_ctrl.v:173$717 ($eq).
Removed top 27 bits (of 33) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705 ($neg).
Converting cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705 ($neg) from signed to unsigned.
Removed top 1 bits (of 6) from port A of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705 ($neg).
Removed top 1 bits (of 2) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:155$696 ($add).
Removed top 26 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$shiftx$../src/tinyQV/cpu/mem_ctrl.v:128$685 ($shiftx).
Removed top 1 bits (of 2) from mux cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:113$682 ($mux).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620 ($add).
Removed top 28 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620 ($add).
Removed top 30 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:64$622 ($add).
Removed top 28 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:64$622 ($add).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:74$623 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:106$633 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$eq$../src/tinyQV/cpu/qspi_setup.v:109$638 ($eq).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$procmux$6230_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$procmux$6228_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$add$../src/project.v:282$272 ($add).
Removed top 25 bits (of 32) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$add$../src/project.v:282$272 ($add).
Removed top 2 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$eq$../src/project.v:261$268 ($eq).
Removed top 1 bits (of 4) from port B of cell tt_ecp5_wrapper.$flatten\i_tinyQV.$eq$../src/project.v:97$237 ($eq).
Removed top 2 bits (of 8) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$shift$../src/peripherals.v:109$1208 ($shift).
Removed top 8 bits (of 12) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$shift$../src/peripherals.v:113$1216 ($shift).
Removed top 1 bits (of 5) from port Y of cell tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089 ($add).
Removed top 25 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.$add$../src/project.v:282$272_Y.
Removed top 3 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$3\next_fsm_state$func$../src/tinyQV/peri/uart/uart_tx.v:128$285.$result[3:0]$308.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312_Y.
Removed top 7 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1157_DATA[7:0]$1244.
Removed top 6 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1159_DATA[7:0]$1261.
Removed top 5 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1161_DATA[7:0]$1278.
Removed top 4 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1163_DATA[7:0]$1295.
Removed top 3 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1165_DATA[7:0]$1312.
Removed top 2 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1167_DATA[7:0]$1329.
Removed top 1 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1169_DATA[7:0]$1346.
Removed top 6 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1160_DATA[7:0]$1262.
Removed top 5 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1162_DATA[7:0]$1279.
Removed top 4 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1164_DATA[7:0]$1296.
Removed top 3 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1166_DATA[7:0]$1313.
Removed top 2 bits (of 8) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_user_peri$../src/peripherals.v:167$1168_DATA[7:0]$1330.
Removed top 26 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$or$../src/peripherals.v:109$1209_Y.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.$or$../src/peripherals.v:113$1217_Y.
Removed top 31 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:120$1042_Y.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089_Y.
Removed top 31 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:73$2085_Y.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2086_Y.
Removed top 3 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$3\next_fsm_state$func$../src/user_peripherals/uart/uart_tx.v:116$2097.$result[3:0]$2120.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124_Y.
Removed top 31 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:142$1010_Y.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620_Y.
Removed top 14 bits (of 16) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$0$memwr$\instr_data$../src/tinyQV/cpu/cpu.v:395$759_EN[15:0]$903.
Removed top 29 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821_Y.
Removed top 1 bits (of 2) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:273$832_Y.
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5207_Y.
Removed top 2 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$895_Y.
Removed top 30 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616_Y.
Removed top 4 bits (of 5) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4004_Y.
Removed top 1 bits (of 5) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4007_Y.
Removed top 31 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:149$1574_Y.
Removed top 1 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:457$1745_Y.
Removed top 2 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:488$1767_Y.
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[10][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[11][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[12][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[13][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[14][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[15][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[2][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[5][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[6][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[7][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[8][31:0].
Removed top 28 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[9][31:0].
Removed top 4 bits (of 16) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$0\accum[15:0].
Removed top 31 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$12\imm[31:0].
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$2\additional_mem_ops[2:0].
Removed top 2 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\alu_op[3:0].
Removed top 30 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$ternary$../src/tinyQV/cpu/decode.v:138$1795_Y.
Removed top 2 bits (of 4) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$3\spi_data_out[3:0].
Removed top 29 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866_Y.
Removed top 1 bits (of 2) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2521_Y.
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2553_Y.
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2556_Y.
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2607_Y.
Removed top 1 bits (of 3) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2617_Y.
Removed top 29 bits (of 32) from wire tt_ecp5_wrapper.$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872_Y.

31.16. Executing PEEPOPT pass (run peephole optimizers).

31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 62 unused wires.
<suppressed ~1 debug messages>

31.18. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module tt_ecp5_wrapper that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$951 ($memrd):
    Found 1 activation_patterns using ctrl signal \i_tinyQV.i_tinyqv.cpu.instr_valid.
    Found 3 candidates: $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950 $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$949 $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$948
    Analyzing resource sharing with $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950 ($memrd):
      Found 1 activation_patterns using ctrl signal \i_tinyQV.i_tinyqv.cpu.instr_valid.
      Forbidden control signals for this pair of cells: { $auto$opt_reduce.cc:137:opt_pmux$6638 $auto$opt_reduce.cc:137:opt_pmux$6636 $auto$opt_reduce.cc:137:opt_pmux$6640 $auto$opt_reduce.cc:137:opt_pmux$6642 $auto$opt_reduce.cc:137:opt_pmux$6644 $auto$opt_reduce.cc:137:opt_pmux$6646 $auto$opt_reduce.cc:137:opt_pmux$6648 $auto$opt_reduce.cc:137:opt_pmux$6654 $auto$opt_reduce.cc:137:opt_pmux$6656 $auto$opt_reduce.cc:137:opt_pmux$6658 $auto$opt_reduce.cc:137:opt_pmux$6660 $auto$opt_reduce.cc:137:opt_pmux$6662 $auto$opt_reduce.cc:137:opt_pmux$6664 $auto$opt_reduce.cc:137:opt_pmux$6668 $auto$opt_reduce.cc:137:opt_pmux$6672 $auto$opt_reduce.cc:137:opt_pmux$6676 $auto$opt_reduce.cc:137:opt_pmux$6696 $auto$opt_reduce.cc:137:opt_pmux$6680 $auto$opt_reduce.cc:137:opt_pmux$6686 $auto$opt_reduce.cc:137:opt_pmux$6698 \i_tinyQV.i_tinyqv.mem.instr_fetch_restart \i_tinyQV.i_tinyqv.mem.is_instr $flatten\i_tinyQV.\i_tinyqv.\mem.$logic_and$../src/tinyQV/cpu/mem_ctrl.v:80$666_Y $flatten\i_tinyQV.\i_tinyqv.\mem.$eq$../src/tinyQV/cpu/mem_ctrl.v:157$697_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:222$1880_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:141$1834_Y \i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in [24] \i_tinyQV.i_tinyqv.cpu.early_branch \i_tinyQV.i_tinyqv.cpu.is_ret $flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.$logic_and$../src/tinyQV/cpu/cpu.v:231$812_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3428_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3427_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3413_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3408_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3404_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2944_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2917_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2916_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2915_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2914_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:326$1807_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:284$1805_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:280$1802_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:279$1801_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$ne$../src/tinyQV/cpu/decode.v:198$1799_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:184$1798_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:95$1794_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:90$1792_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:86$1786_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:84$1784_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:77$1780_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:73$1778_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:71$1776_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:68$1773_Y \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:10] }
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$951: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'0
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'0
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'0
    Analyzing resource sharing with $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$949 ($memrd):
      Found 1 activation_patterns using ctrl signal \i_tinyQV.i_tinyqv.cpu.instr_valid.
      Forbidden control signals for this pair of cells: { $auto$opt_reduce.cc:137:opt_pmux$6638 $auto$opt_reduce.cc:137:opt_pmux$6636 $auto$opt_reduce.cc:137:opt_pmux$6640 $auto$opt_reduce.cc:137:opt_pmux$6642 $auto$opt_reduce.cc:137:opt_pmux$6644 $auto$opt_reduce.cc:137:opt_pmux$6646 $auto$opt_reduce.cc:137:opt_pmux$6648 $auto$opt_reduce.cc:137:opt_pmux$6654 $auto$opt_reduce.cc:137:opt_pmux$6656 $auto$opt_reduce.cc:137:opt_pmux$6658 $auto$opt_reduce.cc:137:opt_pmux$6660 $auto$opt_reduce.cc:137:opt_pmux$6662 $auto$opt_reduce.cc:137:opt_pmux$6664 $auto$opt_reduce.cc:137:opt_pmux$6668 $auto$opt_reduce.cc:137:opt_pmux$6672 $auto$opt_reduce.cc:137:opt_pmux$6676 $auto$opt_reduce.cc:137:opt_pmux$6696 $auto$opt_reduce.cc:137:opt_pmux$6680 $auto$opt_reduce.cc:137:opt_pmux$6686 $auto$opt_reduce.cc:137:opt_pmux$6698 \i_tinyQV.i_tinyqv.mem.instr_fetch_restart \i_tinyQV.i_tinyqv.mem.is_instr $flatten\i_tinyQV.\i_tinyqv.\mem.$logic_and$../src/tinyQV/cpu/mem_ctrl.v:80$666_Y $flatten\i_tinyQV.\i_tinyqv.\mem.$eq$../src/tinyQV/cpu/mem_ctrl.v:157$697_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:222$1880_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:141$1834_Y \i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in [24] \i_tinyQV.i_tinyqv.cpu.early_branch \i_tinyQV.i_tinyqv.cpu.is_ret $flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.$logic_and$../src/tinyQV/cpu/cpu.v:231$812_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3428_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3427_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3413_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3408_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3404_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2944_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2917_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2916_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2915_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2914_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:326$1807_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:284$1805_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:280$1802_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:279$1801_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$ne$../src/tinyQV/cpu/decode.v:198$1799_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:184$1798_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:95$1794_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:90$1792_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:86$1786_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:84$1784_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:77$1780_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:73$1778_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:71$1776_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:68$1773_Y \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:10] }
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$951: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'0
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$949: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'1
      According to the SAT solver this pair of cells can be shared. (Pattern only case)
      Activation signal for $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$951: $auto$share.cc:1060:make_cell_activation_logic$7678
      New cell: $auto$share.cc:713:make_supercell$7680 ($memrd)
  Analyzing resource sharing options for $auto$share.cc:713:make_supercell$7680 ($memrd):
    Cell is always active. Therefore no sharing is possible.
  Analyzing resource sharing options for $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950 ($memrd):
    Found 1 activation_patterns using ctrl signal \i_tinyQV.i_tinyqv.cpu.instr_valid.
    Found 1 candidates: $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$948
    Analyzing resource sharing with $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$948 ($memrd):
      Found 1 activation_patterns using ctrl signal \i_tinyQV.i_tinyqv.cpu.instr_valid.
      Forbidden control signals for this pair of cells: { $auto$opt_reduce.cc:137:opt_pmux$6638 $auto$opt_reduce.cc:137:opt_pmux$6636 $auto$opt_reduce.cc:137:opt_pmux$6640 $auto$opt_reduce.cc:137:opt_pmux$6642 $auto$opt_reduce.cc:137:opt_pmux$6644 $auto$opt_reduce.cc:137:opt_pmux$6646 $auto$opt_reduce.cc:137:opt_pmux$6648 $auto$opt_reduce.cc:137:opt_pmux$6654 $auto$opt_reduce.cc:137:opt_pmux$6656 $auto$opt_reduce.cc:137:opt_pmux$6658 $auto$opt_reduce.cc:137:opt_pmux$6660 $auto$opt_reduce.cc:137:opt_pmux$6662 $auto$opt_reduce.cc:137:opt_pmux$6664 $auto$opt_reduce.cc:137:opt_pmux$6668 $auto$opt_reduce.cc:137:opt_pmux$6672 $auto$opt_reduce.cc:137:opt_pmux$6676 $auto$opt_reduce.cc:137:opt_pmux$6696 $auto$opt_reduce.cc:137:opt_pmux$6680 $auto$opt_reduce.cc:137:opt_pmux$6686 $auto$opt_reduce.cc:137:opt_pmux$6698 \i_tinyQV.i_tinyqv.mem.instr_fetch_restart \i_tinyQV.i_tinyqv.mem.is_instr $flatten\i_tinyQV.\i_tinyqv.\mem.$logic_and$../src/tinyQV/cpu/mem_ctrl.v:80$666_Y $flatten\i_tinyQV.\i_tinyqv.\mem.$eq$../src/tinyQV/cpu/mem_ctrl.v:157$697_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:222$1880_Y $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$logic_and$../src/tinyQV/cpu/qspi_ctrl.v:141$1834_Y \i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in [24] \i_tinyQV.i_tinyqv.cpu.early_branch \i_tinyQV.i_tinyqv.cpu.is_ret $flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.$logic_and$../src/tinyQV/cpu/cpu.v:231$812_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3428_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3427_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3413_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3408_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3404_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3283_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2944_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2917_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2916_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2915_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2914_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:326$1807_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:284$1805_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:280$1802_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:279$1801_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$ne$../src/tinyQV/cpu/decode.v:198$1799_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:184$1798_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:95$1794_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:90$1792_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_and$../src/tinyQV/cpu/decode.v:86$1786_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:84$1784_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$logic_or$../src/tinyQV/cpu/decode.v:77$1780_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:73$1778_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:71$1776_Y $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$eq$../src/tinyQV/cpu/decode.v:68$1773_Y \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:10] }
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'0
      Activation pattern for cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$948: \i_tinyQV.i_tinyqv.cpu.instr_valid = 1'1
      According to the SAT solver this pair of cells can be shared. (Pattern only case)
      Activation signal for $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950: $auto$share.cc:1060:make_cell_activation_logic$7684
      New cell: $auto$share.cc:713:make_supercell$7686 ($memrd)
  Analyzing resource sharing options for $auto$share.cc:713:make_supercell$7686 ($memrd):
    Cell is always active. Therefore no sharing is possible.
Removing 4 cells in module tt_ecp5_wrapper:
  Removing cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$948 ($memrd).
  Removing cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$950 ($memrd).
  Removing cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$949 ($memrd).
  Removing cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$memrd$\instr_data$../src/tinyQV/cpu/cpu.v:451$951 ($memrd).

31.19. Executing TECHMAP pass (map to technology primitives).

31.19.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.19.2. Continuing TECHMAP pass.
Using template $paramod$bb3596e97c6b902bcd3ddf37d0931e845fce78b1\_90_lut_cmp_ for cells of type $ge.
Using template $paramod$fd3a338331ce77d5c60504e1108b754e9b73ee37\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$303e3f000658d6df458da6f84a1d0d361a75ea6a\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$3bf7e9c591bd901066063887148a62317ca7b4b9\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$e2cc003e28e14362311aead805739d9d2a4cc215\_90_lut_cmp_ for cells of type $le.
No more expansions possible.
<suppressed ~302 debug messages>

31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~4 debug messages>

31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 2 unused cells and 34 unused wires.
<suppressed ~5 debug messages>

31.22. Executing TECHMAP pass (map to technology primitives).

31.22.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

31.22.2. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

31.22.3. Continuing TECHMAP pass.
Using template $paramod$fa1a7cd86ac90addee63ee2671950b5184d01151\_80_mul for cells of type $mul.
Using template $paramod$9c82485a742ba8515ebf6592ad9b2a1265d6b346\_80_mul for cells of type $mul.
Using template $paramod$e2221a8e1c62487f5036e26a39a075aafac8168d\$__MUL18X18 for cells of type $__MUL18X18.
No more expansions possible.
<suppressed ~128 debug messages>

31.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tt_ecp5_wrapper:
  creating $macc model for $flatten\i_tinyQV.$add$../src/project.v:282$272 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:117$299 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:109$1207 ($neg).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:113$1215 ($neg).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$add$../src/user_peripherals/spi.v:75$1495 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$sub$../src/user_peripherals/spi.v:82$1499 ($sub).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:115$2079 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:105$2111 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$add$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:21$1510 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:64$622 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:162$775 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:186$784 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:187$785 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:189$787 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:273$832 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:385$892 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:388$896 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:391$900 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:446$944 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:448$946 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:449$947 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856 ($neg).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:164$777 ($sub).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:188$786 ($sub).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:388$898 ($sub).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:297$1662 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1933 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1934 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$add$../src/tinyQV/cpu/counter.v:22$1911 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$add$../src/tinyQV/cpu/alu.v:82$1925 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$add$../src/tinyQV/cpu/alu.v:107$1917 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1516 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1517 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:113$683 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:155$696 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705 ($neg).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866 ($add).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:153$1842 ($sub).
  creating $macc model for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872 ($sub).
  merging $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1516 into $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1517.
  merging $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1933 into $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1934.
  merging $macc model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:388$896 into $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:388$898.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:155$696.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:113$683.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1517.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$add$../src/tinyQV/cpu/alu.v:107$1917.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$add$../src/tinyQV/cpu/alu.v:82$1925.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$add$../src/tinyQV/cpu/counter.v:22$1904.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$add$../src/tinyQV/cpu/counter.v:22$1911.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1934.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:153$1842.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:297$1662.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:188$786.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:164$777.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:449$947.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:448$946.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:446$944.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:391$900.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:385$892.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:273$832.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:189$787.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:187$785.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:186$784.
  creating $alu model for $macc $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:162$775.
  creating $alu model for $macc $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:64$622.
  creating $alu model for $macc $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$add$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:21$1510.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:105$2111.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:115$2079.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$sub$../src/user_peripherals/spi.v:82$1499.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$add$../src/user_peripherals/spi.v:75$1495.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:113$1215.
  creating $alu model for $macc $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:109$1207.
  creating $alu model for $macc $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312.
  creating $alu model for $macc $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:117$299.
  creating $alu model for $macc $flatten\i_tinyQV.$add$../src/project.v:282$272.
  creating $macc cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:388$898: $auto$alumacc.cc:365:replace_macc$7710
  creating $alu model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ge$../src/user_peripherals/uart/uart_rx.v:66$2063 ($ge): new $alu
  creating $alu model for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$ge$../src/user_peripherals/uart/uart_tx.v:62$2099 ($ge): new $alu
  creating $alu model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$lt$../src/user_peripherals/matt_pwm/pwm.v:14$1503 ($lt): new $alu
  creating $alu model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$lt$../src/user_peripherals/matt_pwm/pwm.v:14$1503 ($lt): new $alu
  creating $alu model for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$ge$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:17$1509 ($ge): new $alu
  creating $alu model for $flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797 ($le): new $alu
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$le$../src/tinyQV/cpu/cpu.v:195$797: $auto$alumacc.cc:495:replace_alu$7717
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$ge$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:17$1509: $auto$alumacc.cc:495:replace_alu$7726
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$lt$../src/user_peripherals/matt_pwm/pwm.v:14$1503: $auto$alumacc.cc:495:replace_alu$7739
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$lt$../src/user_peripherals/matt_pwm/pwm.v:14$1503: $auto$alumacc.cc:495:replace_alu$7744
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$ge$../src/user_peripherals/uart/uart_tx.v:62$2099: $auto$alumacc.cc:495:replace_alu$7749
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ge$../src/user_peripherals/uart/uart_rx.v:66$2063: $auto$alumacc.cc:495:replace_alu$7762
  creating $alu cell for $flatten\i_tinyQV.$add$../src/project.v:282$272: $auto$alumacc.cc:495:replace_alu$7775
  creating $alu cell for $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:117$299: $auto$alumacc.cc:495:replace_alu$7778
  creating $alu cell for $flatten\i_tinyQV.\i_debug_uart_tx.$add$../src/tinyQV/peri/uart/uart_tx.v:85$312: $auto$alumacc.cc:495:replace_alu$7781
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:109$1207: $auto$alumacc.cc:495:replace_alu$7784
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.$neg$../src/peripherals.v:113$1215: $auto$alumacc.cc:495:replace_alu$7787
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$add$../src/user_peripherals/spi.v:75$1495: $auto$alumacc.cc:495:replace_alu$7790
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_simple_peri16.\i_spi_ctrl.$sub$../src/user_peripherals/spi.v:82$1499: $auto$alumacc.cc:495:replace_alu$7793
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:115$2079: $auto$alumacc.cc:495:replace_alu$7796
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$add$../src/user_peripherals/uart/uart_rx.v:80$2089: $auto$alumacc.cc:495:replace_alu$7799
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:105$2111: $auto$alumacc.cc:495:replace_alu$7802
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_tx.$add$../src/user_peripherals/uart/uart_tx.v:73$2124: $auto$alumacc.cc:495:replace_alu$7805
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_0.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505: $auto$alumacc.cc:495:replace_alu$7808
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_gen_1.$add$../src/user_peripherals/matt_pwm/pwm.v:20$1505: $auto$alumacc.cc:495:replace_alu$7811
  creating $alu cell for $flatten\i_tinyQV.\i_peripherals.\matt_pwm.\pwm_strobe_gen.$add$../src/user_peripherals/matt_pwm/pwm_strobe_gen.v:21$1510: $auto$alumacc.cc:495:replace_alu$7814
  creating $alu cell for $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:48$620: $auto$alumacc.cc:495:replace_alu$7817
  creating $alu cell for $flatten\i_tinyQV.\i_setup.$add$../src/tinyQV/cpu/qspi_setup.v:64$622: $auto$alumacc.cc:495:replace_alu$7820
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:162$775: $auto$alumacc.cc:495:replace_alu$7823
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:186$784: $auto$alumacc.cc:495:replace_alu$7826
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:187$785: $auto$alumacc.cc:495:replace_alu$7829
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:189$787: $auto$alumacc.cc:495:replace_alu$7832
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:248$821: $auto$alumacc.cc:495:replace_alu$7835
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:273$832: $auto$alumacc.cc:495:replace_alu$7838
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:385$892: $auto$alumacc.cc:495:replace_alu$7841
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:209$1872: $auto$alumacc.cc:495:replace_alu$7844
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:391$900: $auto$alumacc.cc:495:replace_alu$7847
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:446$944: $auto$alumacc.cc:495:replace_alu$7850
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:448$946: $auto$alumacc.cc:495:replace_alu$7853
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$add$../src/tinyQV/cpu/cpu.v:449$947: $auto$alumacc.cc:495:replace_alu$7856
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$neg$../src/tinyQV/cpu/cpu.v:318$856: $auto$alumacc.cc:495:replace_alu$7859
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:164$777: $auto$alumacc.cc:495:replace_alu$7862
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.$sub$../src/tinyQV/cpu/cpu.v:188$786: $auto$alumacc.cc:495:replace_alu$7865
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:212$1616: $auto$alumacc.cc:495:replace_alu$7868
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$add$../src/tinyQV/cpu/core.v:297$1662: $auto$alumacc.cc:495:replace_alu$7871
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$sub$../src/tinyQV/cpu/qspi_ctrl.v:153$1842: $auto$alumacc.cc:495:replace_alu$7874
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_alu.$add$../src/tinyQV/cpu/alu.v:40$1934: $auto$alumacc.cc:495:replace_alu$7877
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_cycles.$add$../src/tinyQV/cpu/counter.v:22$1911: $auto$alumacc.cc:495:replace_alu$7880
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_instrret.$add$../src/tinyQV/cpu/counter.v:22$1904: $auto$alumacc.cc:495:replace_alu$7883
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_shift.$add$../src/tinyQV/cpu/alu.v:82$1925: $auto$alumacc.cc:495:replace_alu$7886
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\multiplier.$add$../src/tinyQV/cpu/alu.v:107$1917: $auto$alumacc.cc:495:replace_alu$7889
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$add$../src/tinyQV/cpu/qspi_ctrl.v:181$1866: $auto$alumacc.cc:495:replace_alu$7892
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.$add$../src/tinyQV/cpu/time.v:59$1517: $auto$alumacc.cc:495:replace_alu$7895
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_timer.\i_mtime.$add$../src/tinyQV/cpu/counter.v:22$1904: $auto$alumacc.cc:495:replace_alu$7898
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:113$683: $auto$alumacc.cc:495:replace_alu$7901
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.$add$../src/tinyQV/cpu/mem_ctrl.v:155$696: $auto$alumacc.cc:495:replace_alu$7904
  creating $alu cell for $flatten\i_tinyQV.\i_tinyqv.\mem.$neg$../src/tinyQV/cpu/mem_ctrl.v:166$705: $auto$alumacc.cc:495:replace_alu$7907
  created 51 $alu and 1 $macc cells.

31.24. Executing OPT pass (performing simple optimizations).

31.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~1 debug messages>

31.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~844 debug messages>

31.24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    New input vector for $reduce_or cell $auto$opt_dff.cc:307:combine_resets$7415: { $auto$rtlil.cc:2959:Not$7370 $auto$rtlil.cc:2959:Not$7759 $auto$rtlil.cc:2962:ReduceAnd$7755 }
    New input vector for $reduce_or cell $auto$opt_dff.cc:307:combine_resets$7372: { $auto$rtlil.cc:2962:ReduceAnd$7732 $auto$rtlil.cc:2959:Not$7370 $auto$rtlil.cc:2959:Not$7736 }
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 2 changes.

31.24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.24.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$7300 ($sdff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.next_instr_write_offset [2], Q = \i_tinyQV.i_tinyqv.cpu.instr_write_offset [2], rval = 1'0).

31.24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 3 unused cells and 26 unused wires.
<suppressed ~4 debug messages>

31.24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.24.9. Rerunning OPT passes. (Maybe there is more to do..)

31.24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~847 debug messages>

31.24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.24.13. Executing OPT_DFF pass (perform DFF optimizations).

31.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.24.16. Rerunning OPT passes. (Maybe there is more to do..)

31.24.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~847 debug messages>

31.24.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.24.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.24.20. Executing OPT_DFF pass (perform DFF optimizations).

31.24.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.24.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.24.23. Finished OPT passes. (There is nothing left to do.)

31.25. Executing MEMORY pass.

31.25.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 56 transformations.

31.25.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

31.25.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data write port 0.
  Analyzing tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data write port 1.
  Analyzing tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data write port 2.
  Analyzing tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data write port 3.
  Analyzing tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data write port 4.

31.25.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

31.25.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\i_tinyQV.i_tinyqv.cpu.instr_data'[0] in module `\tt_ecp5_wrapper': no output FF found.
Checking read port `\i_tinyQV.i_tinyqv.cpu.instr_data'[1] in module `\tt_ecp5_wrapper': no output FF found.
Checking read port address `\i_tinyQV.i_tinyqv.cpu.instr_data'[0] in module `\tt_ecp5_wrapper': no address FF found.
Checking read port address `\i_tinyQV.i_tinyqv.cpu.instr_data'[1] in module `\tt_ecp5_wrapper': no address FF found.

31.25.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.25.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data by address:
Consolidating write ports of memory tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data by address:
  Merging ports 0, 1 (address 2'00).
  Merging ports 0, 2 (address 2'00).
Consolidating write ports of memory tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data by address:
Consolidating write ports of memory tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data using sat-based resource sharing:
  Checking group clocked with posedge \clk, width 16: ports 1, 2.
  Common input cone for all EN signals: 172 cells.
  Size of unconstrained SAT problem: 2002 variables, 5166 clauses
  Merging port 2 into port 1.

31.25.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

31.25.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.25.10. Executing MEMORY_COLLECT pass (generating $mem cells).

31.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.27. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory tt_ecp5_wrapper.i_tinyQV.i_tinyqv.cpu.instr_data
<suppressed ~72 debug messages>

31.28. Executing TECHMAP pass (map to technology primitives).

31.28.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

31.28.2. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

31.28.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

31.29. Executing OPT pass (performing simple optimizations).

31.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~208 debug messages>

31.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6975 ($dffe) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.i_core.data_in [3], Q = \i_tinyQV.i_tinyqv.cpu.i_core.load_top_bit, rval = 1'0).
Adding SRST signal on $flatten\i_tinyQV.\i_peripherals.$procdff$6348 ($dff) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out, Q = \i_tinyQV.i_peripherals.audio, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7400 ($dffe) from module tt_ecp5_wrapper (D = { \i_tinyQV.i_peripherals.i_user_peri03.i_driver.shift_reg [22:0] \i_tinyQV.ui_in_sync [6] }, Q = \i_tinyQV.i_peripherals.i_user_peri03.i_driver.shift_reg, rval = 24'111111111111111111111111).
Adding SRST signal on $auto$ff.cc:266:slice$7397 ($dffe) from module tt_ecp5_wrapper (D = \i_tinyQV.i_peripherals.i_user_peri03.i_driver.shift_reg, Q = \i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg, rval = 24'111111111111111111111111).
Adding EN signal on $auto$ff.cc:266:slice$7305 ($sdff) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_setup.$procmux$5957_Y [0], Q = \i_tinyQV.i_setup.counter [0]).

31.29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 13 unused cells and 177 unused wires.
<suppressed ~15 debug messages>

31.29.5. Rerunning OPT passes. (Removed registers in this run.)

31.29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~9 debug messages>

31.29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.29.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6862 ($dffe) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in [3:1], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.addr [3:1], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$6862 ($dffe) from module tt_ecp5_wrapper (D = \i_tinyQV.i_tinyqv.cpu.data_addr [0], Q = \i_tinyQV.i_tinyqv.mem.q_ctrl.addr [0], rval = 1'0).

31.29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

31.29.10. Rerunning OPT passes. (Removed registers in this run.)

31.29.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.29.13. Executing OPT_DFF pass (perform DFF optimizations).

31.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.29.15. Finished fast OPT passes.

31.30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \i_tinyQV.i_tinyqv.cpu.instr_data in module \tt_ecp5_wrapper:
  created 4 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 6 $mux cells.
  write interface: 15 write mux blocks.

31.31. Executing OPT pass (performing simple optimizations).

31.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~19 debug messages>

31.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:453:consolidate_wr_using_sat$7927: { $auto$rtlil.cc:2963:ReduceOr$7921 $auto$rtlil.cc:2963:ReduceOr$7921 } -> 2'11
  Analyzing evaluation results.
    dead port 1/9 on $pmux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013.
    dead port 2/9 on $pmux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013.
    dead port 3/9 on $pmux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013.
    dead port 4/9 on $pmux $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013.
Removed 4 multiplexer ports.
<suppressed ~665 debug messages>

31.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.$procmux$6232:
      Old ports: A=4'0000, B=4'1111, Y=$flatten\i_tinyQV.$2\connect_peripheral[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.$2\connect_peripheral[3:0] [0]
      New connections: $flatten\i_tinyQV.$2\connect_peripheral[3:0] [3:1] = { $flatten\i_tinyQV.$2\connect_peripheral[3:0] [0] $flatten\i_tinyQV.$2\connect_peripheral[3:0] [0] $flatten\i_tinyQV.$2\connect_peripheral[3:0] [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.$ternary$../src/project.v:41$235:
      Old ports: A=8'00000000, B={ 2'11 \i_tinyQV.qspi_data_oe [3:2] 1'1 \i_tinyQV.qspi_data_oe [1:0] 1'1 }, Y=\uio_oe
      New ports: A=5'00000, B={ \i_tinyQV.qspi_data_oe 1'1 }, Y={ \uio_oe [5:4] \uio_oe [2:0] }
      New connections: { \uio_oe [7:6] \uio_oe [3] } = { \uio_oe [0] \uio_oe [0] \uio_oe [0] }
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4549:
      Old ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 8'00000000 }, Y=$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363
      New ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 5'00000 }, Y={ $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [5] $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [3:0] }
      New connections: { $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [7:6] $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [4] } = { $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [1:0] $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\uo_out_from_simple_peri$../src/peripherals.v:165$1171_DATA[7:0]$1363 [0] }
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4597:
      Old ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 7'0000000 }, Y=$auto$wreduce.cc:514:run$7626 [6:0]
      New ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 5'00000 }, Y={ $auto$wreduce.cc:514:run$7626 [5] $auto$wreduce.cc:514:run$7626 [3:0] }
      New connections: { $auto$wreduce.cc:514:run$7626 [6] $auto$wreduce.cc:514:run$7626 [4] } = { $auto$wreduce.cc:514:run$7626 [0] $auto$wreduce.cc:514:run$7626 [0] }
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4645:
      Old ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 6'000000 }, Y=$auto$wreduce.cc:514:run$7625 [5:0]
      New ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_clk_out \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 5'00000 }, Y={ $auto$wreduce.cc:514:run$7625 [5] $auto$wreduce.cc:514:run$7625 [3:0] }
      New connections: $auto$wreduce.cc:514:run$7625 [4] = $auto$wreduce.cc:514:run$7625 [0]
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4693:
      Old ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 5'00000 }, Y=$auto$wreduce.cc:514:run$7624 [4:0]
      New ports: A={ \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.data [7] \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_dc \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select \i_tinyQV.i_peripherals.i_simple_peri16.i_spi_ctrl.spi_select }, B={ \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_0.out \i_tinyQV.i_peripherals.matt_pwm.pwm_gen_1.out 4'0000 }, Y=$auto$wreduce.cc:514:run$7624 [3:0]
      New connections: $auto$wreduce.cc:514:run$7624 [4] = $auto$wreduce.cc:514:run$7624 [0]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043:
      Old ports: A={ 31'0000000000000000000000000000000 $auto$wreduce.cc:514:run$7634 [0] }, B={ 19'0000000000000000000 \i_tinyQV.i_peripherals.i_uart.baud_divider }, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043_Y
      New ports: A={ 12'000000000000 $auto$wreduce.cc:514:run$7634 [0] }, B=\i_tinyQV.i_peripherals.i_uart.baud_divider, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043_Y [12:0]
      New connections: $flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043_Y [31:13] = 19'0000000000000000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2086:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:514:run$7637 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:514:run$7637 [0]
      New connections: $auto$wreduce.cc:514:run$7637 [3:1] = { $auto$wreduce.cc:514:run$7637 [0] 1'0 $auto$wreduce.cc:514:run$7637 [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088:
      Old ports: A=4'0000, B=4'1011, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088_Y [0]
      New connections: $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088_Y [3:1] = { $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088_Y [0] 1'0 $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:78$2088_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011:
      Old ports: A={ 31'0000000000000000000000000000000 $auto$wreduce.cc:514:run$7640 [0] }, B={ 20'00000000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg [23:12] }, Y=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011_Y
      New ports: A={ 11'00000000000 $auto$wreduce.cc:514:run$7640 [0] }, B=\i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg [23:12], Y=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011_Y [11:0]
      New connections: $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011_Y [31:12] = 20'00000000000000000000
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_setup.$procmux$6038:
      Old ports: A=4'0001, B=16'0001111100010000, Y=$flatten\i_tinyQV.\i_setup.$procmux$6038_Y
      New ports: A=2'01, B=8'01110100, Y=$flatten\i_tinyQV.\i_setup.$procmux$6038_Y [1:0]
      New connections: $flatten\i_tinyQV.\i_setup.$procmux$6038_Y [3:2] = { $flatten\i_tinyQV.\i_setup.$procmux$6038_Y [1] $flatten\i_tinyQV.\i_setup.$procmux$6038_Y [1] }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_setup.$procmux$6038: { \i_tinyQV.i_setup.fsm_state [2] $auto$opt_reduce.cc:137:opt_pmux$6700 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_setup.$procmux$6063: { \i_tinyQV.i_setup.fsm_state [2] \i_tinyQV.i_setup.fsm_state [6] \i_tinyQV.i_setup.fsm_state [1] \i_tinyQV.i_setup.fsm_state [5] \i_tinyQV.i_setup.fsm_state [3] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_setup.$procmux$6077:
      Old ports: A=4'1010, B=4'0000, Y=$flatten\i_tinyQV.\i_setup.$procmux$6077_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_setup.$procmux$6077_Y [1]
      New connections: { $flatten\i_tinyQV.\i_setup.$procmux$6077_Y [3:2] $flatten\i_tinyQV.\i_setup.$procmux$6077_Y [0] } = { $flatten\i_tinyQV.\i_setup.$procmux$6077_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_setup.$procmux$6082:
      Old ports: A=4'0000, B=4'0001, Y=$flatten\i_tinyQV.\i_setup.$procmux$6082_Y
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_setup.$procmux$6082_Y [0]
      New connections: $flatten\i_tinyQV.\i_setup.$procmux$6082_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$897:
      Old ports: A=3'000, B=3'100, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$897_Y
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$897_Y [2]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$897_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4007:
      Old ports: A={ 3'001 $auto$wreduce.cc:514:run$7648 [0] }, B=4'1011, Y=$auto$wreduce.cc:514:run$7649 [3:0]
      New ports: A={ 1'0 $auto$wreduce.cc:514:run$7648 [0] }, B=2'11, Y={ $auto$wreduce.cc:514:run$7649 [3] $auto$wreduce.cc:514:run$7649 [0] }
      New connections: $auto$wreduce.cc:514:run$7649 [2:1] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013:
      Old ports: A=5'10000, B=20'00111100011001010011, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013_Y
      New ports: A=4'1000, B=16'0111100110101011, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013_Y [4] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013_Y [2:0] }
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$procmux$4013_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:250$1642:
      Old ports: A=4'0000, B={ \i_tinyQV.i_tinyqv.cpu.interrupt_core $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$logic_and$../src/tinyQV/cpu/core.v:250$1641_Y 2'00 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:250$1642_Y
      New ports: A=2'00, B={ \i_tinyQV.i_tinyqv.cpu.interrupt_core $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$logic_and$../src/tinyQV/cpu/core.v:250$1641_Y }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:250$1642_Y [3:2]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:250$1642_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:301$1664:
      Old ports: A=\i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.register [10:7], B={ \i_tinyQV.i_tinyqv.cpu.i_core.time_hi \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.register [7] }, Y=\i_tinyQV.i_tinyqv.cpu.i_core.time_count
      New ports: A=\i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.register [10:8], B=\i_tinyQV.i_tinyqv.cpu.i_core.time_hi, Y=\i_tinyQV.i_tinyqv.cpu.i_core.time_count [3:1]
      New connections: \i_tinyQV.i_tinyqv.cpu.i_core.time_count [0] = \i_tinyQV.i_tinyqv.cpu.i_core.i_cycles.register [7]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738:
      Old ports: A=4'0000, B={ \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mpie 3'000 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738_Y
      New ports: A=1'0, B=\i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mpie, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738_Y [3]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:457$1745:
      Old ports: A={ 2'00 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:130$1568_Y }, B=3'100, Y=$auto$wreduce.cc:514:run$7651 [2:0]
      New ports: A={ 1'0 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$eq$../src/tinyQV/cpu/core.v:130$1568_Y }, B=2'10, Y={ $auto$wreduce.cc:514:run$7651 [2] $auto$wreduce.cc:514:run$7651 [0] }
      New connections: $auto$wreduce.cc:514:run$7651 [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757:
      Old ports: A=4'0000, B={ \i_tinyQV.i_tinyqv.cpu.i_core.mcause [5] 3'000 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757_Y
      New ports: A=1'0, B=\i_tinyQV.i_tinyqv.cpu.i_core.mcause [5], Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757_Y [3]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:488$1767:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:514:run$7652 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:514:run$7652 [1]
      New connections: $auto$wreduce.cc:514:run$7652 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2943:
      Old ports: A={ 16'0000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] 8'11111111 }, B=32'11111111111111111111111111111111, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0]
      New ports: A={ 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3] }, B=2'11, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] }
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [31:17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [15:9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [7:0] } = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] 8'11111111 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2969:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:514:run$7668 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:514:run$7668 [0]
      New connections: $auto$wreduce.cc:514:run$7668 [1] = $auto$wreduce.cc:514:run$7668 [0]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3087:
      Old ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] 3'101 }, B=4'0111, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\alu_op[3:0]
      New ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] 1'0 }, B=2'01, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\alu_op[3:0] [3] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\alu_op[3:0] [1] }
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\alu_op[3:0] [2] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\alu_op[3:0] [0] } = 2'11
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3211:
      Old ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] 12'000000000000 }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 4'0000 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [16:0]
      New ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] 6'000000 }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [16:12] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9:4] }
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [11:10] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [3:0] } = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3307:
      Old ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$not$../src/tinyQV/cpu/decode.v:146$1797_Y 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] }, B={ 2'00 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\mem_op[2:0]
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$not$../src/tinyQV/cpu/decode.v:146$1797_Y, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\mem_op[2:0] [2]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\mem_op[2:0] [1:0] = { 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3398: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3409_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2925_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3405_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3403_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6636 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3418: { $auto$opt_reduce.cc:137:opt_pmux$6648 $auto$opt_reduce.cc:137:opt_pmux$6646 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP $auto$opt_reduce.cc:137:opt_pmux$6644 $auto$opt_reduce.cc:137:opt_pmux$8182 $auto$opt_reduce.cc:137:opt_pmux$6640 }
    New ctrl vector for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3508: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3433_CMP $auto$opt_reduce.cc:137:opt_pmux$6660 $auto$opt_reduce.cc:137:opt_pmux$8184 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3677:
      Old ports: A={ 1'0 $auto$wreduce.cc:514:run$7667 [1:0] }, B={ 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [14] 1'1 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\additional_mem_ops[2:0]
      New ports: A=$auto$wreduce.cc:514:run$7667 [1:0], B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [14] 1'1 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\additional_mem_ops[2:0] [1:0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\additional_mem_ops[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3728:
      Old ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31:20] }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [19:12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [20] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [30:21] 1'0 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [19:0]
      New ports: A={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [20] }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [19:12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [20] 1'0 }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [19:11] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [0] }
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [10:1] = \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [30:21]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:210$757:
      Old ports: A=\i_tinyQV.i_tinyqv.mem.qspi_data_buf, B={ \i_tinyQV.i_tinyqv.mem.q_ctrl.data \i_tinyQV.i_tinyqv.mem.qspi_data_buf [23:16] $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:211$756_Y $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:212$754_Y }, Y=\i_tinyQV.i_tinyqv.mem_data_from_read
      New ports: A={ \i_tinyQV.i_tinyqv.mem.qspi_data_buf [31:24] \i_tinyQV.i_tinyqv.mem.qspi_data_buf [15:0] }, B={ \i_tinyQV.i_tinyqv.mem.q_ctrl.data $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:211$756_Y $flatten\i_tinyQV.\i_tinyqv.\mem.$ternary$../src/tinyQV/cpu/mem_ctrl.v:212$754_Y }, Y={ \i_tinyQV.i_tinyqv.mem_data_from_read [31:24] \i_tinyQV.i_tinyqv.mem_data_from_read [15:0] }
      New connections: \i_tinyQV.i_tinyqv.mem_data_from_read [23:16] = \i_tinyQV.i_tinyqv.mem.qspi_data_buf [23:16]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2393:
      Old ports: A=4'1011, B=4'0000, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0]
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [3:1] = { $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [0] 1'0 $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2406:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:514:run$7670 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:514:run$7670 [1]
      New connections: $auto$wreduce.cc:514:run$7670 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2441:
      Old ports: A={ \i_tinyQV.i_tinyqv.mem.q_ctrl.data [3:0] \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_in_buffer }, B={ \i_tinyQV.i_tinyqv.mem.q_ctrl.data [3:0] \i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_in }, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2441_Y
      New ports: A=\i_tinyQV.i_tinyqv.mem.q_ctrl.spi_in_buffer, B=\i_tinyQV.i_tinyqv.mem.q_ctrl.spi_data_in, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2441_Y [3:0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2441_Y [7:4] = \i_tinyQV.i_tinyqv.mem.q_ctrl.data [3:0]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549:
      Old ports: A=3'001, B=3'011, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [1]
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [2] $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [0] } = 2'01
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2553:
      Old ports: A=2'01, B=2'11, Y=$auto$wreduce.cc:514:run$7673 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:514:run$7673 [1]
      New connections: $auto$wreduce.cc:514:run$7673 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685:
      Old ports: A=4'0000, B=4'1111, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y [0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y [3:1] = { $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y [0] $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y [0] $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2685_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:144$1838:
      Old ports: A=3'101, B=3'001, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2574_Y
      New ports: A=1'1, B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2574_Y [2]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2574_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849:
      Old ports: A=2'01, B=2'11, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849_Y [1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849_Y [1]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849_Y [0] = 1'1
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$8181: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3420_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3413_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3402_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3193_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$8183: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3420_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3419_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3399_CMP $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$2711_CMP }
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043_Y, B={ 30'000000000000000000000000000000 \i_tinyQV.i_peripherals.i_uart.uart_rx_buffered \i_tinyQV.i_peripherals.i_uart.uart_tx_busy }, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044_Y
      New ports: A=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:119$1043_Y [12:0], B={ 11'00000000000 \i_tinyQV.i_peripherals.i_uart.uart_rx_buffered \i_tinyQV.i_peripherals.i_uart.uart_tx_busy }, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044_Y [12:0]
      New connections: $flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044_Y [31:13] = 19'0000000000000000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087:
      Old ports: A=4'1010, B=$auto$wreduce.cc:514:run$7637 [3:0], Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087_Y [3:0]
      New ports: A=2'10, B={ $auto$wreduce.cc:514:run$7637 [0] $auto$wreduce.cc:514:run$7637 [0] }, Y=$flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087_Y [1:0]
      New connections: $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087_Y [3:2] = { $flatten\i_tinyQV.\i_peripherals.\i_uart.\i_uart_rx.$ternary$../src/user_peripherals/uart/uart_rx.v:76$2087_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011_Y, B={ 4'0000 \i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg [23:12] 4'0000 \i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg [11:0] }, Y=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y
      New ports: A={ 12'000000000000 $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:141$1011_Y [11:0] }, B=\i_tinyQV.i_peripherals.i_user_peri03.i_driver.data_reg, Y={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [11:0] }
      New connections: { $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [31:28] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [15:12] } = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_setup.$procmux$6084:
      Old ports: A=$flatten\i_tinyQV.\i_setup.$procmux$6082_Y, B=4'0000, Y=$flatten\i_tinyQV.\i_setup.$procmux$6084_Y
      New ports: A=$flatten\i_tinyQV.\i_setup.$procmux$6082_Y [0], B=1'0, Y=$flatten\i_tinyQV.\i_setup.$procmux$6084_Y [0]
      New connections: $flatten\i_tinyQV.\i_setup.$procmux$6084_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:452$1739:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738_Y, B={ \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mie \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mte 2'00 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:452$1739_Y
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:453$1738_Y [3] 1'0 }, B={ \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mie \i_tinyQV.i_tinyqv.cpu.i_core.mstatus_mte }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:452$1739_Y [3:2]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:452$1739_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:471$1758:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757_Y, B={ 3'000 \i_tinyQV.i_tinyqv.cpu.i_core.mcause [4] }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:471$1758_Y
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:472$1757_Y [3] 1'0 }, B={ 1'0 \i_tinyQV.i_tinyqv.cpu.i_core.mcause [4] }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:471$1758_Y [3] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:471$1758_Y [0] }
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$ternary$../src/tinyQV/cpu/core.v:471$1758_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3017:
      Old ports: A={ 27'000000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] }, B=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0], Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0]
      New ports: A={ 3'000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] }, B={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$10\imm[31:0] [8] 6'111111 }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [5:0] }
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [31:17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [15:9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [7:6] } = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [5] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [5] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3743:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [19:0], B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [30:25] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:8] 1'0 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [19:0]
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [19:11] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [24:21] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$5\imm[31:0] [0] }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:8] 1'0 }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [19:11] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [4:0] }
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [10:5] = \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [30:25]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2417:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0], B={ 2'00 $auto$wreduce.cc:514:run$7670 [1:0] }, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0]
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [0] $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$4\spi_data_out[3:0] [0] }, B={ $auto$wreduce.cc:514:run$7670 [1] 1'0 }, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [1:0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [3:2] = { $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2556:
      Old ports: A=$auto$wreduce.cc:514:run$7673 [1:0], B=2'01, Y=$auto$wreduce.cc:514:run$7674 [1:0]
      New ports: A=$auto$wreduce.cc:514:run$7673 [1], B=1'0, Y=$auto$wreduce.cc:514:run$7674 [1]
      New connections: $auto$wreduce.cc:514:run$7674 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y, B={ 1'0 $auto$wreduce.cc:514:run$7674 [1:0] }, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [1] 1'1 }, B=$auto$wreduce.cc:514:run$7674 [1:0], Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [1:0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2617:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849_Y [1:0], B=2'01, Y=$auto$wreduce.cc:514:run$7676 [1:0]
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$ternary$../src/tinyQV/cpu/qspi_ctrl.v:163$1849_Y [1], B=1'0, Y=$auto$wreduce.cc:514:run$7676 [1]
      New connections: $auto$wreduce.cc:514:run$7676 [0] = 1'1
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:117$1045:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044_Y, B={ 24'000000000000000000000000 \i_tinyQV.i_peripherals.i_uart.uart_rx_buf_data }, Y=\i_tinyQV.i_peripherals.data_from_user_peri[2]
      New ports: A=$flatten\i_tinyQV.\i_peripherals.\i_uart.$ternary$../src/user_peripherals/uart/peri_uart.v:118$1044_Y [12:0], B={ 5'00000 \i_tinyQV.i_peripherals.i_uart.uart_rx_buf_data }, Y=\i_tinyQV.i_peripherals.data_from_user_peri[2] [12:0]
      New connections: \i_tinyQV.i_peripherals.data_from_user_peri[2] [31:13] = 19'0000000000000000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y, B={ 31'0000000000000000000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present }, Y=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y
      New ports: A={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:140$1012_Y [11:0] }, B={ 23'00000000000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present }, Y={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [11:0] }
      New connections: { $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [31:28] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [15:12] } = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3169:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0], B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0]
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$9\imm[31:0] [5:0] }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5:0] }
      New connections: { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [31:17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [15:9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [7:6] } = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3755:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [19:0], B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31:25] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:7] }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\imm[31:0] [19:0]
      New ports: A={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [19:11] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$4\imm[31:0] [4:0] }, B={ \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [31] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:7] }, Y={ $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\imm[31:0] [19:11] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\imm[31:0] [4:0] }
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$3\imm[31:0] [10:5] = \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [30:25]
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558:
      Old ports: A={ $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [1] 1'1 }, B=$auto$wreduce.cc:514:run$7674 [1:0], Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [1:0]
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2549_Y [1], B=$auto$wreduce.cc:514:run$7674 [1], Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [1]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [0] = 1'1
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y, B={ 23'00000000000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present 7'0000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl1_present }, Y=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y
      New ports: A={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:139$1013_Y [11:0] }, B={ 15'000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present 7'0000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl1_present }, Y={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [11:0] }
      New connections: { $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [31:28] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [15:12] } = 8'00000000
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$procmux$3442:
      Old ports: A=2, B={ 22'0000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:11] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 32'00000000000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] $auto$wreduce.cc:514:run$7669 [0] 25'0000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 2'00 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [9:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11] 4'0000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [16:0] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [8] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10:9] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5:3] 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 28'0000000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3:2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:4] 33'000000000000000000000000000000000 $auto$wreduce.cc:514:run$7666 [0] 24'000000000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [8:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:9] 2'00 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0]
      New ports: A=18'000000000000000010, B={ 8'00000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:11] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 18'000000000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] $auto$wreduce.cc:514:run$7669 [0] 11'00000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 2'00 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [9:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11] 4'0000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [16:12] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$7\imm[31:0] [9:4] 4'0000 $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [16] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [8] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$8\imm[31:0] [5:0] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [8] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [10:9] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5:3] 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [11:10] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] 1'0 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [4:3] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [5] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6] 14'00000000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [3:2] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [6:4] 19'0000000000000000000 $auto$wreduce.cc:514:run$7666 [0] 10'0000000000 \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [8:7] \i_tinyQV.i_tinyqv.cpu.i_decoder.instr [12:9] 2'00 }, Y=$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17:0]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [31:18] = { $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_decoder.$6\imm[31:0] [17] }
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y, B=3'101, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561_Y
      New ports: A={ 1'0 $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2558_Y [1] }, B=2'10, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561_Y [2:1]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561_Y [0] = 1'1
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:137$1015:
      Old ports: A=$flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y, B={ 7'0000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present 7'0000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl1_present 15'000000000000000 \i_tinyQV.i_peripherals.i_user_peri03.enable }, Y=\i_tinyQV.i_peripherals.data_from_user_peri[3]
      New ports: A={ $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [27:16] $flatten\i_tinyQV.\i_peripherals.\i_user_peri03.$ternary$../src/user_peripherals/game_pmod.v:138$1014_Y [11:0] }, B={ 3'000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl2_present 7'0000000 \i_tinyQV.i_peripherals.i_user_peri03.ctrl1_present 11'00000000000 \i_tinyQV.i_peripherals.i_user_peri03.enable }, Y={ \i_tinyQV.i_peripherals.data_from_user_peri[3] [27:16] \i_tinyQV.i_peripherals.data_from_user_peri[3] [11:0] }
      New connections: { \i_tinyQV.i_peripherals.data_from_user_peri[3] [31:28] \i_tinyQV.i_peripherals.data_from_user_peri[3] [15:12] } = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2564:
      Old ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561_Y, B=3'001, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2564_Y
      New ports: A=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2561_Y [2:1], B=2'00, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2564_Y [2:1]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2564_Y [0] = 1'1
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.\i_peripherals.$procmux$4961:
      Old ports: A={ 24'000000000000000000000000 \i_tinyQV.i_peripherals.data_from_user_peri[1] [7:0] }, B={ \i_tinyQV.i_peripherals.data_from_user_peri[2] \i_tinyQV.i_peripherals.data_from_user_peri[3] 32'00000000000000000000000000000000 }, Y=$flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218
      New ports: A={ 17'00000000000000000 \i_tinyQV.i_peripherals.data_from_user_peri[1] [7:0] }, B={ 12'000000000000 \i_tinyQV.i_peripherals.data_from_user_peri[2] [12:0] \i_tinyQV.i_peripherals.data_from_user_peri[3] [27:16] 1'0 \i_tinyQV.i_peripherals.data_from_user_peri[3] [11:0] 25'0000000000000000000000000 }, Y={ $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218 [27:16] $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218 [12:0] }
      New connections: { $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218 [31:28] $flatten\i_tinyQV.\i_peripherals.$2$mem2reg_rd$\data_from_user_peri$../src/peripherals.v:114$1155_DATA[31:0]$1218 [15:13] } = 7'0000000
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 68 changes.

31.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 3 unused cells and 29 unused wires.
<suppressed ~4 debug messages>

31.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.31.9. Rerunning OPT passes. (Maybe there is more to do..)

31.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~665 debug messages>

31.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $mux cell $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$procmux$2417:
      Old ports: A={ $auto$wreduce.cc:514:run$7670 [1] $auto$wreduce.cc:514:run$7670 [1] }, B={ $auto$wreduce.cc:514:run$7670 [1] 1'0 }, Y={ $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [1] $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [3] }
      New ports: A=$auto$wreduce.cc:514:run$7670 [1], B=1'0, Y=$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [3]
      New connections: $flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$2\spi_data_out[3:0] [1] = $auto$wreduce.cc:514:run$7670 [1]
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 1 changes.

31.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.31.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[3]$8083 ($dff) from module tt_ecp5_wrapper (D = $auto$rtlil.cc:3094:Mux$7925 [15:2], Q = \i_tinyQV.i_tinyqv.cpu.instr_data[3] [15:2]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[3]$8083 ($dff) from module tt_ecp5_wrapper (D = $auto$rtlil.cc:3094:Mux$7925 [1:0], Q = \i_tinyQV.i_tinyqv.cpu.instr_data[3] [1:0]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[2]$8081 ($dff) from module tt_ecp5_wrapper (D = $auto$rtlil.cc:3094:Mux$7925 [15:2], Q = \i_tinyQV.i_tinyqv.cpu.instr_data[2] [15:2]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[2]$8081 ($dff) from module tt_ecp5_wrapper (D = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][1][0]$y$8162, Q = \i_tinyQV.i_tinyqv.cpu.instr_data[2] [1:0]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[1]$8079 ($dff) from module tt_ecp5_wrapper (D = $auto$rtlil.cc:3094:Mux$7925 [15:2], Q = \i_tinyQV.i_tinyqv.cpu.instr_data[1] [15:2]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[1]$8079 ($dff) from module tt_ecp5_wrapper (D = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][1][0]$y$8142, Q = \i_tinyQV.i_tinyqv.cpu.instr_data[1] [1:0]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[0]$8077 ($dff) from module tt_ecp5_wrapper (D = $auto$rtlil.cc:3094:Mux$7925 [15:2], Q = \i_tinyQV.i_tinyqv.cpu.instr_data[0] [15:2]).
Adding EN signal on $memory\i_tinyQV.i_tinyqv.cpu.instr_data[0]$8077 ($dff) from module tt_ecp5_wrapper (D = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][1][0]$y$8122, Q = \i_tinyQV.i_tinyqv.cpu.instr_data[0] [1:0]).
Adding SRST signal on $auto$ff.cc:266:slice$6985 ($dffe) from module tt_ecp5_wrapper (D = $flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.$2\tmp_data_in[3:0] [1:0], Q = \i_tinyQV.i_tinyqv.cpu.i_core.tmp_data [29:28], rval = 2'00).
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$7551 ($sdffce) from module tt_ecp5_wrapper.

31.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

31.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.31.16. Rerunning OPT passes. (Maybe there is more to do..)

31.31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~649 debug messages>

31.31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
    Consolidated identical input bits for $pmux cell $flatten\i_tinyQV.$procmux$6225:
      Old ports: A=32'11111111111111111111111111111111, B={ 56'01000111010001100010111000110010000000000000000000000000 \i_tinyQV.gpio_out_sel 37'0000000000000000000000000000000000000 \i_tinyQV.debug_uart_tx_busy 25'0000000000000000000000000 \i_tinyQV.time_limit 6'110000 \i_tinyQV.i_peripherals.data_out_r [27:16] 3'000 \i_tinyQV.i_peripherals.data_out_r [12:0] }, Y=\i_tinyQV.i_tinyqv.data_in
      New ports: A=27'111111111111111111111111111, B={ 46'0111010001100101110001100100000000000000000000 \i_tinyQV.gpio_out_sel 32'00000000000000000000000000000000 \i_tinyQV.debug_uart_tx_busy 20'00000000000000000000 \i_tinyQV.time_limit 2'11 \i_tinyQV.i_peripherals.data_out_r [27:16] 2'00 \i_tinyQV.i_peripherals.data_out_r [12:0] }, Y={ \i_tinyQV.i_tinyqv.data_in [27:16] \i_tinyQV.i_tinyqv.data_in [14:0] }
      New connections: { \i_tinyQV.i_tinyqv.data_in [31:28] \i_tinyQV.i_tinyqv.data_in [15] } = { \i_tinyQV.i_tinyqv.data_in [14:13] \i_tinyQV.i_tinyqv.data_in [14] \i_tinyQV.i_tinyqv.data_in [14] \i_tinyQV.i_tinyqv.data_in [14] }
    Consolidated identical input bits for $mux cell $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][0][0]$8107:
      Old ports: A=2'11, B=2'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][0][0]$y$8108
      New ports: A=1'1, B=1'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][0][0]$y$8108 [0]
      New connections: $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][0][0]$y$8108 [1] = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[0][0][0]$y$8108 [0]
    Consolidated identical input bits for $mux cell $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][0][0]$8129:
      Old ports: A=2'11, B=2'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][0][0]$y$8130
      New ports: A=1'1, B=1'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][0][0]$y$8130 [0]
      New connections: $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][0][0]$y$8130 [1] = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[1][0][0]$y$8130 [0]
    Consolidated identical input bits for $mux cell $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][0][0]$8149:
      Old ports: A=2'11, B=2'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][0][0]$y$8150
      New ports: A=1'1, B=1'x, Y=$memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][0][0]$y$8150 [0]
      New connections: $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][0][0]$y$8150 [1] = $memory\i_tinyQV.i_tinyqv.cpu.instr_data$wrmux[2][0][0]$y$8150 [0]
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 4 changes.

31.31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

31.31.20. Executing OPT_DFF pass (perform DFF optimizations).

31.31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

31.31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.31.23. Rerunning OPT passes. (Maybe there is more to do..)

31.31.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~651 debug messages>

31.31.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.31.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.31.27. Executing OPT_DFF pass (perform DFF optimizations).

31.31.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.31.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.31.30. Finished OPT passes. (There is nothing left to do.)

31.32. Executing TECHMAP pass (map to technology primitives).

31.32.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.32.2. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

31.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $tribuf.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper maccmap for cells of type $macc_v2.
  add \i_tinyQV.i_tinyqv.cpu.instr_write_offset (3 bits, unsigned)
  sub { $flatten\i_tinyQV.\i_tinyqv.\cpu.$ternary$../src/tinyQV/cpu/cpu.v:388$897_Y [2] 2'00 } (3 bits, unsigned)
  add $auto$wreduce.cc:514:run$7646 [0] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$79fc7abbb3333dbd5736999d565fd903198fb1eb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$025d767fc934a3e7d59a671de523743ebaa07759\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$3ace65afedd5f6a6849996376b6c02262a5f23eb\_80_ecp5_alu for cells of type $alu.
Using template $paramod$constmap:40d1ceb20cf1057a7dd0fc6110087bc5dccfd83a$paramod$45f826c2a22e667d43ed2f68de60381195ac96e4\_90_shift_shiftx for cells of type $shift.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_ecp5_alu for cells of type $alu.
Using template $paramod$constmap:732b779b62ab61ddf267c8b443ceeea5b7c85854$paramod$7977455ea5c919947559dbbfa4dace2d451abbc5\_90_shift_shiftx for cells of type $shift.
Using template $paramod$ae63dc3b50d8e8327f3f28c91126b1f0b8c3a12c\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$5a6f3fedab454736e8ecd4fc56159f9859cd2cfb\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_80_ecp5_alu for cells of type $alu.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$2780480d52179e2db572a6e5133edf36e733d32e\_80_ecp5_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ecp5_alu for cells of type $alu.
Using template $paramod$constmap:ab299b2282887c257d2527d2c10697cc42f66005$paramod$36bcedab95bc008bdb3be17850b72f55052ea47a\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ecp5_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ecp5_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_80_ecp5_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$274c8d34472ef950383656115be6e1c8ace5024c\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$5d37c9676d77ab033e85de89a3261885cba80ce3\_90_pmux for cells of type $pmux.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_80_ecp5_alu for cells of type $alu.
Using template $paramod$0563fff2c395e9892f21c131fa33d5e0ad144e72\_90_alu for cells of type $alu.
Using template $paramod$constmap:98c85bfb26de0e53eb996a79f06d782d6725f176$paramod$6e7876c98ed0938b5e2905caa44e1160b7c3f805\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$99f84fe1e34117baf970301335fa146f92b93eb7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$a13703aa027da371a1931fc542d213d7de559b19\_90_pmux for cells of type $pmux.
Using template $paramod$f6bf1f1dddfecf9c130dbf1891cd5108c01ea35b\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$98fdd47e93ebd6ee7b239851ea6e44b4909054e6\_80_ecp5_alu for cells of type $alu.
Using template $paramod$649fc39eef2451024566705288528c8671211199\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ecp5_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$constmap:5bb736f28100a66674c02e4dcb544fb4c600c498$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx for cells of type $shiftx.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'0
  Constant input on bit 26 of port A: 1'0
  Constant input on bit 27 of port A: 1'0
  Constant input on bit 28 of port A: 1'0
  Constant input on bit 29 of port A: 1'0
  Constant input on bit 30 of port A: 1'0
  Constant input on bit 31 of port A: 1'0
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 5 of port B: 1'0
Creating constmapped module `$paramod$constmap:4562e39db7a712251ff44c64a753c12e6775e36a$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx'.

31.32.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4562e39db7a712251ff44c64a753c12e6775e36a$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$16921.
    dead port 1/2 on $mux $procmux$16918.
    dead port 2/2 on $mux $procmux$16918.
    dead port 1/2 on $mux $procmux$16915.
    dead port 1/2 on $mux $procmux$16912.
    dead port 2/2 on $mux $procmux$16912.
    dead port 2/2 on $mux $procmux$16906.
    dead port 2/2 on $mux $procmux$16900.
    dead port 2/2 on $mux $procmux$16894.
Removed 9 multiplexer ports.
<suppressed ~3351 debug messages>

31.32.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:4562e39db7a712251ff44c64a753c12e6775e36a$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx.
<suppressed ~3 debug messages>
Removed 0 unused cells and 13 unused wires.
Using template $paramod$constmap:4562e39db7a712251ff44c64a753c12e6775e36a$paramod$038383553253758e8f741c3dc0591b3c7e80f6b8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:96db1c8882733f290d4b3012b59af5a420ef500e$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
Creating constmapped module `$paramod$constmap:79ee240afdfd622112cdf973c4ee8d97acf4a125$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx'.

31.32.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:79ee240afdfd622112cdf973c4ee8d97acf4a125$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$17036.
    dead port 2/2 on $mux $procmux$17030.
    dead port 2/2 on $mux $procmux$17024.
    dead port 2/2 on $mux $procmux$17018.
    dead port 2/2 on $mux $procmux$17012.
    dead port 2/2 on $mux $procmux$17006.
Removed 6 multiplexer ports.
<suppressed ~648 debug messages>

31.32.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:79ee240afdfd622112cdf973c4ee8d97acf4a125$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx.
<suppressed ~28 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:79ee240afdfd622112cdf973c4ee8d97acf4a125$paramod$d26ceb004b1c92f0df605bf9b3fc829369ac4a34\_90_shift_shiftx for cells of type $shift.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$7a77ea55da18354df8e6d78449c6822120e00d50\_80_ecp5_alu for cells of type $alu.
Using template $paramod$448756c9a9dfaa49080ce4b90c6cc182883e181f\_80_ecp5_alu for cells of type $alu.
Using template $paramod$constmap:87f1fa8c8dcb9196cfcf01ac6d09276950f96d52$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
Creating constmapped module `$paramod$constmap:5804069588edb7ff25baa001bebacc87928895c1$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx'.

31.32.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:5804069588edb7ff25baa001bebacc87928895c1$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$18156.
    dead port 2/2 on $mux $procmux$18150.
    dead port 2/2 on $mux $procmux$18144.
    dead port 2/2 on $mux $procmux$18138.
    dead port 2/2 on $mux $procmux$18132.
    dead port 2/2 on $mux $procmux$18126.
Removed 6 multiplexer ports.
<suppressed ~947 debug messages>

31.32.144. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:5804069588edb7ff25baa001bebacc87928895c1$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx.
<suppressed ~28 debug messages>
Removed 0 unused cells and 11 unused wires.
Using template $paramod$constmap:5804069588edb7ff25baa001bebacc87928895c1$paramod$f7d26b43d3f1e8db078109925a281da6be642e01\_90_shift_shiftx for cells of type $shift.
Using template $paramod$constmap:37b3cc4e06391b7a7ef418215dc52e2abb59f048$paramod$282e2f6c0b1116d84b8f8102ddacd7ff760b6794\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$95ab7b964273918a033d1324366ecc612d202989\_90_pmux for cells of type $pmux.
Using template $paramod$366dd6b6ab1aceeba20e443f3798978668d1d6e8\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:446553370afc6c2aa6cc0b8f657b7f64b237ff7c$paramod$962bb79c2a50a422516483c1c9c06046761917ac\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000000011 for cells of type $fa.
No more expansions possible.
<suppressed ~2873 debug messages>

31.33. Executing OPT pass (performing simple optimizations).

31.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~7223 debug messages>

31.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~3945 debug messages>
Removed a total of 1315 cells.

31.33.3. Executing OPT_DFF pass (perform DFF optimizations).

31.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 1319 unused cells and 5166 unused wires.
<suppressed ~1322 debug messages>

31.33.5. Finished fast OPT passes.

31.34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

31.36. Executing TECHMAP pass (map to technology primitives).

31.36.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

31.36.2. Continuing TECHMAP pass.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
Using template $paramod\$_DFF_N_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_N_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
No more expansions possible.
<suppressed ~1499 debug messages>

31.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~37 debug messages>

31.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.39. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in tt_ecp5_wrapper.

31.40. Executing ATTRMVCP pass (move or copy attributes).

31.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 7142 unused wires.
<suppressed ~1 debug messages>

31.42. Executing TECHMAP pass (map to technology primitives).

31.42.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

31.43. Executing ABC9 pass.

31.43.1. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.2. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.3. Executing PROC pass (convert processes to netlists).

31.43.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

31.43.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916 in module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.
Removed a total of 0 dead cases.

31.43.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

31.43.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:340$32917'.
  Set init value: \Q = 1'1

31.43.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \muxlsr in `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916'.

31.43.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~1 debug messages>

31.43.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:340$32917'.
Creating decoders for process `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916'.
     1/1: $0\Q[0:0]

31.43.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

31.43.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.\Q' using process `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916'.
  created $adff cell `$procdff$32922' with positive edge clock and positive level reset.

31.43.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

31.43.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:340$32917'.
Found and cleaned up 1 empty switch in `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916'.
Removing empty process `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.$proc$/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:344$32916'.
Cleaned up 1 empty switch.

31.43.4. Executing SCC pass (detecting logic loops).
Found an SCC: $auto$simplemap.cc:83:simplemap_bitop$24236 $auto$ff.cc:266:slice$12475 $auto$simplemap.cc:83:simplemap_bitop$24243 $auto$ff.cc:266:slice$12482 $auto$opt_expr.cc:617:replace_const_cells$29172 $auto$ff.cc:266:slice$12490 $auto$simplemap.cc:38:simplemap_not$24683 $auto$ff.cc:266:slice$12486 $auto$simplemap.cc:134:simplemap_reduce$9439 $auto$simplemap.cc:38:simplemap_not$24686 $auto$ff.cc:266:slice$12489 $auto$simplemap.cc:38:simplemap_not$24685 $auto$ff.cc:266:slice$12488 $auto$simplemap.cc:134:simplemap_reduce$9444 $auto$simplemap.cc:134:simplemap_reduce$9438 $auto$simplemap.cc:38:simplemap_not$24684 $auto$ff.cc:266:slice$12487 $auto$simplemap.cc:83:simplemap_bitop$24240 $auto$ff.cc:266:slice$12479 $auto$simplemap.cc:83:simplemap_bitop$24239 $auto$ff.cc:266:slice$12478 $auto$simplemap.cc:134:simplemap_reduce$9433 $auto$simplemap.cc:83:simplemap_bitop$24238 $auto$ff.cc:266:slice$12477 $auto$simplemap.cc:134:simplemap_reduce$9441 $auto$simplemap.cc:134:simplemap_reduce$9432 $auto$simplemap.cc:83:simplemap_bitop$24237 $auto$alumacc.cc:495:replace_alu$7726.slice[2].ccu2c_i $auto$alumacc.cc:495:replace_alu$7726.slice[0].ccu2c_i $auto$ff.cc:266:slice$12476 $auto$simplemap.cc:38:simplemap_not$24680 $auto$ff.cc:266:slice$12483 $auto$simplemap.cc:134:simplemap_reduce$9436 $auto$simplemap.cc:38:simplemap_not$24681 $auto$ff.cc:266:slice$12484 $auto$simplemap.cc:134:simplemap_reduce$9447 $auto$simplemap.cc:134:simplemap_reduce$9443 $auto$simplemap.cc:134:simplemap_reduce$9437 $auto$opt_expr.cc:617:replace_const_cells$29182 $auto$ff.cc:266:slice$12485 $auto$simplemap.cc:134:simplemap_reduce$9434 $auto$simplemap.cc:83:simplemap_bitop$24241 $auto$alumacc.cc:495:replace_alu$7726.slice[4].ccu2c_i $auto$ff.cc:266:slice$12480 $auto$simplemap.cc:134:simplemap_reduce$9449 $auto$simplemap.cc:134:simplemap_reduce$9446 $auto$simplemap.cc:134:simplemap_reduce$9442 $auto$simplemap.cc:134:simplemap_reduce$9435 $auto$simplemap.cc:83:simplemap_bitop$24242 $auto$simplemap.cc:38:simplemap_not$8646 $auto$alumacc.cc:495:replace_alu$7726.slice[14].ccu2c_i $auto$alumacc.cc:495:replace_alu$7726.slice[12].ccu2c_i $auto$alumacc.cc:495:replace_alu$7726.slice[10].ccu2c_i $auto$alumacc.cc:495:replace_alu$7726.slice[8].ccu2c_i $auto$alumacc.cc:495:replace_alu$7726.slice[6].ccu2c_i $auto$ff.cc:266:slice$12481 $auto$simplemap.cc:134:simplemap_reduce$9142 $auto$simplemap.cc:134:simplemap_reduce$9140 $auto$simplemap.cc:38:simplemap_not$8380 $auto$simplemap.cc:83:simplemap_bitop$8297
Found an SCC: $auto$simplemap.cc:204:simplemap_lognot$18002 $auto$ff.cc:266:slice$17753 $auto$simplemap.cc:233:simplemap_logbin$18372 $auto$ff.cc:266:slice$17748 $auto$opt_expr.cc:617:replace_const_cells$30340 $auto$ff.cc:266:slice$17743 $auto$simplemap.cc:38:simplemap_not$20769 $auto$ff.cc:266:slice$17739 $auto$simplemap.cc:134:simplemap_reduce$8518 $auto$ff.cc:266:slice$17747 $auto$simplemap.cc:134:simplemap_reduce$17480 $auto$simplemap.cc:134:simplemap_reduce$17467 $auto$simplemap.cc:38:simplemap_not$20770 $auto$simplemap.cc:134:simplemap_reduce$18369 $auto$simplemap.cc:134:simplemap_reduce$17454 $auto$ff.cc:266:slice$17740 $auto$simplemap.cc:204:simplemap_lognot$17435 $auto$simplemap.cc:134:simplemap_reduce$17433 $auto$simplemap.cc:233:simplemap_logbin$17436 $auto$simplemap.cc:233:simplemap_logbin$17422 $auto$simplemap.cc:204:simplemap_lognot$17421 $auto$simplemap.cc:134:simplemap_reduce$17419 $auto$simplemap.cc:204:simplemap_lognot$17402 $auto$simplemap.cc:134:simplemap_reduce$17400 $auto$opt_expr.cc:617:replace_const_cells$30262 $auto$simplemap.cc:233:simplemap_logbin$18055 $auto$ff.cc:266:slice$17742 $auto$simplemap.cc:134:simplemap_reduce$8415 $auto$simplemap.cc:204:simplemap_lognot$17362 $auto$simplemap.cc:233:simplemap_logbin$18389 $auto$simplemap.cc:175:logic_reduce$17361 $auto$ff.cc:266:slice$17741 $auto$opt_expr.cc:617:replace_const_cells$30124 $auto$simplemap.cc:83:simplemap_bitop$18391 $auto$opt_expr.cc:617:replace_const_cells$29214 $auto$simplemap.cc:275:simplemap_mux$12595 $auto$ff.cc:266:slice$16407 $auto$simplemap.cc:275:simplemap_mux$17799 $auto$simplemap.cc:233:simplemap_logbin$18327 $auto$simplemap.cc:233:simplemap_logbin$18328 $auto$simplemap.cc:275:simplemap_mux$17798 $auto$simplemap.cc:275:simplemap_mux$17861 $auto$simplemap.cc:83:simplemap_bitop$18023 $auto$simplemap.cc:38:simplemap_not$21826 $auto$simplemap.cc:83:simplemap_bitop$18036 $auto$ff.cc:266:slice$17787 $auto$simplemap.cc:204:simplemap_lognot$18030 $auto$simplemap.cc:134:simplemap_reduce$18028 $auto$simplemap.cc:83:simplemap_bitop$18024 $auto$simplemap.cc:83:simplemap_bitop$21820 $auto$simplemap.cc:83:simplemap_bitop$16854 $auto$simplemap.cc:83:simplemap_bitop$28954 $auto$opt_expr.cc:617:replace_const_cells$29426 $auto$simplemap.cc:83:simplemap_bitop$28952 $auto$simplemap.cc:83:simplemap_bitop$29141 $auto$simplemap.cc:83:simplemap_bitop$29144 $auto$simplemap.cc:233:simplemap_logbin$18395 $auto$simplemap.cc:204:simplemap_lognot$16864 $auto$simplemap.cc:134:simplemap_reduce$16862 $auto$simplemap.cc:134:simplemap_reduce$16860 $auto$simplemap.cc:83:simplemap_bitop$16855 $auto$simplemap.cc:83:simplemap_bitop$28951 $auto$simplemap.cc:83:simplemap_bitop$28963 $auto$simplemap.cc:233:simplemap_logbin$16866 $auto$simplemap.cc:233:simplemap_logbin$18393 $auto$simplemap.cc:204:simplemap_lognot$18394 $auto$simplemap.cc:233:simplemap_logbin$18044 $auto$simplemap.cc:233:simplemap_logbin$18384 $auto$simplemap.cc:233:simplemap_logbin$18385 $auto$simplemap.cc:233:simplemap_logbin$18387 $auto$simplemap.cc:233:simplemap_logbin$18392 $auto$simplemap.cc:204:simplemap_lognot$18054 $auto$simplemap.cc:134:simplemap_reduce$18052 $auto$simplemap.cc:233:simplemap_logbin$18019 $auto$simplemap.cc:204:simplemap_lognot$18043 $auto$simplemap.cc:134:simplemap_reduce$18041 $auto$simplemap.cc:83:simplemap_bitop$18037 $auto$simplemap.cc:204:simplemap_lognot$18017 $auto$simplemap.cc:175:logic_reduce$18016 $auto$ff.cc:266:slice$17788 $auto$simplemap.cc:233:simplemap_logbin$18326 $auto$simplemap.cc:275:simplemap_mux$17800 $auto$simplemap.cc:275:simplemap_mux$17862 $auto$simplemap.cc:134:simplemap_reduce$18013 $auto$opt_expr.cc:617:replace_const_cells$29216 $auto$simplemap.cc:275:simplemap_mux$17828 $auto$simplemap.cc:134:simplemap_reduce$18383 $auto$opt_expr.cc:617:replace_const_cells$30122 $auto$simplemap.cc:83:simplemap_bitop$18390 $auto$simplemap.cc:275:simplemap_mux$12594 $auto$ff.cc:266:slice$16406 $auto$simplemap.cc:134:simplemap_reduce$8907 $auto$simplemap.cc:233:simplemap_logbin$17215 $auto$simplemap.cc:233:simplemap_logbin$17237 $auto$simplemap.cc:275:simplemap_mux$12559 $auto$simplemap.cc:233:simplemap_logbin$18004 $auto$simplemap.cc:233:simplemap_logbin$18005 $auto$simplemap.cc:204:simplemap_lognot$18006 $auto$simplemap.cc:233:simplemap_logbin$17998 $auto$simplemap.cc:233:simplemap_logbin$17999 $auto$simplemap.cc:233:simplemap_logbin$18000 $auto$simplemap.cc:233:simplemap_logbin$18001 $auto$simplemap.cc:233:simplemap_logbin$18003 $auto$simplemap.cc:233:simplemap_logbin$18014 $auto$ff.cc:266:slice$17793 $auto$dfflegalize.cc:941:flip_pol$31362 $auto$ff.cc:485:convert_ce_over_srst$31360 $auto$simplemap.cc:134:simplemap_reduce$8550 $auto$simplemap.cc:134:simplemap_reduce$8548 $auto$simplemap.cc:134:simplemap_reduce$8546 $auto$simplemap.cc:233:simplemap_logbin$18018 $auto$simplemap.cc:233:simplemap_logbin$18020 $auto$simplemap.cc:233:simplemap_logbin$18374 $auto$simplemap.cc:233:simplemap_logbin$18376 $auto$simplemap.cc:233:simplemap_logbin$18325 $auto$ff.cc:266:slice$17750 $auto$simplemap.cc:134:simplemap_reduce$8418 $auto$simplemap.cc:134:simplemap_reduce$8416 $auto$simplemap.cc:275:simplemap_mux$17437 $auto$simplemap.cc:204:simplemap_lognot$17389 $auto$simplemap.cc:175:logic_reduce$17388 $auto$ff.cc:266:slice$17749 $auto$simplemap.cc:233:simplemap_logbin$17357 $auto$simplemap.cc:233:simplemap_logbin$17330 $auto$simplemap.cc:233:simplemap_logbin$17329 $auto$simplemap.cc:275:simplemap_mux$17801 $auto$simplemap.cc:275:simplemap_mux$17810 $auto$simplemap.cc:275:simplemap_mux$17819 $auto$simplemap.cc:233:simplemap_logbin$18386
Found an SCC: $auto$simplemap.cc:38:simplemap_not$9084 $auto$simplemap.cc:83:simplemap_bitop$29006 $auto$simplemap.cc:38:simplemap_not$28159 $auto$simplemap.cc:275:simplemap_mux$17311 $auto$simplemap.cc:83:simplemap_bitop$24847 $auto$simplemap.cc:83:simplemap_bitop$24844 $auto$ff.cc:266:slice$15584 $auto$simplemap.cc:134:simplemap_reduce$16661 $auto$simplemap.cc:134:simplemap_reduce$16659 $auto$simplemap.cc:275:simplemap_mux$16485 $auto$simplemap.cc:275:simplemap_mux$16487 $auto$simplemap.cc:275:simplemap_mux$16489 $auto$simplemap.cc:275:simplemap_mux$16491 $auto$simplemap.cc:233:simplemap_logbin$17247 $auto$simplemap.cc:134:simplemap_reduce$8824 $auto$simplemap.cc:134:simplemap_reduce$9544
Found an SCC: $auto$opt_expr.cc:617:replace_const_cells$30346 $auto$ff.cc:266:slice$18623 $auto$simplemap.cc:83:simplemap_bitop$18803 $auto$ff.cc:266:slice$18629 $auto$simplemap.cc:83:simplemap_bitop$18802 $auto$ff.cc:266:slice$18628 $auto$simplemap.cc:134:simplemap_reduce$18812 $auto$simplemap.cc:134:simplemap_reduce$18809 $auto$simplemap.cc:83:simplemap_bitop$18801 $auto$ff.cc:266:slice$18627 $auto$ff.cc:266:slice$18626 $auto$simplemap.cc:134:simplemap_reduce$18807 $auto$opt_expr.cc:617:replace_const_cells$29436 $auto$ff.cc:266:slice$18624 $auto$simplemap.cc:83:simplemap_bitop$18799 $auto$ff.cc:266:slice$18625 $auto$simplemap.cc:134:simplemap_reduce$9367 $auto$simplemap.cc:204:simplemap_lognot$18816 $auto$simplemap.cc:134:simplemap_reduce$18814 $auto$simplemap.cc:134:simplemap_reduce$18811 $auto$simplemap.cc:134:simplemap_reduce$18808 $auto$simplemap.cc:83:simplemap_bitop$18800
Found an SCC: $auto$simplemap.cc:83:simplemap_bitop$24501 $auto$ff.cc:266:slice$11762 $auto$alumacc.cc:495:replace_alu$7749.slice[0].ccu2c_i $auto$simplemap.cc:134:simplemap_reduce$8648 $auto$simplemap.cc:83:simplemap_bitop$24502 $auto$ff.cc:266:slice$11763 $auto$simplemap.cc:83:simplemap_bitop$24503 $auto$ff.cc:266:slice$11764 $auto$simplemap.cc:134:simplemap_reduce$8655 $auto$simplemap.cc:134:simplemap_reduce$8649 $auto$simplemap.cc:83:simplemap_bitop$24504 $auto$alumacc.cc:495:replace_alu$7749.slice[2].ccu2c_i $auto$ff.cc:266:slice$11765 $auto$simplemap.cc:83:simplemap_bitop$24505 $auto$ff.cc:266:slice$11766 $auto$simplemap.cc:134:simplemap_reduce$8650 $auto$simplemap.cc:83:simplemap_bitop$24506 $auto$alumacc.cc:495:replace_alu$7749.slice[4].ccu2c_i $auto$ff.cc:266:slice$11767 $auto$simplemap.cc:83:simplemap_bitop$24507 $auto$ff.cc:266:slice$11768 $auto$simplemap.cc:134:simplemap_reduce$8659 $auto$simplemap.cc:134:simplemap_reduce$8656 $auto$simplemap.cc:134:simplemap_reduce$8651 $auto$simplemap.cc:83:simplemap_bitop$24508 $auto$alumacc.cc:495:replace_alu$7749.slice[6].ccu2c_i $auto$ff.cc:266:slice$11769 $auto$simplemap.cc:83:simplemap_bitop$24509 $auto$ff.cc:266:slice$11770 $auto$simplemap.cc:134:simplemap_reduce$8652 $auto$simplemap.cc:83:simplemap_bitop$24510 $auto$alumacc.cc:495:replace_alu$7749.slice[8].ccu2c_i $auto$ff.cc:266:slice$11771 $auto$ff.cc:266:slice$11772 $auto$simplemap.cc:83:simplemap_bitop$24512 $auto$alumacc.cc:495:replace_alu$7749.slice[10].ccu2c_i $auto$ff.cc:266:slice$11773 $auto$simplemap.cc:83:simplemap_bitop$24513 $auto$simplemap.cc:233:simplemap_logbin$24557 $auto$simplemap.cc:233:simplemap_logbin$24544 $auto$simplemap.cc:38:simplemap_not$8832 $auto$simplemap.cc:233:simplemap_logbin$24543 $auto$simplemap.cc:233:simplemap_logbin$24558 $auto$ff.cc:266:slice$11774 $auto$simplemap.cc:134:simplemap_reduce$9177 $auto$simplemap.cc:134:simplemap_reduce$9175 $auto$simplemap.cc:38:simplemap_not$8354 $auto$simplemap.cc:83:simplemap_bitop$16664 $auto$simplemap.cc:134:simplemap_reduce$8662 $auto$simplemap.cc:134:simplemap_reduce$8660 $auto$simplemap.cc:134:simplemap_reduce$8657 $auto$simplemap.cc:134:simplemap_reduce$8653 $auto$simplemap.cc:83:simplemap_bitop$24511
Found an SCC: $auto$simplemap.cc:83:simplemap_bitop$27637 $auto$ff.cc:266:slice$11489 $auto$simplemap.cc:83:simplemap_bitop$27636 $auto$ff.cc:266:slice$11488 $auto$simplemap.cc:134:simplemap_reduce$9414 $auto$simplemap.cc:83:simplemap_bitop$27635 $auto$ff.cc:266:slice$11487 $auto$simplemap.cc:83:simplemap_bitop$27634 $auto$ff.cc:266:slice$11486 $auto$simplemap.cc:134:simplemap_reduce$9413 $auto$simplemap.cc:83:simplemap_bitop$27633 $auto$ff.cc:266:slice$11485 $auto$simplemap.cc:83:simplemap_bitop$27632 $auto$ff.cc:266:slice$11484 $auto$simplemap.cc:134:simplemap_reduce$9419 $auto$simplemap.cc:134:simplemap_reduce$9412 $auto$simplemap.cc:83:simplemap_bitop$27631 $auto$alumacc.cc:495:replace_alu$7762.slice[4].ccu2c_i $auto$alumacc.cc:495:replace_alu$7762.slice[2].ccu2c_i $auto$alumacc.cc:495:replace_alu$7762.slice[0].ccu2c_i $auto$ff.cc:266:slice$11483 $auto$simplemap.cc:83:simplemap_bitop$27639 $auto$ff.cc:266:slice$11491 $auto$simplemap.cc:134:simplemap_reduce$9416 $auto$simplemap.cc:83:simplemap_bitop$27640 $auto$ff.cc:266:slice$11492 $auto$ff.cc:266:slice$11493 $auto$simplemap.cc:83:simplemap_bitop$27642 $auto$ff.cc:266:slice$11494 $auto$simplemap.cc:83:simplemap_bitop$27643 $auto$simplemap.cc:233:simplemap_logbin$27669 $auto$simplemap.cc:233:simplemap_logbin$27670 $auto$ff.cc:266:slice$11495 $auto$simplemap.cc:134:simplemap_reduce$9423 $auto$simplemap.cc:134:simplemap_reduce$9420 $auto$simplemap.cc:134:simplemap_reduce$9415 $auto$simplemap.cc:83:simplemap_bitop$27638 $auto$simplemap.cc:38:simplemap_not$9555 $auto$simplemap.cc:233:simplemap_logbin$27672 $auto$simplemap.cc:233:simplemap_logbin$27671 $auto$alumacc.cc:495:replace_alu$7762.slice[10].ccu2c_i $auto$alumacc.cc:495:replace_alu$7762.slice[8].ccu2c_i $auto$alumacc.cc:495:replace_alu$7762.slice[6].ccu2c_i $auto$ff.cc:266:slice$11490 $auto$simplemap.cc:134:simplemap_reduce$9181 $auto$simplemap.cc:233:simplemap_logbin$11555 $auto$simplemap.cc:134:simplemap_reduce$9183 $auto$simplemap.cc:134:simplemap_reduce$8831 $auto$simplemap.cc:38:simplemap_not$8822 $auto$simplemap.cc:83:simplemap_bitop$9410 $auto$simplemap.cc:134:simplemap_reduce$9426 $auto$simplemap.cc:134:simplemap_reduce$9424 $auto$simplemap.cc:134:simplemap_reduce$9421 $auto$simplemap.cc:134:simplemap_reduce$9417 $auto$simplemap.cc:83:simplemap_bitop$27641
Found an SCC: $auto$ff.cc:266:slice$9889 $auto$simplemap.cc:134:simplemap_reduce$9724 $auto$simplemap.cc:38:simplemap_not$19148 $auto$ff.cc:266:slice$9888 $auto$simplemap.cc:38:simplemap_not$19147 $auto$ff.cc:266:slice$9887 $auto$simplemap.cc:134:simplemap_reduce$9726 $auto$simplemap.cc:134:simplemap_reduce$9723 $auto$ff.cc:266:slice$9886 $auto$simplemap.cc:134:simplemap_reduce$9363 $auto$simplemap.cc:204:simplemap_lognot$9728
Found 7 SCCs in module tt_ecp5_wrapper.
Found 7 SCCs.

31.43.5. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.6. Executing TECHMAP pass (map to technology primitives).

31.43.6.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.43.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~164 debug messages>

31.43.7. Executing OPT pass (performing simple optimizations).

31.43.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.

31.43.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF'.
Removed a total of 0 cells.

31.43.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.43.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.
Performed a total of 0 changes.

31.43.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF'.
Removed a total of 0 cells.

31.43.7.6. Executing OPT_DFF pass (perform DFF optimizations).

31.43.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF..

31.43.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.

31.43.7.9. Finished OPT passes. (There is nothing left to do.)

31.43.8. Executing TECHMAP pass (map to technology primitives).

31.43.8.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

31.43.8.2. Continuing TECHMAP pass.
Using template $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF for cells of type $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.
No more expansions possible.
<suppressed ~4 debug messages>

31.43.9. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

31.43.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

31.43.11. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

31.43.13. Executing TECHMAP pass (map to technology primitives).

31.43.13.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.43.13.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\LUT2\INIT=4'1010 for cells of type LUT2.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\LUT4\INIT=16'1001011010101010 for cells of type LUT4.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~203 debug messages>

31.43.14. Executing OPT pass (performing simple optimizations).

31.43.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.
<suppressed ~18 debug messages>

31.43.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

31.43.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.43.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.43.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.43.14.6. Executing OPT_DFF pass (perform DFF optimizations).

31.43.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

31.43.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.43.14.9. Rerunning OPT passes. (Maybe there is more to do..)

31.43.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tt_ecp5_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.43.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tt_ecp5_wrapper.
Performed a total of 0 changes.

31.43.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tt_ecp5_wrapper'.
Removed a total of 0 cells.

31.43.14.13. Executing OPT_DFF pass (perform DFF optimizations).

31.43.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tt_ecp5_wrapper..

31.43.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tt_ecp5_wrapper.

31.43.14.16. Finished OPT passes. (There is nothing left to do.)

31.43.15. Executing AIGMAP pass (map logic to AIG).
Module tt_ecp5_wrapper: replaced 18 cells with 120 new cells, skipped 39 cells.
  replaced 3 cell types:
       2 $_OR_
       2 $_XOR_
      14 $_MUX_
  not replaced 3 cell types:
      31 $specify2
       4 $_NOT_
       4 $_AND_

31.43.16. Executing AIGMAP pass (map logic to AIG).
Module tt_ecp5_wrapper: replaced 4415 cells with 25673 new cells, skipped 3781 cells.
  replaced 5 cell types:
    1642 $_OR_
     199 $_XOR_
       2 $_ANDNOT_
      74 $_ORNOT_
    2498 $_MUX_
  not replaced 10 cell types:
     183 $scopeinfo
    1088 $_NOT_
     953 $_AND_
       8 $_TBUF_
    1383 TRELLIS_FF
       1 MULT18X18D
     162 $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C
       1 $__ABC9_SCC_BREAKER
       1 $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF_$abc9_byp
       1 $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF

31.43.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

31.43.16.3. Executing XAIGER backend.
<suppressed ~11 debug messages>
Extracted 10762 AND gates and 30373 wires from module `tt_ecp5_wrapper' to a netlist network with 1429 inputs and 1789 outputs.

31.43.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

31.43.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1429/   1789  and =    8499  lev =   60 (4.63)  mem = 0.18 MB  box = 163  bb = 1
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1429/   1789  and =    9988  lev =   39 (3.39)  mem = 0.19 MB  ch = 1402  box = 135  bb = 1
ABC: cst =       0  cls =   1211  lit =    1402  unused =    9207  proof =     0
ABC: + &if -W 300 -v 
ABC: K = 7. Memory (bytes): Truth =    0. Cut =   64. Obj =  148. Set =  672. CutMin = no
ABC: Node =    9988.  Ch =  1211.  Total mem =    2.32 MB. Peak cut mem =    0.30 MB.
ABC: P:  Del = 5861.00.  Ar =   10102.0.  Edge =    12214.  Cut =   124764.  T =     0.03 sec
ABC: P:  Del = 5782.00.  Ar =    9609.0.  Edge =    12030.  Cut =   123791.  T =     0.04 sec
ABC: P:  Del = 5782.00.  Ar =    4141.0.  Edge =     9582.  Cut =   255835.  T =     0.07 sec
ABC: F:  Del = 5782.00.  Ar =    3299.0.  Edge =     8795.  Cut =   223243.  T =     0.06 sec
ABC: A:  Del = 5781.00.  Ar =    2886.0.  Edge =     7724.  Cut =   210014.  T =     0.09 sec
ABC: A:  Del = 5781.00.  Ar =    2834.0.  Edge =     7650.  Cut =   217576.  T =     0.09 sec
ABC: Total time =     0.38 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   1429/   1789  and =    6883  lev =   44 (3.54)  mem = 0.15 MB  box = 135  bb = 1
ABC: Mapping (K=7)  :  lut =   2034  edge =    7423  lev =   13 (1.59)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   44  mem = 0.09 MB
ABC: LUT = 2034 : 2=296 14.6 %  3=636 31.3 %  4=721 35.4 %  5=275 13.5 %  6=78 3.8 %  7=28 1.4 %  Ave = 3.65
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 2.43 seconds, total: 2.43 seconds

31.43.16.6. Executing AIGER frontend.
<suppressed ~6476 debug messages>
Removed 9891 unused cells and 14568 unused wires.

31.43.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     2054
ABC RESULTS:   $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C cells:      134
ABC RESULTS:   $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF_$abc9_byp cells:        1
ABC RESULTS:           input signals:      181
ABC RESULTS:          output signals:      899
Removing temp directory.

31.43.17. Executing TECHMAP pass (map to technology primitives).

31.43.17.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

31.43.17.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using template $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF for cells of type $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF.
Using template $paramod\$__ABC9_SCC_BREAKER\WIDTH=32'00000000000000000000000000000111 for cells of type $__ABC9_SCC_BREAKER.
Using template $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF_$abc9_byp for cells of type $paramod$b50ed6cf3f2b5c0e07657602cb4455d90f2562f9\TRELLIS_FF_$abc9_byp.
No more expansions possible.
<suppressed ~156 debug messages>
Removed 316 unused cells and 33046 unused wires.

31.44. Executing TECHMAP pass (map to technology primitives).

31.44.1. Executing Verilog-2005 frontend: /home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/mdb36/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$4e546e469ee8eafeb1c0f21217b90e81be540c18\$lut for cells of type $lut.
Using template $paramod$9ab494594f178f1b2722725c1a755ee5c002129c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$e54349d9a634ecff5f53629ed023a0262d334efb\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$32a5418f4bda7095e1cc1ed073f673690a6f685e\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$d79e8c7f0cb3bd049a34d82ec5fe688d444e5a52\$lut for cells of type $lut.
Using template $paramod$4eb848e991ac2a992be9b4be01f278b220c0efac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$e26fc30525090aab64f7d7b0287505347f83e9fd\$lut for cells of type $lut.
Using template $paramod$7e9df0afb32b76fe5fce0691b8752aca650057fa\$lut for cells of type $lut.
Using template $paramod$4cd4ac6ae684c7289348368d32ccd97258359e33\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$369410fa9dd580a3a6e0f3b44e2410509554d59e\$lut for cells of type $lut.
Using template $paramod$a5c28c2501fb6843b33c948d8a2d30a9217c6b95\$lut for cells of type $lut.
Using template $paramod$713ad74bb8f36cc2cfd1a298dbe71927dd311d37\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$0872feef8b1cdb30e8950cd35f9b87730f3b09c5\$lut for cells of type $lut.
Using template $paramod$ffc2ea81a65101fbef8a332deddf112494d27163\$lut for cells of type $lut.
Using template $paramod$0923960fd7832301df742040da39a260f4e26f51\$lut for cells of type $lut.
Using template $paramod$74190755306950a81a07803293f7549508f6f157\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod$99ba7e80fc5077f9a2c5f62d113d8e3ac97ab48f\$lut for cells of type $lut.
Using template $paramod$d770fe103b7a1140b620f6ec6b051c1c37c73886\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$d4960d300985c240778be356d81b0c545e49f0c1\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$db88faebeb5b1899b973e7cf5eca6f2475772f05\$lut for cells of type $lut.
Using template $paramod$971aa253f6ebf73445953eb8ab961b6b42f182ad\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$025e75e6c32d367666373197cf8e38e3c70c46d7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$ed49ac630ee8b054c4deb19667be9e8a11947f4d\$lut for cells of type $lut.
Using template $paramod$d7856980c8e3df62f97c26ab34037f33a9e831b5\$lut for cells of type $lut.
Using template $paramod$44738793d36eb48bc409ace60386dbeecb5f09c8\$lut for cells of type $lut.
Using template $paramod$3eb18f16da49b15d5624c39f1c26b134bded288f\$lut for cells of type $lut.
Using template $paramod$ce15874c299a587dd16825ec2d2d2759b547554e\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$5ef2a93e015e890c4726a06cb2b485aa39f3b02f\$lut for cells of type $lut.
Using template $paramod$02cf23496f8558d140b4caf7b61366357a1db0ed\$lut for cells of type $lut.
Using template $paramod$adce9c89515a4e83641fc3471eb3c01ec7b082ff\$lut for cells of type $lut.
Using template $paramod$b55f45c6dc20e6c434e3ecfaac16a92e424cd4fe\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$82abb8f9ddaac453e6ee24bf456879be259b8e87\$lut for cells of type $lut.
Using template $paramod$d02ba476f5551196a9502e5e5a425dab5a9c8104\$lut for cells of type $lut.
Using template $paramod$6b7c9c56fc2a32a479d463d5f3b0d3f4673b67f1\$lut for cells of type $lut.
Using template $paramod$18a64cb0dff115b4a9698aab84699123efd16bdd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$6f8a12cc138968328cfeeaf39fcbc287421d86ca\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$f00e3c77bc84f748adf63b8f9ae3e57e8fd0a209\$lut for cells of type $lut.
Using template $paramod$057ec71729eca16233589e1a8c2264ade2c2bf20\$lut for cells of type $lut.
Using template $paramod$75242b8c890fc769af080f37fa34ba43d7a9ca6e\$lut for cells of type $lut.
Using template $paramod$e9b1660517681e30ba7f7f28fb134bf1a2c33d23\$lut for cells of type $lut.
Using template $paramod$48169e1eeb9ac0c445eb4a15ead4ca96ba5c1601\$lut for cells of type $lut.
Using template $paramod$2e3e93ee1ffa482696ace43e45644e1f7dd7aa79\$lut for cells of type $lut.
Using template $paramod$84593596b7985f104c18851eb10cccabb33365fc\$lut for cells of type $lut.
Using template $paramod$427ec8a8ab7fa3af9174f1577c859d4b0d2457ad\$lut for cells of type $lut.
Using template $paramod$42848eb229d46a47dd80e2f87818f6b9b2e5f756\$lut for cells of type $lut.
Using template $paramod$1c0292add505227572b9665f50d5f607102ffc0a\$lut for cells of type $lut.
Using template $paramod$da2fabb625ee56143675db8eda0a91a6945dc8a4\$lut for cells of type $lut.
Using template $paramod$8e6eb6ae04adde29cc95d20b9fe3738c5b869fca\$lut for cells of type $lut.
Using template $paramod$beed69c5dfe1706c526ca2f9c56e342f6d8f40bd\$lut for cells of type $lut.
Using template $paramod$0f76395b23fc51e5245834f295ce9244e30412b8\$lut for cells of type $lut.
Using template $paramod$7fd6b83cb740d5b1418573ac55cff8549f09facf\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$f24ba3ced4b870f8e829f5ac5a8af88573350e6f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$64fac1f907af3d554e6d2d527598c478a4d35e54\$lut for cells of type $lut.
Using template $paramod$2c8653f27f2849c6c11e091db5c30cdb2d5671e6\$lut for cells of type $lut.
Using template $paramod$3bacb6333db80151c77782514d5b8e887fdc088f\$lut for cells of type $lut.
Using template $paramod$11b771a2c18a1ad75dc08661e86450280a6004de\$lut for cells of type $lut.
Using template $paramod$3af7907114fd9fcc827f04a73d7d14bb61a89b91\$lut for cells of type $lut.
Using template $paramod$ad741188a8c0fa07c111295c0d82aaf317b1cef3\$lut for cells of type $lut.
Using template $paramod$fd705f49e46e0702ddf92279edfa977527de1c22\$lut for cells of type $lut.
Using template $paramod$0f35933e0ef89ab6000d29e5064710f8d575b2ba\$lut for cells of type $lut.
Using template $paramod$202c1275c5bbed7a7ea51e8877b5bf3b61940101\$lut for cells of type $lut.
Using template $paramod$82bf4dc4fe5be02f1b27bb7af2b71a1a562774bc\$lut for cells of type $lut.
Using template $paramod$3245deb5e8aa5b4835688a24e70bdf5c516dcece\$lut for cells of type $lut.
Using template $paramod$090c8304668c905951f70bd147895949df380221\$lut for cells of type $lut.
Using template $paramod$3a76ae1ac16567d84de882ad5b89dd62763f5d7e\$lut for cells of type $lut.
Using template $paramod$ac782e3adea0a3ae9d2fdbdeec9268c81ed9e6a7\$lut for cells of type $lut.
Using template $paramod$6fa82c472bb0a02dee29d2fa0f9b4cf84eefc04f\$lut for cells of type $lut.
Using template $paramod$1784f84a993b4e0847129a5b29d301e2f3a7f3fe\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$ececc55fe721b2d80098bfc00a6005f1af14b6e5\$lut for cells of type $lut.
Using template $paramod$fbed19fb84ee7c8a884778d28a96daea96245184\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$ee31e435566ec1b36f7e89d50958aee51c0e007b\$lut for cells of type $lut.
Using template $paramod$3ae9f1cda205b669870c653a21d45eee50078e98\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$f2897e4c0b3b75bb7fc24f28214f7b58a263643a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod$f857bdfd499f2d260fec7676092360e160d92149\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$01e96e53d77f79e0721c00741bd5ab06a9e25a93\$lut for cells of type $lut.
Using template $paramod$c75656bc8af73b1fd37fc2f9580b970bd545f476\$lut for cells of type $lut.
Using template $paramod$e18270e2c76257c405f4cd73657ae50105dc539e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$ca77a2810c53fbdb4b9dda93a9e9c72791506ee3\$lut for cells of type $lut.
Using template $paramod$b2192df6f90569fea4015d0a6658bdc192199f95\$lut for cells of type $lut.
Using template $paramod$ddc6f4fe74ed36832c5cee6594285c38523f3d9c\$lut for cells of type $lut.
Using template $paramod$891d17c049ef97ffbed57a5d4edf3f9e83d4f776\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$193e2152d2dc02741fc26d2139897e46aa82ba91\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$b287726797d0722f64e731f1134f7c05af8f1578\$lut for cells of type $lut.
Using template $paramod$57360d43efe5e3fc373f5db47e8eb829a0e01206\$lut for cells of type $lut.
Using template $paramod$07b1b12ce0305f55108770e958fd02caedfebdf8\$lut for cells of type $lut.
Using template $paramod$20f3f4b8e32f8a8b038b0056872dc94926194798\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$0ae7705354ab4bfd071e2551e0df024a40a698f7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$a03ef989f8f4e1878ce2f5c4e0e3d2dfb54307ef\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$3e7bec3fbe02a4b087a59401589fa30648281c42\$lut for cells of type $lut.
Using template $paramod$b11512cc0f29bc640db350146830f04903cbe382\$lut for cells of type $lut.
Using template $paramod$251994398653c4cf8de320f1e306e535d5d2d624\$lut for cells of type $lut.
Using template $paramod$adceb11ecdba48deee6fdb9cbec9e0a2b3e681aa\$lut for cells of type $lut.
Using template $paramod$8a17f9e0ccc893251c788f462e27b64f71a2f720\$lut for cells of type $lut.
Using template $paramod$02fbe8c67d33eabc42a06d471f5fbd85b121dbcc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$1e3430f21d933e902e2b8cb9ab970ea8ccfc0991\$lut for cells of type $lut.
Using template $paramod$0b5cc3819d553829adae587298d5244d5fcf696b\$lut for cells of type $lut.
Using template $paramod$7c085cdbf0919cd3ad402d9495d97f0d71e4db93\$lut for cells of type $lut.
Using template $paramod$999f9d6b9c27198343b5c07883eddc2c1a495f0c\$lut for cells of type $lut.
Using template $paramod$7491e7206ae8c682d288373efe06a43b67c277cf\$lut for cells of type $lut.
Using template $paramod$f73f5ac1a1206576a58bc84120294f987c44d449\$lut for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$9506ecf18c91672f3dae4008b6ad1f2863e8019f\$lut for cells of type $lut.
Using template $paramod$cf652acbfbf67d2248e3045cd0f09c58ca55886c\$lut for cells of type $lut.
Using template $paramod$8adf7fbd410d2cc654c288d5be5f7508ee8809b0\$lut for cells of type $lut.
Using template $paramod$b28b4ecbaa07efdcc51c93348ccdc2395f8b41c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$e1dd242985b3b6ca39f9da295fdbd441afd3fe21\$lut for cells of type $lut.
Using template $paramod$5bdbbec36fe77f90500afb20f840bbbccf30a64e\$lut for cells of type $lut.
Using template $paramod$73203879d5cac2dd0363e4eb2b49e6d52a00ad98\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod$8e1de9055515c7496a07ef8faf7889b539297813\$lut for cells of type $lut.
Using template $paramod$8ae5e24171bca0b8d12d43741a6723f274290f92\$lut for cells of type $lut.
Using template $paramod$64417f69dd1bbba2487e0d990f4a83723c3806dc\$lut for cells of type $lut.
Using template $paramod$27190b166827ead7a5b229ee873e4b91ee0faf61\$lut for cells of type $lut.
Using template $paramod$b9c2f02f244410a91c8935aba9b42c7219b269b6\$lut for cells of type $lut.
Using template $paramod$646227f71e01854745aff1e56d26b5342181f723\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod$df7cf3a08ed3156b701ba61f3c7ae7fdcbc826fe\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$480632dc6f7c037df6062cf8bf88300b5262c395\$lut for cells of type $lut.
Using template $paramod$704cad882e2bedddf5c55ef18de55c67afe1e0ec\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod$2c95149d0c6ec8cb015c816ff2bb05269df37d88\$lut for cells of type $lut.
Using template $paramod$fb4ed309581bcd972f41afa8566ae8b9812c7f6c\$lut for cells of type $lut.
Using template $paramod$db08fd84fb3c4d6a41eaec6adfffe445fb7eb17f\$lut for cells of type $lut.
Using template $paramod$2ca5a8bf2a853a223fe0e0148e443d1b7e1e37b1\$lut for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$7ea938ba138d4861840be1d72fba17b321428629\$lut for cells of type $lut.
Using template $paramod$626c926c090c24ceb89df275614206a0a54168a8\$lut for cells of type $lut.
Using template $paramod$ea5280fce2698f0f291737e66fca69a1d9d058e1\$lut for cells of type $lut.
Using template $paramod$4b9b235bc4444ff899bef0c648e4109b26737f1a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$ba7f31f246a278c41fa0648a6e0512f63185dec0\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$504d627b7f107c5f6e5c95ac43c2135d313086e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod$fe07503be663f9fa136093aa0dea361797ccf48d\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$23395325b56d063886fc56b419de630a473fd983\$lut for cells of type $lut.
Using template $paramod$444b6c7b41c15b5d37865fef51eb2d58d3b35a85\$lut for cells of type $lut.
Using template $paramod$4f09540800ac966d6e31a7ccf5f32a559a8ce57a\$lut for cells of type $lut.
Using template $paramod$2014354416722209de7d48370ab008bc2278a034\$lut for cells of type $lut.
Using template $paramod$5502a85110dbca29ac631107f0b0635e7fade476\$lut for cells of type $lut.
Using template $paramod$20373f52a08aa52267c21bc0c9316bd4d3188afb\$lut for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod$eec195054a78d1ea75a9d59c16f66aed583c2317\$lut for cells of type $lut.
Using template $paramod$bd1b6ba6a75d6c89555b03afab1a1516c03271cb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010010 for cells of type $lut.
Using template $paramod$19f568890ed784cb1efc3ce1b67eed20a6c54d9a\$lut for cells of type $lut.
Using template $paramod$e17d82cdc2d9cf251fcb5d47576318090a06bf34\$lut for cells of type $lut.
Using template $paramod$50bce75ffc3325ddfc11c72ef9d93f4c429ad2d1\$lut for cells of type $lut.
Using template $paramod$a29dc9226a883358910d3758606f48686bda2689\$lut for cells of type $lut.
Using template $paramod$7f72ce0e80d3f2a00d7341e8caf5f54477d8d4e3\$lut for cells of type $lut.
Using template $paramod$8b2040da7afad7cbea9e01989f60bb87eae9ab7c\$lut for cells of type $lut.
Using template $paramod$ca7bbbb3597afefe93ddbd4b5ed7c867ded9351b\$lut for cells of type $lut.
Using template $paramod$182ee83d12cee80ceaba2878f8f5779057b44ace\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$1935b8570c1303bf6669b3ce0bba3d701f70df4c\$lut for cells of type $lut.
Using template $paramod$35184672290a0c8962373cf1f4647abd2ff43033\$lut for cells of type $lut.
Using template $paramod$6023c671e114c4eb0467aa8a0b08e183f33ec2fd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101110 for cells of type $lut.
Using template $paramod$117b175eec96afcec8780c6ef836aff9c2f74d41\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$f5f41ee5d60dede31a2b59f58ec46b167939d713\$lut for cells of type $lut.
Using template $paramod$384ca820697864e5f2b9b7570e4569b99724b771\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$4c47c3f7568faf7a053ada99bc8eb8be63eaeb46\$lut for cells of type $lut.
Using template $paramod$eba7de026ff587370e320127e266317dae097a89\$lut for cells of type $lut.
Using template $paramod$fc6feb7ca0813ec6f9a6e104d2344b22630ad56a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$dbdbcb07b9994e498bb1324e5c006c6aa08a7a37\$lut for cells of type $lut.
Using template $paramod$5c36a508e8885449eeca65fa0c02b7154f6a3130\$lut for cells of type $lut.
Using template $paramod$a5f0af3f799529b77374bee00289619ff5a4016c\$lut for cells of type $lut.
Using template $paramod$b43cdd6ca89f8faa7ea02c4f2b202cefaf655ede\$lut for cells of type $lut.
Using template $paramod$7ebd053006fefd5a4368bea803813a6c7860a94a\$lut for cells of type $lut.
Using template $paramod$a54b3aace400e414b2dacbf99d86e437ee530c3c\$lut for cells of type $lut.
Using template $paramod$ba7c22fadfbf9ee7abcb895a21403114111dd201\$lut for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$037be5c00d8a02858cdb1ab049b58a0133287ff1\$lut for cells of type $lut.
Using template $paramod$9dd298ae76fb41ac94779a83c068607fbc09ce4f\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod$000fa2164e1f538c16460571efee2b6209a086cc\$lut for cells of type $lut.
Using template $paramod$c39bbcce81dae514aefd17dbc9fef8e011d41497\$lut for cells of type $lut.
Using template $paramod$f477a04ebe5f6e3e771821e26d14670385e3bd98\$lut for cells of type $lut.
Using template $paramod$620586420e818d3afa7e5b51fcf19f5c6ea83ad4\$lut for cells of type $lut.
Using template $paramod$23da582b86241546eace0c8bedadb42614eea4c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod$dbd6bfc0079f30bdbd8251243755394b48ae1fbb\$lut for cells of type $lut.
Using template $paramod$aa62b902bd4491f51b6eaea3666cb4ce5b576e99\$lut for cells of type $lut.
Using template $paramod$edf0f1ca1d51bddab33b022d26d3da5ca2294e0d\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$85876b8177d210dbdf6419bb357466ec4717e987\$lut for cells of type $lut.
Using template $paramod$fcff9a7b1687e357a40264efcefe8443c8b2971a\$lut for cells of type $lut.
Using template $paramod$e2d96f36ef28053ecd27167cd95b944485ac3146\$lut for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$eec22efc31481e6a2706a92743e67f4f90bad45a\$lut for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod$4853050665c020c8d21fb1a749196950a09d9df8\$lut for cells of type $lut.
Using template $paramod$1b953060567509feeab3cbaa083b56a5ab0943e2\$lut for cells of type $lut.
Using template $paramod$f919a4b1991f60672ac129533fc4e98150f7d551\$lut for cells of type $lut.
Using template $paramod$9a269ffb0efb6ad342cb106a4e0636e23fdfd547\$lut for cells of type $lut.
Using template $paramod$068092ddede495d8462ffe530e6d91711913edbc\$lut for cells of type $lut.
Using template $paramod$2ed945693823e972236d8ef3dfa1036e6ba89bd3\$lut for cells of type $lut.
Using template $paramod$22dec7e8c4f4b1c3e62879fa2207e0c39047bbd3\$lut for cells of type $lut.
Using template $paramod$a7c07944e10969b2e1fd563a5b72f89493cb3705\$lut for cells of type $lut.
Using template $paramod$ff9716c9ccd0f86212239b416977f548351e58d6\$lut for cells of type $lut.
Using template $paramod$20ba583962918fa0136fc97b1558cc45cc91cc29\$lut for cells of type $lut.
Using template $paramod$243f6eb289016abad6a3fb4ee4e308c1baf5393a\$lut for cells of type $lut.
Using template $paramod$ea525d6f48933688077316a316823c1c462f9d7f\$lut for cells of type $lut.
Using template $paramod$7f1ac77c5d84ef62fa0ac317f9798af74d02a33d\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$91d6743ceb0f093b57d242b538f7f23d2346d4c9\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$b4d81fbb78ba26461d6ef588eec61a5ee711f593\$lut for cells of type $lut.
Using template $paramod$5258d205b1a7669ac8b465e5348fac48dff6dfde\$lut for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$58df2c605746858c7e53492c8f57d6f1fafa12d2\$lut for cells of type $lut.
Using template $paramod$3702268f692b8bf258e428f65d3bca4e1f76d98b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$f1918b98c42e56cf0c4fd7424111b8eed6aa5764\$lut for cells of type $lut.
Using template $paramod$9cb5c649415aa09338a590d377acfd0635678579\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100010 for cells of type $lut.
Using template $paramod$619b7c9a4d44585e10b42f7fb79b16304cca97c5\$lut for cells of type $lut.
Using template $paramod$4097350e61390078eecf25bf2fe521264a29c1f9\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$03da3dcc7c75ea9c9148a6fc634f76a9d0cbefef\$lut for cells of type $lut.
Using template $paramod$9dfe2a25d99d8640a9f67a2438aaca85b684d257\$lut for cells of type $lut.
Using template $paramod$1dd08ae0c9c75c235d9038ee381888349f8b521a\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$88b3eb127ac82ebbef44a8411e6d1711dce68420\$lut for cells of type $lut.
Using template $paramod$0ee0167fb5dd83bdfe7197fff23e2c7146c57037\$lut for cells of type $lut.
Using template $paramod$38e6aa9546c40949f8135bb018f0d5ef863085b9\$lut for cells of type $lut.
Using template $paramod$7d35f3eb4056e6484203c99fe42cfcf1dfaba704\$lut for cells of type $lut.
Using template $paramod$b86b68a00733dbecb31d58a14a13683475a2002a\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$992bdc10cff2c6edd722994f0e1044bc863f79f7\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$afcb46a6d56ba82360e221df66fab2dbf63e96df\$lut for cells of type $lut.
Using template $paramod$ecd46d6fda07486be8824c387838c7716443dede\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$64c98a93c00f2932cdb01ce29e3a216b58ad51fe\$lut for cells of type $lut.
Using template $paramod$c64dec5f9cba92e7fb1a4ba3987a6ac85d9a3898\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$5eb282aa3e1a360420e6cd5f048c102e75b5bb57\$lut for cells of type $lut.
Using template $paramod$59848369e5f408d15e0c8c710ff689c98ce02999\$lut for cells of type $lut.
Using template $paramod$488c16bc761d01162c01d45dafcc583c2d93e7da\$lut for cells of type $lut.
Using template $paramod$b254004e52e31d6991f04f6113897c64fa1650ce\$lut for cells of type $lut.
Using template $paramod$7bb6a37e65823eeb4b38c370fec30ab082759a14\$lut for cells of type $lut.
Using template $paramod$d909494d67d7075f17a422f7cb5526f6d6564ea6\$lut for cells of type $lut.
Using template $paramod$5c6b3f112e9e774ff496d60752518cf567d2aa0c\$lut for cells of type $lut.
Using template $paramod$bf9d12be9e757c28b1374b63e168615e76b4b315\$lut for cells of type $lut.
Using template $paramod$cad8f5c808e91f937dcf797b89e646787b39867a\$lut for cells of type $lut.
Using template $paramod$2f17e1be43f3ac07ddcc5afec3b8e6a34320bd15\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$849eede967b3c8935808391f1a9ce50503aa897a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$725c7935b219edec970fdeae1a5161c7577a1fb2\$lut for cells of type $lut.
Using template $paramod$75d5c453cca75cc7a7ca320c4fb7be0932b6aaa7\$lut for cells of type $lut.
Using template $paramod$648d5b3c4c08a2b5e6752f60f9134dd7da5b02b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$52acd744af558b1acd7f06b0e1d721506b042b9b\$lut for cells of type $lut.
Using template $paramod$c2298f7e53b4bc5abf2922e59d9d10b3e37ce79d\$lut for cells of type $lut.
Using template $paramod$d646cd5cb36fb1f9dd2b06f584b3b88b2dec1d24\$lut for cells of type $lut.
Using template $paramod$46a3c0240e7a0e1ba60e351b8dd1863f2b554f8b\$lut for cells of type $lut.
Using template $paramod$3ec83cc0e0ec241030d7c40596e80d62c44c0f57\$lut for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$e8b1383c6901b56df73ac402d78a5e0a42461be0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$1f093f42b22f1cbed483e6fb46857abb85b9c690\$lut for cells of type $lut.
Using template $paramod$e67f7401ddeed7957ea40cf37767a32ba5d5b941\$lut for cells of type $lut.
Using template $paramod$b1680225cc6a5792caa95f54b8b3218fae21705d\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$a511f425a16be7369933baa8c17a62ec61a7d7bf\$lut for cells of type $lut.
Using template $paramod$047fa1aac617907e838f1b8f2df3ec2138c09566\$lut for cells of type $lut.
Using template $paramod$2fce3bb4b35407e40c1ffe5c5c5c3b3b855cbdfa\$lut for cells of type $lut.
Using template $paramod$52d96bfa17866bab828b9f1286c638d27fce0ef0\$lut for cells of type $lut.
Using template $paramod$183ec76ed3429a430a8be24b57f3de734985f568\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$5b4b4ed558983d9f3ab4c896a7a011d129b0db9a\$lut for cells of type $lut.
Using template $paramod$da98d9e875932ba6a280d468e3b5f7014491d245\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$d0aba71a7ea9c43ba4e04d936be46de775c59df0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$8e49d3af3dd526203d0c34b6a80982053a282457\$lut for cells of type $lut.
Using template $paramod$2a4b250d89be3556c74aa0e719a4f6242369d42f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$b89c522b7f70adaee1a35d80e932f38159b6a445\$lut for cells of type $lut.
Using template $paramod$7a988de7554d6c5e09a742c0a2d36472e50c73b1\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod$868876e6fbf32fc8a062709fbe4f313e5420f9a8\$lut for cells of type $lut.
Using template $paramod$f3b603d1450c2c61ce732232fcb5fe1f2884aa83\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$234fd643079033ba0cbc98ff572df9b7b7a0dc86\$lut for cells of type $lut.
Using template $paramod$034a69dd110db95ee917f313eafd6833fc6595f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$d70327b3f12e882eb020d884675134a0dde5b1d3\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011100 for cells of type $lut.
Using template $paramod$200c984f943dd866d7e8c2752060e8aab20e252b\$lut for cells of type $lut.
Using template $paramod$9aad620d570abd793d81066db9f8d8a4baf28b34\$lut for cells of type $lut.
Using template $paramod$7abf0bd5a5bd3672eaba8951644e3a7f0bde69c0\$lut for cells of type $lut.
Using template $paramod$a2280512f80c783e53ab598de7cc957e97033112\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$6af3193cff8959eff535b8dd97d787590af55f14\$lut for cells of type $lut.
Using template $paramod$0859a0dcffd4cb7ffd8a38a94b67bf04026be14a\$lut for cells of type $lut.
Using template $paramod$d4440c9420587a47399b00ace5c2dcd079c36b00\$lut for cells of type $lut.
Using template $paramod$f46d9e946329f8a1a4e24ab75b8c78e9147d8119\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$81c2e473ba00a9cfa3dfe1d42c1fabf3cd269a21\$lut for cells of type $lut.
Using template $paramod$b31998da2f8046c0b546efcf05ba6b8cd0f2e721\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010101 for cells of type $lut.
Using template $paramod$bbb10333e84a7e80f65e1494ebbfbf3f28568fcd\$lut for cells of type $lut.
Using template $paramod$971433bddbc61f1525f04281b9eee4a7d540d922\$lut for cells of type $lut.
Using template $paramod$aab2c1c96155053a74d8f293b11f3528ccec6ef0\$lut for cells of type $lut.
Using template $paramod$e9bd360b04a026b9bb1d85902986a860545a25f3\$lut for cells of type $lut.
Using template $paramod$a63014c5e66a56dc5e61848489c809a59ebe7c34\$lut for cells of type $lut.
Using template $paramod$02859f772411965da36bc7da3b343c9659e6a4ec\$lut for cells of type $lut.
Using template $paramod$2382b0dd4cb27fd4312681c40a6dd179c2a7a26a\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$81841739e80b7c8014a676b2fb631319fe2bee26\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$53d1295e92eea38a512b9ce693445c7190afdb5d\$lut for cells of type $lut.
Using template $paramod$18d02ca832c780114cfc37ca3b9ffeab73e1a45b\$lut for cells of type $lut.
Using template $paramod$2f42a1f7fb414b9dabd1d0dff6eab20c7f299c88\$lut for cells of type $lut.
Using template $paramod$526e4703e3f9e5bf75da836fd3d4410dd76747a6\$lut for cells of type $lut.
Using template $paramod$d883e135b7bd8ae4385e869b4ab8d5786e0934a2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$52953750219effadf43093a566baf492fdd6b6c8\$lut for cells of type $lut.
Using template $paramod$afdefd64f115cbb578c1cd4bf8426ecfef85ae91\$lut for cells of type $lut.
Using template $paramod$35422000b7ad7d405a9e6ff8037e12c749fd704e\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$9264cd5418c36d754331aa206e64072e8dbf89db\$lut for cells of type $lut.
Using template $paramod$f6205ea4d16154fcc0de4d21dff0bd55a57f1ba0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$3eb8805ccd6f91bad96dcbf190c2fb4f72f4634f\$lut for cells of type $lut.
Using template $paramod$1a73a09a6e092620145558f2f06f2243b658a28f\$lut for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod$f45429e380905f064bb0bad3a8bdb941708e63a7\$lut for cells of type $lut.
Using template $paramod$0fe04c0fd15b324f749b962c416e0b9513ecfe45\$lut for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod$d86fec1d6fbb4cbc9c28270d4cc304383c8ff17a\$lut for cells of type $lut.
Using template $paramod$994d90e9e38bc4b3e41611c486bc42235dc97a88\$lut for cells of type $lut.
Using template $paramod$1114d560ed98e9182fe073c9893577168d869f6b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$d0e42eec83ea592bf45e9ec906447f1ed04bd355\$lut for cells of type $lut.
Using template $paramod$d9922e15eb5da1acc26e937540cc16b16c2ad42c\$lut for cells of type $lut.
Using template $paramod$734cd1512f671d92bc4f41153da0d9781801dd98\$lut for cells of type $lut.
Using template $paramod$62f7bcf61fb644d68159968d80ba2b33c27fdb66\$lut for cells of type $lut.
Using template $paramod$5131b4ee476db6d916b2fdd01abc8f043ad88f66\$lut for cells of type $lut.
Using template $paramod$b40080b643baa8bb528ec249e10d82b2d80dfed9\$lut for cells of type $lut.
Using template $paramod$5a60a2ac5fa0ff621c08e76879e9692734937783\$lut for cells of type $lut.
Using template $paramod$ad589f32cf82541cff522eaada64c7e4809202af\$lut for cells of type $lut.
Using template $paramod$408c1a83c83ea53dccc5ee8c3f0041eeefdcb163\$lut for cells of type $lut.
Using template $paramod$cd993efb9e63a4c10845b014d76174a67faa06cd\$lut for cells of type $lut.
Using template $paramod$02750f8d568bd99efbda01449a05e084a3143ca8\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$eabceb8763c2c07d367133654a131b7c876df3a8\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$7d813eb49700f971f2635a434700eafdfa816bc3\$lut for cells of type $lut.
Using template $paramod$ddace04fba544e6adc4cdda6a50048ddd7c111af\$lut for cells of type $lut.
Using template $paramod$fda6887b37f599177ed9cb69271d882b63df7e66\$lut for cells of type $lut.
Using template $paramod$a7d9b4ab0321c8125e5b895183ee6b84cdb4a31b\$lut for cells of type $lut.
Using template $paramod$8d1e80816a0953225bf297efcddafe574bd9a102\$lut for cells of type $lut.
Using template $paramod$169e3ff199948acb6289d60ee69a6cbdb1d4057e\$lut for cells of type $lut.
Using template $paramod$adc0b354bb960519a616db7423a6274fc380540e\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$7e8d331d1e06632d29fbdf6c3afc2de1856d3c67\$lut for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod$d1731bbed87491da89e77b2350f207c2d69fc731\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$d0fe7556ef6223c467da0bfe5c6e9cca5c3fc0e5\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$782961deb8dc512aef835b73aa3765da3ab3c15c\$lut for cells of type $lut.
Using template $paramod$3e4b054a1679c2b7acd0815e54e5ae8b17775a1c\$lut for cells of type $lut.
Using template $paramod$0194c0078616f389ecfa855718b2074839b66531\$lut for cells of type $lut.
Using template $paramod$676e4d4a0342b8cd2744e1d4fc8eea0b0c779dcd\$lut for cells of type $lut.
Using template $paramod$20235ca863361fbc253329cfc7eeea38c77404dc\$lut for cells of type $lut.
Using template $paramod$9b0677abcdd874bea0b97530ccc196c46487016e\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod$238ce1c123ccd5620a61157a2c5350ee6fc4d4ff\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$373d637619c29cb9150902df9528107e5f3b8288\$lut for cells of type $lut.
Using template $paramod$1be3a10aca64bc8b3d140a9dcfb9bac7a6744be9\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$d1811e0583d804ea16898fbc4fbb7d65fdabce34\$lut for cells of type $lut.
Using template $paramod$8384e66d408d22ab39dfb451efb7879731befeb8\$lut for cells of type $lut.
Using template $paramod$28d36ebab702b2e11720b009ac3f5ac749fa5d73\$lut for cells of type $lut.
Using template $paramod$ef423ce8bffc6b734abf7282a22c7b6c0518dbb1\$lut for cells of type $lut.
Using template $paramod$1b71935ad618c74fa723f935f060e81a5421889c\$lut for cells of type $lut.
Using template $paramod$66bc065539321c4dea8166644e317a448e4a37af\$lut for cells of type $lut.
Using template $paramod$f096cbf7810c657d1faa5ebcdd247974deedeea6\$lut for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod$f8e1bdecd38a1f2a88371fc52b96bff86506a2c7\$lut for cells of type $lut.
Using template $paramod$7c9b07f152d8eb06c94fd2f48e97de07bf50f98b\$lut for cells of type $lut.
Using template $paramod$1c1208033be3248b429eac87e081dceb4829c767\$lut for cells of type $lut.
Using template $paramod$be1700c41a2f700f2a939becf8cc1e64148c0983\$lut for cells of type $lut.
Using template $paramod$a8b74aeb973ecaf1370bf965b32fc910e37bcd44\$lut for cells of type $lut.
Using template $paramod$13f1d5d97d4ac3b8b1def7f05bafc2dcf82b3955\$lut for cells of type $lut.
Using template $paramod$2eb6e6a20db58c35193dfb33ef3f0c5e6e2591c6\$lut for cells of type $lut.
Using template $paramod$8fd8efe0a495790cc9ddc97266933ea8a8cd7b45\$lut for cells of type $lut.
Using template $paramod$1a0bf6a2024582c33687c0149caac1d863a39438\$lut for cells of type $lut.
Using template $paramod$b719b798d303e4871d3368594e9178e4472a6506\$lut for cells of type $lut.
Using template $paramod$8c30564d82186e7a7e9d8e562aef8af13495960e\$lut for cells of type $lut.
Using template $paramod$65d5d5c1e01bf41ee659754efba932f3d99198e5\$lut for cells of type $lut.
Using template $paramod$ba811e6c5a4ccc4f2008568c764c761aafa44dca\$lut for cells of type $lut.
Using template $paramod$b45bd408e022071431e9cdef9f4acc7dde296829\$lut for cells of type $lut.
Using template $paramod$0524d8a0bbb955b473e94929fd2a52442c9afd24\$lut for cells of type $lut.
Using template $paramod$779a912c2e61b008e2ba6da235f91f694eb7e6d7\$lut for cells of type $lut.
Using template $paramod$563acb1d1bf0bfccf04043ec6296c30447924991\$lut for cells of type $lut.
Using template $paramod$11760986bce1c2a78a14bd81f864ba3638488e95\$lut for cells of type $lut.
Using template $paramod$57d4c7c8264bfbcb505140ab324782388abb7c4b\$lut for cells of type $lut.
Using template $paramod$39a3022e55aa03d0b5478da3a6d9fcb662c62e56\$lut for cells of type $lut.
Using template $paramod$5276847af7cf7a7cb456b022dbba5e8af7e3b925\$lut for cells of type $lut.
Using template $paramod$a1cfe99817bd6d57a83efd5e1c3fc26a743b692f\$lut for cells of type $lut.
Using template $paramod$f5c5b56521a6811444a94cf8aec11258bf0a108d\$lut for cells of type $lut.
Using template $paramod$926caad99aec068288edc71f1f176bb063d4e26f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000111 for cells of type $lut.
Using template $paramod$3493d685a5805df87ccda493d759645d38954d15\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$033940914b48bd91e9c76770021d3e6fd49ac34a\$lut for cells of type $lut.
Using template $paramod$c52825d0b1a0cfc6362b36af6d13149a97d3e424\$lut for cells of type $lut.
Using template $paramod$f3ada871809f362efd8eb0c4fb952bb5c98f0750\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$fd9c952ad9063b8ce073cc4f935ca87c6b07e283\$lut for cells of type $lut.
Using template $paramod$72043e0aa7fa64cb454e3c2ca3dbe1636171896a\$lut for cells of type $lut.
Using template $paramod$9f90aa346bc499329751d63a7adc41dfcebd55ef\$lut for cells of type $lut.
Using template $paramod$2ad64970df49e825d35fc9ad22864ded82b46f9a\$lut for cells of type $lut.
Using template $paramod$b04f0510561c4bbb703d2e39c6eca682b920366b\$lut for cells of type $lut.
Using template $paramod$3a0a392069bc969f34c65c546a8c56fbbb67e282\$lut for cells of type $lut.
Using template $paramod$31f0a66a4b242b524303bfb4ac95c05ad74158f8\$lut for cells of type $lut.
Using template $paramod$e01a027fedb28671a20c130493a89c7afd4e87d3\$lut for cells of type $lut.
Using template $paramod$85cdd346cf30cb99977acb74894cbed96bbc934a\$lut for cells of type $lut.
Using template $paramod$529baf23c57d5ed871d62e547aaaa8bb53e364ce\$lut for cells of type $lut.
Using template $paramod$9c7a0393c7c9b252aaf16d6445c56af6202f2e82\$lut for cells of type $lut.
Using template $paramod$06e62c2045624c211a1abe4f2f36c8f22c688165\$lut for cells of type $lut.
Using template $paramod$09deb89cf77b6e37f6ed7fef8d797dc05c0b2eee\$lut for cells of type $lut.
Using template $paramod$47d363ae7b1a0e81207e02fe31af85b6bf36a2ac\$lut for cells of type $lut.
Using template $paramod$01c5e0f3cefd4d28da193f81838a137e30a201d6\$lut for cells of type $lut.
Using template $paramod$d546db88fc169832512e499a9cdf9a41b89ab74e\$lut for cells of type $lut.
Using template $paramod$39b0d201a18bed5573a88835da3f39d40814d360\$lut for cells of type $lut.
Using template $paramod$7c8e46fc80ae50fa71871bd3727cdeb9f6a7f434\$lut for cells of type $lut.
Using template $paramod$4834046533425f54583d6bd31e49deb63455e1a5\$lut for cells of type $lut.
Using template $paramod$b7685cb0c8a6753256bc84bc31d36a443c15fab7\$lut for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod$332530260df33f1e6567b344a898a29636fd4f0f\$lut for cells of type $lut.
Using template $paramod$9fc14cb0ba5120a1da0c687a9fb19472f206fdfe\$lut for cells of type $lut.
Using template $paramod$afbce7d08c913b4d71960a159f56cdc82647a8e4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$684678481d261f1b3e68acd0931b217bad3edc9a\$lut for cells of type $lut.
Using template $paramod$c0a4d9417755c1bd5ec9a311325000b8535d91ad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$1d411fd062123bc39f2e308cfceb6b39df8f57b9\$lut for cells of type $lut.
Using template $paramod$73c51ac632ca480a14559cb3521f1c11791d9097\$lut for cells of type $lut.
Using template $paramod$52ebd6a47cea9af749100220a01931167b451a3f\$lut for cells of type $lut.
Using template $paramod$6878f41bb48730ac65519506065fb579fc81027b\$lut for cells of type $lut.
Using template $paramod$e6dc0c1f0fc6e12a0ccbd0be7bd9876b5d21abbc\$lut for cells of type $lut.
Using template $paramod$168aeef333136ff4f1f2ce3a62c8b6d1ffc7dc28\$lut for cells of type $lut.
Using template $paramod$2b4c3576dc50d5618ece8d9fba867e9d3b724efa\$lut for cells of type $lut.
Using template $paramod$299ef9acd1835d2eebd8a3881ccb5ed573a228da\$lut for cells of type $lut.
Using template $paramod$7f7628783c4bce0004ad33a8b19eb7a98c9598af\$lut for cells of type $lut.
Using template $paramod$0b388c01cdeea492eee091ff8478270f3fd98c7f\$lut for cells of type $lut.
Using template $paramod$ff538ccf6881e2ae45b162253b6e0a1ec3444a18\$lut for cells of type $lut.
Using template $paramod$f26d2c80a86ad11209b79da04adba94fb1ea8ba0\$lut for cells of type $lut.
Using template $paramod$1c8aea8d15a8caa53bcd106d813c48ea86657836\$lut for cells of type $lut.
Using template $paramod$0f321fbc35ab60cc9b1f13bcbf4423cb3e15af29\$lut for cells of type $lut.
Using template $paramod$6b2d68f7a41e880df45686f55b7b5d1e9ad53f5c\$lut for cells of type $lut.
Using template $paramod$ad731eb8368f0b498267061e6dd1d321bb411a69\$lut for cells of type $lut.
Using template $paramod$37f494dcc63f6757d907b5936f5f221c6c5e4340\$lut for cells of type $lut.
Using template $paramod$58bd588a49a6a3b9d057d75f907cb4932e1635f6\$lut for cells of type $lut.
Using template $paramod$ffc80aea4aa44f0166b2d4713ba5912f56e92991\$lut for cells of type $lut.
Using template $paramod$4f78d0febf87e5fa840f94f846deca40481ce8b3\$lut for cells of type $lut.
Using template $paramod$a5dd9ee10fc2202a29791f7d68d4afcce241aee5\$lut for cells of type $lut.
Using template $paramod$9c6e6a10ea00e5b0682f6243b802d7839a398197\$lut for cells of type $lut.
Using template $paramod$2413346fa47cf8a80719d09e44e1141a42fc9c2e\$lut for cells of type $lut.
Using template $paramod$f7cbd8f5974233f70d25c33ef6a692898e4f6377\$lut for cells of type $lut.
Using template $paramod$f2c7724a377078ae43fd5553a51bddaa7059bce8\$lut for cells of type $lut.
Using template $paramod$55a1a8be46cce71f91659fdf02b9158f1abb27a9\$lut for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$7df94b8b4e1c206cef77c3584a49b5bbbe2a6ecf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$f8e6f0da29c215071ce876a6530a409d298dc72f\$lut for cells of type $lut.
Using template $paramod$a50f1c411368f4b7b265d7b2b2e06d07b921e41d\$lut for cells of type $lut.
Using template $paramod$8c921489aa751c85cc83db0f0e74608587be4df1\$lut for cells of type $lut.
Using template $paramod$feac1814a13647ff95d85e23385825c648d6c2ee\$lut for cells of type $lut.
Using template $paramod$b45e5cb971154e30a797eecb0461619c3eeae12d\$lut for cells of type $lut.
Using template $paramod$f71cd4e12d252829a6db80287a07ec7f20c3e099\$lut for cells of type $lut.
Using template $paramod$ab31224cfd003f594215dc24d14c02fcfba243e8\$lut for cells of type $lut.
Using template $paramod$7da7d7bde408365fd9edb48231a23e665dbb7ed8\$lut for cells of type $lut.
Using template $paramod$0e7ce19e5da99c6675c7a5220f7cc55270b24ac0\$lut for cells of type $lut.
Using template $paramod$240e171f8bae87a2fe4bee672a3055fa35afe320\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$a82a699dba54b8465366aeb90aba90d3d29adde0\$lut for cells of type $lut.
Using template $paramod$f28aede8a07a53ff316cc6f8627c7d8a2337a88a\$lut for cells of type $lut.
Using template $paramod$24c1f285a7007833594bc4fc8c3ab552b1afa454\$lut for cells of type $lut.
Using template $paramod$af08867fe0bde4918ae8f1ec2010b6efc74a2fdc\$lut for cells of type $lut.
Using template $paramod$76be5a5900f80a135961ac09b0cf70ec8308af2c\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$f6679f526a60a0c1a198cb43515c07945a39064b\$lut for cells of type $lut.
Using template $paramod$ad20fca3806784b4dd796f318b5f4e40828faf1e\$lut for cells of type $lut.
Using template $paramod$28c616faf5f033f157ae11b466e19ab28d454f1e\$lut for cells of type $lut.
Using template $paramod$3e66300a26d5f44b1f8dad2d13e5201751763d8b\$lut for cells of type $lut.
Using template $paramod$54a853cac0e65b945d96d7dd0e9cca8bb9f3a21e\$lut for cells of type $lut.
Using template $paramod$79432275bae6ba3c8cd1f392a278d15c8c6d8c77\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$4d4e2d7d027074c89629db17e6cea623de4efeac\$lut for cells of type $lut.
Using template $paramod$f2c0198ac97688f9b67c617986f239ff973bc8cf\$lut for cells of type $lut.
Using template $paramod$c6a647d1c43f47262437ab66f342975e9aae65ea\$lut for cells of type $lut.
Using template $paramod$5abde227d061492e59b0a850eb38c29e16c220fb\$lut for cells of type $lut.
Using template $paramod$d74775fb59effa7823007c6a774a208e2acb783b\$lut for cells of type $lut.
Using template $paramod$f610396a8c1614f373f4d73e3d1e988bc93e396c\$lut for cells of type $lut.
Using template $paramod$dd7c1583fe0ade167c7826c594e5d16b758a72fe\$lut for cells of type $lut.
Using template $paramod$9127f0c5ab1fac81299021b00a76a42d071c0b62\$lut for cells of type $lut.
Using template $paramod$573c926aab45deda3da7aed30e518131c5f57ab2\$lut for cells of type $lut.
Using template $paramod$744da8e8bca0d2417e0ccbdce63fc4e97aa7aef4\$lut for cells of type $lut.
Using template $paramod$152092b0e46726ce86dbf05f1d088f7a060a6e9b\$lut for cells of type $lut.
Using template $paramod$8f3432be7db0e20ab336d038b8585921e78ab13b\$lut for cells of type $lut.
Using template $paramod$027b71830bd0fbfb04ad11206c5a0de76ed9d3f5\$lut for cells of type $lut.
Using template $paramod$556f1f8248d46fa51b5b76abd5030284b37d6d0e\$lut for cells of type $lut.
Using template $paramod$9ddb333d5a26c02b5234f9b06a44c1b4b62646e8\$lut for cells of type $lut.
Using template $paramod$5ca4b351ea6589c0a1de9754af691df6a3e8b384\$lut for cells of type $lut.
Using template $paramod$2909318d3edc9bf360665f30da0dddfd5e9e4e09\$lut for cells of type $lut.
Using template $paramod$7a0aee3adb309e89e6070cce0c7b5c7a7a41348e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$8d7e631403a80aa650e318c82a10887417c8ada0\$lut for cells of type $lut.
Using template $paramod$7f8dcbbcc0931c3398304053d9bb53ce1acb1b1f\$lut for cells of type $lut.
Using template $paramod$1849d03eb81ed839a5be62a810f5f32713b61767\$lut for cells of type $lut.
Using template $paramod$8ec043d8be6a991c97c9a3ee14aa3655f215f95c\$lut for cells of type $lut.
Using template $paramod$aa79b66d99645f2c6597509fe375a3cb97da6e36\$lut for cells of type $lut.
Using template $paramod$ba59a6d7bdd6d02f4b42514d6555f56c3dbd5a43\$lut for cells of type $lut.
Using template $paramod$653e694a78d65e780a8d3daa4f26976afb6c7746\$lut for cells of type $lut.
Using template $paramod$e1ac894a2723e96ae103a1941dc871fbb0ccd216\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$1b52cf3a695c7d1cc16bb8e44d7453092417528f\$lut for cells of type $lut.
Using template $paramod$3e2b2f2a0b9496fddcb115d25f9eae602807e606\$lut for cells of type $lut.
Using template $paramod$5dc745bb48e2cf535179547ba13f0fe5364d6d54\$lut for cells of type $lut.
Using template $paramod$9445127d802ec9df177dc81837ec04f317b2aa3e\$lut for cells of type $lut.
Using template $paramod$c1747c0c7cb4f86c4813433b4d41103fb3fe105a\$lut for cells of type $lut.
Using template $paramod$21f957a7073b1ba634cad0df400394ca323de2fc\$lut for cells of type $lut.
Using template $paramod$af475a17a179c74dd633141ff4689118c8449e9e\$lut for cells of type $lut.
Using template $paramod$28b45c3becc280b30b89f2172aa9d7870b76ed8d\$lut for cells of type $lut.
Using template $paramod$228e7968edba70367b6b9d961263814d7f7c612c\$lut for cells of type $lut.
Using template $paramod$6f0395a271e91b70083b0eb86f0caf0d65efb08f\$lut for cells of type $lut.
Using template $paramod$04f2620409690120156283f23edfe564f58c6ef7\$lut for cells of type $lut.
Using template $paramod$120088a2dabfb34b7e72468a5000a9522943db55\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011101 for cells of type $lut.
Using template $paramod$aa7c9fa19368523c5f93168fe49ca882dc226955\$lut for cells of type $lut.
Using template $paramod$5307f40f1b453046eb68ee1a10c3f82d605af6fc\$lut for cells of type $lut.
Using template $paramod$826d4fba61f8b6b8d18c13232c0323a45a626066\$lut for cells of type $lut.
Using template $paramod$2eb42753f763a85e7d9571a635090a0d468dd679\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$e9157fbe25cb44c46b243bec837e022be1508deb\$lut for cells of type $lut.
Using template $paramod$e77dca5e1fc847f9005cbcedebcb6de355499010\$lut for cells of type $lut.
Using template $paramod$34ccb0403abd26609d9a7a8ea9a44b40cc4b3caf\$lut for cells of type $lut.
Using template $paramod$13dcbd8817e75f1babb5aeb307ea938abe4ef4ec\$lut for cells of type $lut.
Using template $paramod$f2f41441edad783a06f5cd6b11dca5ba59cab1ff\$lut for cells of type $lut.
Using template $paramod$d017bb1379dfae5c49537b3fbd1cdc27d426859f\$lut for cells of type $lut.
Using template $paramod$c1b977f1abfccac76ffad3b7a9fb33f65fa45576\$lut for cells of type $lut.
Using template $paramod$1b9112879b44d8bd06bb18f745e1efd8ce977eed\$lut for cells of type $lut.
Using template $paramod$29a4d0c6059d145fabdbb76bae6a8ddc030e61d0\$lut for cells of type $lut.
Using template $paramod$512255fe99ac01283a4af777a290480422ff1d9f\$lut for cells of type $lut.
Using template $paramod$a56cc1380a3f51ce3bfe0cd6b0c2704227c2b267\$lut for cells of type $lut.
Using template $paramod$3be7288156b1a35d7d9337d4f33708e75a5bfb48\$lut for cells of type $lut.
Using template $paramod$7883547d2f6fa3a72889a7bcc143227c28d0318a\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod$4d9437f28ee827cf4006287c53ecaa1266100fca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod$36a8fb903db73bebd59e458b0947366ac6911508\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110011 for cells of type $lut.
Using template $paramod$c50474b30f5187625746303b03b42bd612263de0\$lut for cells of type $lut.
Using template $paramod$ee82f1504b2c48e70160208feb4e1f2a1b612b8d\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110010 for cells of type $lut.
Using template $paramod$21972aba492c5b553603646857b0e8e9aca32466\$lut for cells of type $lut.
Using template $paramod$4cb74d480717148d962cec1f01dbc0e968d43d03\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~10618 debug messages>

31.45. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in tt_ecp5_wrapper.
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84880.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85051.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85005.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84898.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$8598.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8587.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8587.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5209_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5454.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7658[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7658[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7658[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7653[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7653[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7664[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7664[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7656[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7656[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7655[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7655[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7655[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7654[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7654[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7659[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7659[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7663[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7663[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7662[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7662[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7661[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7661[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7660[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7660[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$opt_dff.cc:272:make_patterns_logic$6823.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$opt_dff.cc:272:make_patterns_logic$6804.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4823.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84989.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4737.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4737.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7657[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7657[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[1][3:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[1][3:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$3012.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2716.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2676.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2676.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84749.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3002.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84788.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84792.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5647.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6787.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.cpu.i_core.data_in.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6960.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6960.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6960.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6954.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6950.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6950.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6950.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2737.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2737.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2737.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6244.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6239.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$1894.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$1886.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$1886.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2601.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2597.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2597.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2597.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2566.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2523.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2519.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2519.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2519.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2513.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2509.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2472.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2464.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2439.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2434.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2434.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2434.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2425.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2425.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2425.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2396.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2396.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2373.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2373.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2373.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2365.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2365.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2365.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2343.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2343.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2337.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2333.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2333.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2333.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2326.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2322.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2315.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2315.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2315.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2305.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2305.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2305.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2278.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2278.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2213.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2213.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2213.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2205.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2190.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2177.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2177.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2130.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2130.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2116.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2082.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2082.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2082.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2072.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2072.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2047.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2018.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2018.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$1976.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$1886.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$1886.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$1894.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$1905.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$1923.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$1976.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$1982.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$1993.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2018.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2018.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2028.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2039.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2047.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2058.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2072.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2072.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2082.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2086.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2102.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2116.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2130.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2130.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2145.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2123.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2158.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2177.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2177.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2190.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2190.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2201.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2213.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2217.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2231.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2245.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2252.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2252.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2263.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2263.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2268.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2278.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2285.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2285.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2305.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2315.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2322.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2333.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2343.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2365.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2373.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2380.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2408.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2418.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2425.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2434.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2439.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2439.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2454.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2454.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2464.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2464.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2482.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2509.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2519.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2533.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2543.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2548.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2548.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2577.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2597.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2607.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2620.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2620.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2665.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2676.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2716.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$2716.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$2837.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$3254.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2787.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2796.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2796.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2852.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2787.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2870.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2874.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2892.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2892.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3002.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3012.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$3002.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6732.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3072.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84820.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$2861.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$2870.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3271.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84875.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84766.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3451.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3463.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3474.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3479.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6248.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3508.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3550.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3606.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3610.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3658.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$3677.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3700.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3716.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3728.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$3733.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.cpu.i_core.data_in.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5593.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3737.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4089.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4096.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84851.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4156.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4502.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4580.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$4598.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4631.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4647.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$4750.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4823.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$4823.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7660[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7662[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$4981.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$5040.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7653[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5217.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84812.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5287.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y[0].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5399.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$5415.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5454.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5454.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5470.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5495.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$5605.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$5622.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5689.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5696.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$5748.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$5915.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5988.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.$0\gpio_out_sel[1:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6103.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6122.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6127.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6181.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6192.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6198.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$6216.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6225.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84803.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6333.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84771.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6618.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6686.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6714.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6723.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6736.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$6760.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6764.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6922.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6950.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$6964.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84843.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3290.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84814.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7354.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7358.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7374.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84807.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7495.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84800.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7575.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[8].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7732.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[9].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[10].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7791.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[11].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84786.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7853.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[12].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84781.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[13].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84778.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84776.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[15].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84773.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8296.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84750.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8474.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8474.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8492.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8492.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8510.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8510.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8528.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8528.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8563.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8587.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8598.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8598.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8606.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8613.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$aiger84743$8666.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8700.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84989.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7654[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7659[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7663[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7656[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7664[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5331_Y.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.$0\gpio_out_sel[1:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[14].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7657[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$5856.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[2].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5209_Y[0].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5209_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y[0].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5287_Y[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.\i_core.\i_registers.$0\registers[1][3:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[10].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[11].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[12].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[13].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[14].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[15].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[8].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$0$lookahead\qspi_data_buf$698[31:0]$701[9].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.$procmux$5808_Y.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][10].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][11].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][12].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][13].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][14].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][15].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][16].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][17].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][18].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][2].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][4].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][8].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\mem.\q_ctrl.$0\addr[23:0][9].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$5921.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$4877.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$auto$wreduce.cc:514:run$7661[0].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.cpu.address_ready.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84774.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84808.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.cpu.i_core.data_in.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[1].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[24].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[2].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut\i_tinyQV.i_tinyqv.mem.q_ctrl.addr_in[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$auto$opt_dff.cc:272:make_patterns_logic$6857.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$3018.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut\i_tinyQV.qspi_clk_out.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$6828.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut\i_tinyQV.qspi_clk_out.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$84744$lut\uo_out[7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84754.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84755.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84756.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84757.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84758.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84766.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84769.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84769.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84771.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84773.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84774.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84775.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84776.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84777.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84778.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84780.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84781.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$7853.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84786.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84788.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84789.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84792.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84795.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84795.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84800.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84803.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84807.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84808.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84810.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84810.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84812.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84814.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84818.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84818.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84820.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84824.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84839.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84843.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84851.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84853.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84858.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84858.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84875.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$84744$lut$aiger84743$8715.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$84744$lut$aiger84743$8700.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84884.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84888.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84898.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84902.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84902.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84907.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84907.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84931.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84935.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84935.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84938.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84945.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84951.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84976.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84981.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84989.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84990.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84992.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84995.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84998.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$84998.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85006.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85012.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85026.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85028.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$flatten\i_tinyQV.\i_tinyqv.\cpu.$procmux$5209_Y[0].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85038.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85042.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85052.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$84744$lut$aiger84743$3012.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$85060.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
Removed 0 unused cells and 4759 unused wires.

31.46. Executing AUTONAME pass.
Renamed 190928 objects in module tt_ecp5_wrapper (185 iterations).
<suppressed ~7710 debug messages>

31.47. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `tt_ecp5_wrapper'. Setting top module to tt_ecp5_wrapper.

31.47.1. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper

31.47.2. Analyzing design hierarchy..
Top module:  \tt_ecp5_wrapper
Removed 0 unused modules.

31.48. Printing statistics.

=== tt_ecp5_wrapper ===

        +----------Local Count, excluding submodules.
        | 
     3760 wires
    11911 wire bits
     3760 public wires
    11911 public wire bits
        5 ports
       26 port bits
      192 cells
        8   $_TBUF_
      183   $scopeinfo
        1   MULT18X18D
     4985 submodules
      134   CCU2C
      162   L6MUX21
     2762   LUT4
      543   PFUMX
     1384   TRELLIS_FF

=== design hierarchy ===

        +----------Count including submodules.
        | 
      192 tt_ecp5_wrapper

        +----------Count including submodules.
        | 
     3760 wires
    11911 wire bits
     3760 public wires
    11911 public wire bits
        5 ports
       26 port bits
        - memories
        - memory bits
        - processes
      192 cells
        8   $_TBUF_
      183   $scopeinfo
        1   MULT18X18D
     4985 submodules
      134   CCU2C
      162   L6MUX21
     2762   LUT4
      543   PFUMX
     1384   TRELLIS_FF

31.49. Executing CHECK pass (checking for obvious problems).
Checking module tt_ecp5_wrapper...
Found and reported 0 problems.

31.50. Executing JSON backend.

Warnings: 3 unique messages, 4 total
End of script. Logfile hash: f6c0f678f8, CPU: user 11.54s system 0.09s, MEM: 229.94 MB peak
Yosys 0.56+197 (git sha1 d4c4b2106, aarch64-linux-gnu-g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 17% 1x abc9_exe (2 sec), 14% 32x opt_clean (1 sec), ...
